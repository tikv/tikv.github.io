initSidebarItems({"enum":[["RpnFnRefEvaluableType","Parses an evaluable type like `Option<&T>`, `Option<JsonRef>` or `Option<BytesRef>`. Option<&T> corresponds to `Ref`. Option corresponds to `Type`."]],"fn":[["generate_downcast_metadata",""],["generate_init_metadata_fn",""],["generate_metadata_type_checker",""],["get_vargs_buf","Get corresponding VARGS buffer Json or JsonRef will be stored in `VARG_PARAM_BUF_JSON_REF` Bytes or BytesRef will be stored in `VARG_PARAM_BUF_BYTES_REF`"],["get_vectoried_type","Transform copr framework type into vectorized function type For example, `Json` in copr framework will be transformed into `JsonRef` before passing to vectorized functions."],["is_bytes","Checks if parameter type is Bytes"],["is_json","Checks if parameter type is Json"],["transform","Entry point for the `rpn_fn` attribute."]],"mod":[["kw",""]],"struct":[["NormalRpnFn","Generates an RPN fn which is neither `varg` or `raw_varg`."],["RawVargsRpnFn","Generates a `raw_varg` RPN fn."],["RpnFnAttr","Parses an attribute like `#[rpn_fn(varg, capture = [ctx, output_rows])`."],["RpnFnEvaluableType","Parses an evaluable type like `Option<T>`."],["RpnFnSignatureParam","Parses a function signature parameter like `val: &Option<T>`."],["RpnFnSignatureReturnGuardType","Parses a function signature return type like `Result<SomeGuard>`."],["RpnFnSignatureReturnType","Parses a function signature return type like `Result<Option<T>>`."],["ValidatorFnGenerator","Helper utility to generate RPN function validator function."],["VargsRpnFn","Generates a `varg` RPN fn."],["VargsRpnFnSignatureParam","Parses a function signature parameter like `val: &[&Option<T>]`."]]});