initSidebarItems({"constant":[["DEFAULT_TIMEOUT_SECS",""],["SEEK_BOUND",""],["TLS_ENGINE_ANY",""]],"enum":[["ErrorInner",""],["Modify",""],["ScanMode",""]],"fn":[["destroy_tls_engine","Destroy the thread local engine."],["drop_snapshot_callback",""],["set_tls_engine","Set the thread local engine."],["snapshot","Get a snapshot of `engine`."],["with_tls_engine","Execute the closure on the thread local engine."],["write_modifies","Write modifications into a `BaseRocksEngine` instance."]],"mod":[["btree_engine",""],["cursor",""],["perf_context",""],["rocksdb_engine",""],["stats",""]],"struct":[["BTreeEngine","The BTreeEngine(based on `BTreeMap`) is in memory and only used in tests and benchmarks. Note: The `snapshot()` and `async_snapshot()` methods are fake, the returned snapshot is not isolated, they will be affected by the later modifies."],["BTreeEngineIterator",""],["BTreeEngineSnapshot",""],["CbContext",""],["CfStatistics","Statistics collects the ops taken when fetching data."],["Cursor",""],["CursorBuilder","A handy utility to build a snapshot cursor according to various configurations."],["Error",""],["FlowStatistics",""],["PerfStatisticsDelta","Store statistics we need. Data comes from RocksDB's `PerfContext`. This statistics store delta values between two instant statistics."],["PerfStatisticsInstant","Store statistics we need. Data comes from RocksDB's `PerfContext`. This statistics store instant values."],["RocksEngine","The RocksEngine is based on `RocksDB`."],["RocksSnapshot",""],["SnapContext",""],["Statistics",""],["StatisticsSummary",""],["TestEngineBuilder","A builder to build a temporary `RocksEngine`."],["WriteData",""]],"trait":[["Engine","Engine defines the common behaviour for a storage engine type."],["FlowStatsReporter",""],["Iterator",""],["Snapshot",""]],"type":[["Callback",""],["ExtCallback",""],["Result",""]]});