initSidebarItems({"enum":[["Command","Store Transaction scheduler commands."]],"mod":[["acquire_pessimistic_lock",""],["check_secondary_locks",""],["check_txn_status",""],["cleanup",""],["commit",""],["macros",""],["mvcc_by_key",""],["mvcc_by_start_ts",""],["pause",""],["pessimistic_rollback",""],["prewrite",""],["prewrite_pessimistic",""],["resolve_lock",""],["resolve_lock_lite",""],["resolve_lock_readphase",""],["rollback",""],["scan_lock",""],["txn_heart_beat",""]],"struct":[["AcquirePessimisticLock","Acquire a Pessimistic lock on the keys."],["CheckSecondaryLocks","Check secondary locks of an async commit transaction."],["CheckTxnStatus","Check the status of a transaction. This is usually invoked by a transaction that meets another transaction's lock. If the primary lock is expired, it will rollback the primary lock. If the primary lock exists but is not expired, it may update the transaction's `min_commit_ts`. Returns a `TxnStatus` to represent the status."],["Cleanup","Rollback mutations on a single key."],["Commit","Commit the transaction that started at `lock_ts`."],["MvccByKey","Retrieve MVCC information for the given key."],["MvccByStartTs","Retrieve MVCC info for the first committed key which `start_ts == ts`."],["Pause","Testing functionality: Latch the given keys for given duration."],["PessimisticRollback","Rollback pessimistic locks identified by `start_ts` and `for_update_ts`."],["Prewrite","The prewrite phase of a transaction. The first phase of 2PC."],["PrewritePessimistic","The prewrite phase of a transaction using pessimistic locking. The first phase of 2PC."],["ResolveLock","Resolve locks according to `txn_status`."],["ResolveLockLite","Resolve locks on `resolve_keys` according to `start_ts` and `commit_ts`."],["ResolveLockReadPhase","Scan locks for resolving according to `txn_status`."],["Rollback","Rollback from the transaction that was started at `start_ts`."],["ScanLock","Scan locks from `start_key`, and find all locks whose timestamp is before `max_ts`."],["TxnHeartBeat","Heart beat of a transaction. It enlarges the primary lock's TTL."],["TypedCommand",""]],"trait":[["CommandExt",""]]});