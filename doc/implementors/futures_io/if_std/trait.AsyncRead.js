(function() {var implementors = {};
implementors["async_speed_limit"] = [{"text":"impl&lt;R:&nbsp;<a class=\"trait\" href=\"futures_io/if_std/trait.AsyncRead.html\" title=\"trait futures_io::if_std::AsyncRead\">AsyncRead</a>, C:&nbsp;<a class=\"trait\" href=\"async_speed_limit/clock/trait.Clock.html\" title=\"trait async_speed_limit::clock::Clock\">Clock</a>&gt; <a class=\"trait\" href=\"futures_io/if_std/trait.AsyncRead.html\" title=\"trait futures_io::if_std::AsyncRead\">AsyncRead</a> for <a class=\"struct\" href=\"async_speed_limit/limiter/struct.Resource.html\" title=\"struct async_speed_limit::limiter::Resource\">Resource</a>&lt;R, C&gt;","synthetic":false,"types":["async_speed_limit::limiter::Resource"]}];
implementors["encryption"] = [{"text":"impl&lt;R:&nbsp;<a class=\"trait\" href=\"futures_io/if_std/trait.AsyncRead.html\" title=\"trait futures_io::if_std::AsyncRead\">AsyncRead</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>&gt; <a class=\"trait\" href=\"futures_io/if_std/trait.AsyncRead.html\" title=\"trait futures_io::if_std::AsyncRead\">AsyncRead</a> for <a class=\"struct\" href=\"encryption/io/struct.EncrypterReader.html\" title=\"struct encryption::io::EncrypterReader\">EncrypterReader</a>&lt;R&gt;","synthetic":false,"types":["encryption::io::EncrypterReader"]},{"text":"impl&lt;R:&nbsp;<a class=\"trait\" href=\"futures_io/if_std/trait.AsyncRead.html\" title=\"trait futures_io::if_std::AsyncRead\">AsyncRead</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>&gt; <a class=\"trait\" href=\"futures_io/if_std/trait.AsyncRead.html\" title=\"trait futures_io::if_std::AsyncRead\">AsyncRead</a> for <a class=\"struct\" href=\"encryption/io/struct.DecrypterReader.html\" title=\"struct encryption::io::DecrypterReader\">DecrypterReader</a>&lt;R&gt;","synthetic":false,"types":["encryption::io::DecrypterReader"]},{"text":"impl&lt;R:&nbsp;<a class=\"trait\" href=\"futures_io/if_std/trait.AsyncRead.html\" title=\"trait futures_io::if_std::AsyncRead\">AsyncRead</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>&gt; <a class=\"trait\" href=\"futures_io/if_std/trait.AsyncRead.html\" title=\"trait futures_io::if_std::AsyncRead\">AsyncRead</a> for <a class=\"struct\" href=\"encryption/io/struct.CrypterReader.html\" title=\"struct encryption::io::CrypterReader\">CrypterReader</a>&lt;R&gt;","synthetic":false,"types":["encryption::io::CrypterReader"]}];
implementors["tame_gcs"] = [{"text":"impl&lt;B:&nbsp;<a class=\"trait\" href=\"futures_io/if_std/trait.AsyncRead.html\" title=\"trait futures_io::if_std::AsyncRead\">AsyncRead</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>&gt; <a class=\"trait\" href=\"futures_io/if_std/trait.AsyncRead.html\" title=\"trait futures_io::if_std::AsyncRead\">AsyncRead</a> for <a class=\"struct\" href=\"tame_gcs/objects/struct.Multipart.html\" title=\"struct tame_gcs::objects::Multipart\">Multipart</a>&lt;B&gt;","synthetic":false,"types":["tame_gcs::v1::objects::insert::Multipart"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()