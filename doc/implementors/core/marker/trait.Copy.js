(function() {var implementors = {};
implementors["aho_corasick"] = [{"text":"impl Copy for MatchKind","synthetic":false,"types":[]},{"text":"impl Copy for MatchKind","synthetic":false,"types":[]}];
implementors["ansi_term"] = [{"text":"impl Copy for Prefix","synthetic":false,"types":[]},{"text":"impl Copy for Infix","synthetic":false,"types":[]},{"text":"impl Copy for Suffix","synthetic":false,"types":[]},{"text":"impl Copy for Style","synthetic":false,"types":[]},{"text":"impl Copy for Colour","synthetic":false,"types":[]}];
implementors["arc_swap"] = [{"text":"impl&lt;G:&nbsp;Copy, T:&nbsp;Copy&gt; Copy for MapGuard&lt;G, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Copy, T:&nbsp;Copy, F:&nbsp;Copy&gt; Copy for Map&lt;A, T, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy&gt; Copy for ConstantDeref&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy&gt; Copy for Constant&lt;T&gt;","synthetic":false,"types":[]}];
implementors["arrayvec"] = [{"text":"impl&lt;A:&nbsp;Copy + Array&lt;Item = u8&gt;&gt; Copy for ArrayString&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A::Index: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy&gt; Copy for CapacityError&lt;T&gt;","synthetic":false,"types":[]}];
implementors["async_speed_limit"] = [{"text":"impl Copy for StandardClock","synthetic":false,"types":[]},{"text":"impl Copy for Nanoseconds","synthetic":false,"types":[]}];
implementors["atty"] = [{"text":"impl Copy for Stream","synthetic":false,"types":[]}];
implementors["backtrace"] = [{"text":"impl Copy for PrintFmt","synthetic":false,"types":[]}];
implementors["base64"] = [{"text":"impl Copy for CharacterSet","synthetic":false,"types":[]},{"text":"impl Copy for Config","synthetic":false,"types":[]}];
implementors["batch_system"] = [{"text":"impl Copy for HandleMetrics","synthetic":false,"types":[]}];
implementors["byteorder"] = [{"text":"impl Copy for BigEndian","synthetic":false,"types":[]},{"text":"impl Copy for LittleEndian","synthetic":false,"types":[]}];
implementors["cache_size"] = [{"text":"impl Copy for CacheType","synthetic":false,"types":[]}];
implementors["cargo_metadata"] = [{"text":"impl Copy for DependencyKind","synthetic":false,"types":[]},{"text":"impl Copy for DiagnosticLevel","synthetic":false,"types":[]}];
implementors["cdc"] = [{"text":"impl Copy for DownstreamID","synthetic":false,"types":[]},{"text":"impl Copy for DownstreamState","synthetic":false,"types":[]},{"text":"impl Copy for ConnID","synthetic":false,"types":[]},{"text":"impl Copy for FeatureGate","synthetic":false,"types":[]}];
implementors["chrono"] = [{"text":"impl&lt;T:&nbsp;Copy&gt; Copy for LocalResult&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Copy for FixedOffset","synthetic":false,"types":[]},{"text":"impl Copy for Local","synthetic":false,"types":[]},{"text":"impl Copy for Utc","synthetic":false,"types":[]},{"text":"impl Copy for NaiveDate","synthetic":false,"types":[]},{"text":"impl Copy for IsoWeek","synthetic":false,"types":[]},{"text":"impl Copy for NaiveTime","synthetic":false,"types":[]},{"text":"impl Copy for NaiveDateTime","synthetic":false,"types":[]},{"text":"impl&lt;Tz:&nbsp;TimeZone&gt; Copy for Date&lt;Tz&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Tz as TimeZone&gt;::Offset: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Copy for SecondsFormat","synthetic":false,"types":[]},{"text":"impl&lt;Tz:&nbsp;TimeZone&gt; Copy for DateTime&lt;Tz&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Tz as TimeZone&gt;::Offset: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Copy for Pad","synthetic":false,"types":[]},{"text":"impl Copy for ParseError","synthetic":false,"types":[]},{"text":"impl Copy for Weekday","synthetic":false,"types":[]}];
implementors["chrono_tz"] = [{"text":"impl Copy for Tz","synthetic":false,"types":[]}];
implementors["clap"] = [{"text":"impl Copy for AppSettings","synthetic":false,"types":[]},{"text":"impl Copy for ArgSettings","synthetic":false,"types":[]},{"text":"impl Copy for ErrorKind","synthetic":false,"types":[]},{"text":"impl Copy for Shell","synthetic":false,"types":[]}];
implementors["crossbeam_channel"] = [{"text":"impl&lt;T:&nbsp;Copy&gt; Copy for SendError&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy&gt; Copy for TrySendError&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy&gt; Copy for SendTimeoutError&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Copy for RecvError","synthetic":false,"types":[]},{"text":"impl Copy for TryRecvError","synthetic":false,"types":[]},{"text":"impl Copy for RecvTimeoutError","synthetic":false,"types":[]},{"text":"impl Copy for TrySelectError","synthetic":false,"types":[]},{"text":"impl Copy for SelectTimeoutError","synthetic":false,"types":[]},{"text":"impl Copy for TryReadyError","synthetic":false,"types":[]},{"text":"impl Copy for ReadyTimeoutError","synthetic":false,"types":[]}];
implementors["crossbeam_deque"] = [{"text":"impl&lt;T:&nbsp;Copy&gt; Copy for Steal&lt;T&gt;","synthetic":false,"types":[]}];
implementors["crossbeam_epoch"] = [{"text":"impl&lt;'g, T&gt; Copy for Shared&lt;'g, T&gt;","synthetic":false,"types":[]}];
implementors["crossbeam_queue"] = [{"text":"impl Copy for PopError","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy&gt; Copy for PushError&lt;T&gt;","synthetic":false,"types":[]}];
implementors["crossbeam_utils"] = [{"text":"impl&lt;T:&nbsp;Copy&gt; Copy for CachePadded&lt;T&gt;","synthetic":false,"types":[]}];
implementors["crypto_mac"] = [{"text":"impl Copy for MacError","synthetic":false,"types":[]},{"text":"impl Copy for InvalidKeyLength","synthetic":false,"types":[]}];
implementors["darling_core"] = [{"text":"impl Copy for Style","synthetic":false,"types":[]},{"text":"impl Copy for Purpose","synthetic":false,"types":[]},{"text":"impl Copy for Ignored","synthetic":false,"types":[]},{"text":"impl Copy for Flag","synthetic":false,"types":[]}];
implementors["digest"] = [{"text":"impl Copy for InvalidOutputSize","synthetic":false,"types":[]}];
implementors["either"] = [{"text":"impl&lt;L:&nbsp;Copy, R:&nbsp;Copy&gt; Copy for Either&lt;L, R&gt;","synthetic":false,"types":[]}];
implementors["encryption"] = [{"text":"impl Copy for Iv","synthetic":false,"types":[]},{"text":"impl Copy for Version","synthetic":false,"types":[]},{"text":"impl Copy for MetadataKey","synthetic":false,"types":[]},{"text":"impl Copy for MetadataMethod","synthetic":false,"types":[]}];
implementors["engine_rocks"] = [{"text":"impl Copy for RangeOffsetKind","synthetic":false,"types":[]},{"text":"impl Copy for TickerName","synthetic":false,"types":[]},{"text":"impl Copy for TickerEnum","synthetic":false,"types":[]},{"text":"impl Copy for LogLevel","synthetic":false,"types":[]},{"text":"impl Copy for CompressionType","synthetic":false,"types":[]},{"text":"impl Copy for BlobRunMode","synthetic":false,"types":[]}];
implementors["engine_traits"] = [{"text":"impl Copy for SstCompressionType","synthetic":false,"types":[]},{"text":"impl Copy for EncryptionMethod","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Copy for Range&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Copy for CacheStats","synthetic":false,"types":[]}];
implementors["error_code"] = [{"text":"impl Copy for ErrorCode","synthetic":false,"types":[]}];
implementors["failure"] = [{"text":"impl&lt;E:&nbsp;Copy&gt; Copy for Compat&lt;E&gt;","synthetic":false,"types":[]}];
implementors["futures"] = [{"text":"impl&lt;T:&nbsp;Copy&gt; Copy for Async&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy&gt; Copy for AsyncSink&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Copy for ExecuteErrorKind","synthetic":false,"types":[]},{"text":"impl Copy for Canceled","synthetic":false,"types":[]}];
implementors["futures_channel"] = [{"text":"impl Copy for Canceled","synthetic":false,"types":[]}];
implementors["futures_util"] = [{"text":"impl Copy for Aborted","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy&gt; Copy for Compat&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy&gt; Copy for AllowStdIo&lt;T&gt;","synthetic":false,"types":[]}];
implementors["fuzz"] = [{"text":"impl Copy for Fuzzer","synthetic":false,"types":[]}];
implementors["generic_array"] = [{"text":"impl&lt;T:&nbsp;Copy, N&gt; Copy for GenericArray&lt;T, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: ArrayLength&lt;T&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;N::ArrayType: Copy,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["getrandom"] = [{"text":"impl Copy for Error","synthetic":false,"types":[]}];
implementors["grpcio"] = [{"text":"impl Copy for RpcStatusCode","synthetic":false,"types":[]},{"text":"impl Copy for MethodType","synthetic":false,"types":[]},{"text":"impl Copy for WriteFlags","synthetic":false,"types":[]},{"text":"impl Copy for OptTarget","synthetic":false,"types":[]},{"text":"impl Copy for LbPolicy","synthetic":false,"types":[]},{"text":"impl Copy for CertificateRequestType","synthetic":false,"types":[]}];
implementors["grpcio_sys"] = [{"text":"impl Copy for grpc_compression_algorithm","synthetic":false,"types":[]},{"text":"impl Copy for grpc_compression_level","synthetic":false,"types":[]},{"text":"impl Copy for grpc_compression_options","synthetic":false,"types":[]},{"text":"impl Copy for grpc_compression_options_grpc_compression_options_default_level","synthetic":false,"types":[]},{"text":"impl Copy for grpc_compression_options_grpc_compression_options_default_algorithm","synthetic":false,"types":[]},{"text":"impl Copy for grpc_slice_refcount","synthetic":false,"types":[]},{"text":"impl Copy for grpc_slice","synthetic":false,"types":[]},{"text":"impl Copy for grpc_slice_grpc_slice_data","synthetic":false,"types":[]},{"text":"impl Copy for grpc_slice_grpc_slice_data_grpc_slice_refcounted","synthetic":false,"types":[]},{"text":"impl Copy for grpc_slice_grpc_slice_data_grpc_slice_inlined","synthetic":false,"types":[]},{"text":"impl Copy for grpc_slice_buffer","synthetic":false,"types":[]},{"text":"impl Copy for gpr_clock_type","synthetic":false,"types":[]},{"text":"impl Copy for gpr_timespec","synthetic":false,"types":[]},{"text":"impl Copy for gpr_event","synthetic":false,"types":[]},{"text":"impl Copy for gpr_refcount","synthetic":false,"types":[]},{"text":"impl Copy for gpr_stats_counter","synthetic":false,"types":[]},{"text":"impl Copy for grpc_slice_ref_whom","synthetic":false,"types":[]},{"text":"impl Copy for grpc_byte_buffer_type","synthetic":false,"types":[]},{"text":"impl Copy for grpc_byte_buffer","synthetic":false,"types":[]},{"text":"impl Copy for grpc_byte_buffer_grpc_byte_buffer_data","synthetic":false,"types":[]},{"text":"impl Copy for grpc_byte_buffer_grpc_byte_buffer_data__bindgen_ty_1","synthetic":false,"types":[]},{"text":"impl Copy for grpc_byte_buffer_grpc_byte_buffer_data_grpc_compressed_buffer","synthetic":false,"types":[]},{"text":"impl Copy for grpc_completion_queue","synthetic":false,"types":[]},{"text":"impl Copy for grpc_alarm","synthetic":false,"types":[]},{"text":"impl Copy for grpc_channel","synthetic":false,"types":[]},{"text":"impl Copy for grpc_server","synthetic":false,"types":[]},{"text":"impl Copy for grpc_call","synthetic":false,"types":[]},{"text":"impl Copy for grpc_socket_mutator","synthetic":false,"types":[]},{"text":"impl Copy for grpc_socket_factory","synthetic":false,"types":[]},{"text":"impl Copy for grpc_arg_type","synthetic":false,"types":[]},{"text":"impl Copy for grpc_arg_pointer_vtable","synthetic":false,"types":[]},{"text":"impl Copy for grpc_arg","synthetic":false,"types":[]},{"text":"impl Copy for grpc_arg_grpc_arg_value","synthetic":false,"types":[]},{"text":"impl Copy for grpc_arg_grpc_arg_value_grpc_arg_pointer","synthetic":false,"types":[]},{"text":"impl Copy for grpc_channel_args","synthetic":false,"types":[]},{"text":"impl Copy for grpc_call_error","synthetic":false,"types":[]},{"text":"impl Copy for grpc_metadata","synthetic":false,"types":[]},{"text":"impl Copy for grpc_metadata__bindgen_ty_1","synthetic":false,"types":[]},{"text":"impl Copy for grpc_completion_type","synthetic":false,"types":[]},{"text":"impl Copy for grpc_event","synthetic":false,"types":[]},{"text":"impl Copy for grpc_metadata_array","synthetic":false,"types":[]},{"text":"impl Copy for grpc_call_details","synthetic":false,"types":[]},{"text":"impl Copy for grpc_op_type","synthetic":false,"types":[]},{"text":"impl Copy for grpc_op","synthetic":false,"types":[]},{"text":"impl Copy for grpc_op_grpc_op_data","synthetic":false,"types":[]},{"text":"impl Copy for grpc_op_grpc_op_data__bindgen_ty_1","synthetic":false,"types":[]},{"text":"impl Copy for grpc_op_grpc_op_data_grpc_op_send_initial_metadata","synthetic":false,"types":[]},{"text":"impl Copy for grpc_op_grpc_op_data_grpc_op_send_initial_metadata_grpc_op_send_initial_metadata_maybe_compression_level","synthetic":false,"types":[]},{"text":"impl Copy for grpc_op_grpc_op_data_grpc_op_send_message","synthetic":false,"types":[]},{"text":"impl Copy for grpc_op_grpc_op_data_grpc_op_send_status_from_server","synthetic":false,"types":[]},{"text":"impl Copy for grpc_op_grpc_op_data_grpc_op_recv_initial_metadata","synthetic":false,"types":[]},{"text":"impl Copy for grpc_op_grpc_op_data_grpc_op_recv_message","synthetic":false,"types":[]},{"text":"impl Copy for grpc_op_grpc_op_data_grpc_op_recv_status_on_client","synthetic":false,"types":[]},{"text":"impl Copy for grpc_op_grpc_op_data_grpc_op_recv_close_on_server","synthetic":false,"types":[]},{"text":"impl Copy for grpc_channel_info","synthetic":false,"types":[]},{"text":"impl Copy for grpc_resource_quota","synthetic":false,"types":[]},{"text":"impl Copy for grpc_cq_polling_type","synthetic":false,"types":[]},{"text":"impl Copy for grpc_cq_completion_type","synthetic":false,"types":[]},{"text":"impl Copy for grpc_experimental_completion_queue_functor","synthetic":false,"types":[]},{"text":"impl Copy for grpc_completion_queue_attributes","synthetic":false,"types":[]},{"text":"impl Copy for grpc_completion_queue_factory","synthetic":false,"types":[]},{"text":"impl Copy for grpc_connectivity_state","synthetic":false,"types":[]},{"text":"impl Copy for census_context","synthetic":false,"types":[]},{"text":"impl Copy for grpc_server_register_method_payload_handling","synthetic":false,"types":[]},{"text":"impl Copy for grpc_ssl_roots_override_result","synthetic":false,"types":[]},{"text":"impl Copy for grpc_ssl_certificate_config_reload_status","synthetic":false,"types":[]},{"text":"impl Copy for grpc_ssl_client_certificate_request_type","synthetic":false,"types":[]},{"text":"impl Copy for grpc_security_level","synthetic":false,"types":[]},{"text":"impl Copy for grpc_tls_server_verification_option","synthetic":false,"types":[]},{"text":"impl Copy for grpc_local_connect_type","synthetic":false,"types":[]},{"text":"impl Copy for grpc_tls_version","synthetic":false,"types":[]},{"text":"impl Copy for grpc_auth_context","synthetic":false,"types":[]},{"text":"impl Copy for grpc_auth_property_iterator","synthetic":false,"types":[]},{"text":"impl Copy for grpc_auth_property","synthetic":false,"types":[]},{"text":"impl Copy for grpc_ssl_session_cache","synthetic":false,"types":[]},{"text":"impl Copy for grpc_call_credentials","synthetic":false,"types":[]},{"text":"impl Copy for grpc_channel_credentials","synthetic":false,"types":[]},{"text":"impl Copy for grpc_ssl_pem_key_cert_pair","synthetic":false,"types":[]},{"text":"impl Copy for verify_peer_options","synthetic":false,"types":[]},{"text":"impl Copy for grpc_ssl_verify_peer_options","synthetic":false,"types":[]},{"text":"impl Copy for grpc_sts_credentials_options","synthetic":false,"types":[]},{"text":"impl Copy for grpc_auth_metadata_context","synthetic":false,"types":[]},{"text":"impl Copy for grpc_metadata_credentials_plugin","synthetic":false,"types":[]},{"text":"impl Copy for grpc_server_credentials","synthetic":false,"types":[]},{"text":"impl Copy for grpc_ssl_server_certificate_config","synthetic":false,"types":[]},{"text":"impl Copy for grpc_ssl_server_credentials_options","synthetic":false,"types":[]},{"text":"impl Copy for grpc_auth_metadata_processor","synthetic":false,"types":[]},{"text":"impl Copy for grpc_alts_credentials_options","synthetic":false,"types":[]},{"text":"impl Copy for grpc_tls_error_details","synthetic":false,"types":[]},{"text":"impl Copy for grpc_tls_key_materials_config","synthetic":false,"types":[]},{"text":"impl Copy for grpc_tls_credential_reload_config","synthetic":false,"types":[]},{"text":"impl Copy for grpc_tls_server_authorization_check_config","synthetic":false,"types":[]},{"text":"impl Copy for grpc_tls_credentials_options","synthetic":false,"types":[]},{"text":"impl Copy for grpc_tls_credential_reload_arg","synthetic":false,"types":[]},{"text":"impl Copy for grpc_tls_server_authorization_check_arg","synthetic":false,"types":[]},{"text":"impl Copy for gpr_log_severity","synthetic":false,"types":[]},{"text":"impl Copy for gpr_log_func_args","synthetic":false,"types":[]},{"text":"impl Copy for grpc_byte_buffer_reader","synthetic":false,"types":[]},{"text":"impl Copy for grpc_byte_buffer_reader_grpc_byte_buffer_reader_current","synthetic":false,"types":[]},{"text":"impl Copy for grpcwrap_batch_context","synthetic":false,"types":[]},{"text":"impl Copy for grpcwrap_batch_context__bindgen_ty_1","synthetic":false,"types":[]},{"text":"impl Copy for grpcwrap_batch_context__bindgen_ty_2","synthetic":false,"types":[]},{"text":"impl Copy for grpcwrap_request_call_context","synthetic":false,"types":[]}];
implementors["h2"] = [{"text":"impl Copy for Reason","synthetic":false,"types":[]}];
implementors["hex"] = [{"text":"impl Copy for FromHexError","synthetic":false,"types":[]}];
implementors["http"] = [{"text":"impl Copy for StatusCode","synthetic":false,"types":[]},{"text":"impl Copy for Version","synthetic":false,"types":[]}];
implementors["httparse"] = [{"text":"impl Copy for Error","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy&gt; Copy for Status&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Copy for Header&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["ident_case"] = [{"text":"impl Copy for RenameRule","synthetic":false,"types":[]}];
implementors["idna"] = [{"text":"impl Copy for Config","synthetic":false,"types":[]}];
implementors["inferno"] = [{"text":"impl Copy for Options","synthetic":false,"types":[]},{"text":"impl Copy for BackgroundColor","synthetic":false,"types":[]},{"text":"impl Copy for Palette","synthetic":false,"types":[]},{"text":"impl Copy for BasicPalette","synthetic":false,"types":[]},{"text":"impl Copy for MultiPalette","synthetic":false,"types":[]},{"text":"impl Copy for SearchColor","synthetic":false,"types":[]},{"text":"impl Copy for Direction","synthetic":false,"types":[]}];
implementors["ipnet"] = [{"text":"impl Copy for IpAddrRange","synthetic":false,"types":[]},{"text":"impl Copy for Ipv4AddrRange","synthetic":false,"types":[]},{"text":"impl Copy for Ipv6AddrRange","synthetic":false,"types":[]},{"text":"impl Copy for IpNet","synthetic":false,"types":[]},{"text":"impl Copy for Ipv4Net","synthetic":false,"types":[]},{"text":"impl Copy for Ipv6Net","synthetic":false,"types":[]},{"text":"impl Copy for IpSubnets","synthetic":false,"types":[]},{"text":"impl Copy for Ipv4Subnets","synthetic":false,"types":[]},{"text":"impl Copy for Ipv6Subnets","synthetic":false,"types":[]}];
implementors["ipnetwork"] = [{"text":"impl Copy for Ipv4Network","synthetic":false,"types":[]},{"text":"impl Copy for Ipv6Network","synthetic":false,"types":[]},{"text":"impl Copy for IpNetwork","synthetic":false,"types":[]},{"text":"impl Copy for NetworkSize","synthetic":false,"types":[]}];
implementors["itertools"] = [{"text":"impl&lt;T:&nbsp;Copy&gt; Copy for MinMaxResult&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy&gt; Copy for Position&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy&gt; Copy for FoldWhile&lt;T&gt;","synthetic":false,"types":[]}];
implementors["itoa"] = [{"text":"impl Copy for Buffer","synthetic":false,"types":[]}];
implementors["kvproto"] = [{"text":"impl Copy for EncryptionMethod","synthetic":false,"types":[]},{"text":"impl Copy for VerOp","synthetic":false,"types":[]},{"text":"impl Copy for CommandPri","synthetic":false,"types":[]},{"text":"impl Copy for IsolationLevel","synthetic":false,"types":[]},{"text":"impl Copy for Op","synthetic":false,"types":[]},{"text":"impl Copy for Assertion","synthetic":false,"types":[]},{"text":"impl Copy for Action","synthetic":false,"types":[]},{"text":"impl Copy for ExtraOp","synthetic":false,"types":[]},{"text":"impl Copy for SearchLogRequestTarget","synthetic":false,"types":[]},{"text":"impl Copy for LogLevel","synthetic":false,"types":[]},{"text":"impl Copy for ServerInfoType","synthetic":false,"types":[]},{"text":"impl Copy for MutationOp","synthetic":false,"types":[]},{"text":"impl Copy for StoreState","synthetic":false,"types":[]},{"text":"impl Copy for PeerRole","synthetic":false,"types":[]},{"text":"impl Copy for ReplicationMode","synthetic":false,"types":[]},{"text":"impl Copy for DrAutoSyncState","synthetic":false,"types":[]},{"text":"impl Copy for RegionReplicationState","synthetic":false,"types":[]},{"text":"impl Copy for ErrorType","synthetic":false,"types":[]},{"text":"impl Copy for CheckPolicy","synthetic":false,"types":[]},{"text":"impl Copy for OperatorStatus","synthetic":false,"types":[]},{"text":"impl Copy for PeerState","synthetic":false,"types":[]},{"text":"impl Copy for ExtraMessageType","synthetic":false,"types":[]},{"text":"impl Copy for DeadlockRequestType","synthetic":false,"types":[]},{"text":"impl Copy for CompressionType","synthetic":false,"types":[]},{"text":"impl Copy for CmdType","synthetic":false,"types":[]},{"text":"impl Copy for AdminCmdType","synthetic":false,"types":[]},{"text":"impl Copy for StatusCmdType","synthetic":false,"types":[]},{"text":"impl Copy for PairOp","synthetic":false,"types":[]},{"text":"impl Copy for SwitchMode","synthetic":false,"types":[]},{"text":"impl Copy for Db","synthetic":false,"types":[]},{"text":"impl Copy for Module","synthetic":false,"types":[]},{"text":"impl Copy for BottommostLevelCompaction","synthetic":false,"types":[]},{"text":"impl Copy for EventRowOpType","synthetic":false,"types":[]},{"text":"impl Copy for EventLogType","synthetic":false,"types":[]},{"text":"impl Copy for StatusCode","synthetic":false,"types":[]}];
implementors["libc"] = [{"text":"impl Copy for DIR","synthetic":false,"types":[]},{"text":"impl Copy for group","synthetic":false,"types":[]},{"text":"impl Copy for utimbuf","synthetic":false,"types":[]},{"text":"impl Copy for timeval","synthetic":false,"types":[]},{"text":"impl Copy for timespec","synthetic":false,"types":[]},{"text":"impl Copy for rlimit","synthetic":false,"types":[]},{"text":"impl Copy for rusage","synthetic":false,"types":[]},{"text":"impl Copy for ipv6_mreq","synthetic":false,"types":[]},{"text":"impl Copy for hostent","synthetic":false,"types":[]},{"text":"impl Copy for iovec","synthetic":false,"types":[]},{"text":"impl Copy for pollfd","synthetic":false,"types":[]},{"text":"impl Copy for winsize","synthetic":false,"types":[]},{"text":"impl Copy for linger","synthetic":false,"types":[]},{"text":"impl Copy for sigval","synthetic":false,"types":[]},{"text":"impl Copy for itimerval","synthetic":false,"types":[]},{"text":"impl Copy for tms","synthetic":false,"types":[]},{"text":"impl Copy for servent","synthetic":false,"types":[]},{"text":"impl Copy for protoent","synthetic":false,"types":[]},{"text":"impl Copy for FILE","synthetic":false,"types":[]},{"text":"impl Copy for fpos_t","synthetic":false,"types":[]},{"text":"impl Copy for timezone","synthetic":false,"types":[]},{"text":"impl Copy for in_addr","synthetic":false,"types":[]},{"text":"impl Copy for ip_mreq","synthetic":false,"types":[]},{"text":"impl Copy for ip_mreq_source","synthetic":false,"types":[]},{"text":"impl Copy for sockaddr","synthetic":false,"types":[]},{"text":"impl Copy for sockaddr_in","synthetic":false,"types":[]},{"text":"impl Copy for sockaddr_in6","synthetic":false,"types":[]},{"text":"impl Copy for addrinfo","synthetic":false,"types":[]},{"text":"impl Copy for sockaddr_ll","synthetic":false,"types":[]},{"text":"impl Copy for fd_set","synthetic":false,"types":[]},{"text":"impl Copy for tm","synthetic":false,"types":[]},{"text":"impl Copy for sched_param","synthetic":false,"types":[]},{"text":"impl Copy for Dl_info","synthetic":false,"types":[]},{"text":"impl Copy for lconv","synthetic":false,"types":[]},{"text":"impl Copy for in_pktinfo","synthetic":false,"types":[]},{"text":"impl Copy for ifaddrs","synthetic":false,"types":[]},{"text":"impl Copy for in6_rtmsg","synthetic":false,"types":[]},{"text":"impl Copy for arpreq","synthetic":false,"types":[]},{"text":"impl Copy for arpreq_old","synthetic":false,"types":[]},{"text":"impl Copy for arphdr","synthetic":false,"types":[]},{"text":"impl Copy for mmsghdr","synthetic":false,"types":[]},{"text":"impl Copy for epoll_event","synthetic":false,"types":[]},{"text":"impl Copy for sockaddr_un","synthetic":false,"types":[]},{"text":"impl Copy for sockaddr_storage","synthetic":false,"types":[]},{"text":"impl Copy for utsname","synthetic":false,"types":[]},{"text":"impl Copy for sigevent","synthetic":false,"types":[]},{"text":"impl Copy for fpos64_t","synthetic":false,"types":[]},{"text":"impl Copy for rlimit64","synthetic":false,"types":[]},{"text":"impl Copy for glob_t","synthetic":false,"types":[]},{"text":"impl Copy for passwd","synthetic":false,"types":[]},{"text":"impl Copy for spwd","synthetic":false,"types":[]},{"text":"impl Copy for dqblk","synthetic":false,"types":[]},{"text":"impl Copy for signalfd_siginfo","synthetic":false,"types":[]},{"text":"impl Copy for itimerspec","synthetic":false,"types":[]},{"text":"impl Copy for fsid_t","synthetic":false,"types":[]},{"text":"impl Copy for packet_mreq","synthetic":false,"types":[]},{"text":"impl Copy for cpu_set_t","synthetic":false,"types":[]},{"text":"impl Copy for if_nameindex","synthetic":false,"types":[]},{"text":"impl Copy for msginfo","synthetic":false,"types":[]},{"text":"impl Copy for sembuf","synthetic":false,"types":[]},{"text":"impl Copy for input_event","synthetic":false,"types":[]},{"text":"impl Copy for input_id","synthetic":false,"types":[]},{"text":"impl Copy for input_absinfo","synthetic":false,"types":[]},{"text":"impl Copy for input_keymap_entry","synthetic":false,"types":[]},{"text":"impl Copy for input_mask","synthetic":false,"types":[]},{"text":"impl Copy for ff_replay","synthetic":false,"types":[]},{"text":"impl Copy for ff_trigger","synthetic":false,"types":[]},{"text":"impl Copy for ff_envelope","synthetic":false,"types":[]},{"text":"impl Copy for ff_constant_effect","synthetic":false,"types":[]},{"text":"impl Copy for ff_ramp_effect","synthetic":false,"types":[]},{"text":"impl Copy for ff_condition_effect","synthetic":false,"types":[]},{"text":"impl Copy for ff_periodic_effect","synthetic":false,"types":[]},{"text":"impl Copy for ff_rumble_effect","synthetic":false,"types":[]},{"text":"impl Copy for ff_effect","synthetic":false,"types":[]},{"text":"impl Copy for dl_phdr_info","synthetic":false,"types":[]},{"text":"impl Copy for Elf32_Ehdr","synthetic":false,"types":[]},{"text":"impl Copy for Elf64_Ehdr","synthetic":false,"types":[]},{"text":"impl Copy for Elf32_Sym","synthetic":false,"types":[]},{"text":"impl Copy for Elf64_Sym","synthetic":false,"types":[]},{"text":"impl Copy for Elf32_Phdr","synthetic":false,"types":[]},{"text":"impl Copy for Elf64_Phdr","synthetic":false,"types":[]},{"text":"impl Copy for Elf32_Shdr","synthetic":false,"types":[]},{"text":"impl Copy for Elf64_Shdr","synthetic":false,"types":[]},{"text":"impl Copy for Elf32_Chdr","synthetic":false,"types":[]},{"text":"impl Copy for Elf64_Chdr","synthetic":false,"types":[]},{"text":"impl Copy for ucred","synthetic":false,"types":[]},{"text":"impl Copy for mntent","synthetic":false,"types":[]},{"text":"impl Copy for posix_spawn_file_actions_t","synthetic":false,"types":[]},{"text":"impl Copy for posix_spawnattr_t","synthetic":false,"types":[]},{"text":"impl Copy for genlmsghdr","synthetic":false,"types":[]},{"text":"impl Copy for in6_pktinfo","synthetic":false,"types":[]},{"text":"impl Copy for arpd_request","synthetic":false,"types":[]},{"text":"impl Copy for inotify_event","synthetic":false,"types":[]},{"text":"impl Copy for fanotify_response","synthetic":false,"types":[]},{"text":"impl Copy for sockaddr_vm","synthetic":false,"types":[]},{"text":"impl Copy for regmatch_t","synthetic":false,"types":[]},{"text":"impl Copy for sock_extended_err","synthetic":false,"types":[]},{"text":"impl Copy for sockaddr_nl","synthetic":false,"types":[]},{"text":"impl Copy for dirent","synthetic":false,"types":[]},{"text":"impl Copy for dirent64","synthetic":false,"types":[]},{"text":"impl Copy for sockaddr_alg","synthetic":false,"types":[]},{"text":"impl Copy for af_alg_iv","synthetic":false,"types":[]},{"text":"impl Copy for mq_attr","synthetic":false,"types":[]},{"text":"impl Copy for statx","synthetic":false,"types":[]},{"text":"impl Copy for statx_timestamp","synthetic":false,"types":[]},{"text":"impl Copy for aiocb","synthetic":false,"types":[]},{"text":"impl Copy for __exit_status","synthetic":false,"types":[]},{"text":"impl Copy for __timeval","synthetic":false,"types":[]},{"text":"impl Copy for glob64_t","synthetic":false,"types":[]},{"text":"impl Copy for msghdr","synthetic":false,"types":[]},{"text":"impl Copy for cmsghdr","synthetic":false,"types":[]},{"text":"impl Copy for termios","synthetic":false,"types":[]},{"text":"impl Copy for mallinfo","synthetic":false,"types":[]},{"text":"impl Copy for nlmsghdr","synthetic":false,"types":[]},{"text":"impl Copy for nlmsgerr","synthetic":false,"types":[]},{"text":"impl Copy for nl_pktinfo","synthetic":false,"types":[]},{"text":"impl Copy for nl_mmap_req","synthetic":false,"types":[]},{"text":"impl Copy for nl_mmap_hdr","synthetic":false,"types":[]},{"text":"impl Copy for nlattr","synthetic":false,"types":[]},{"text":"impl Copy for rtentry","synthetic":false,"types":[]},{"text":"impl Copy for timex","synthetic":false,"types":[]},{"text":"impl Copy for ntptimeval","synthetic":false,"types":[]},{"text":"impl Copy for regex_t","synthetic":false,"types":[]},{"text":"impl Copy for utmpx","synthetic":false,"types":[]},{"text":"impl Copy for sigset_t","synthetic":false,"types":[]},{"text":"impl Copy for sysinfo","synthetic":false,"types":[]},{"text":"impl Copy for msqid_ds","synthetic":false,"types":[]},{"text":"impl Copy for sigaction","synthetic":false,"types":[]},{"text":"impl Copy for statfs","synthetic":false,"types":[]},{"text":"impl Copy for flock","synthetic":false,"types":[]},{"text":"impl Copy for flock64","synthetic":false,"types":[]},{"text":"impl Copy for siginfo_t","synthetic":false,"types":[]},{"text":"impl Copy for stack_t","synthetic":false,"types":[]},{"text":"impl Copy for stat","synthetic":false,"types":[]},{"text":"impl Copy for stat64","synthetic":false,"types":[]},{"text":"impl Copy for statfs64","synthetic":false,"types":[]},{"text":"impl Copy for statvfs64","synthetic":false,"types":[]},{"text":"impl Copy for pthread_attr_t","synthetic":false,"types":[]},{"text":"impl Copy for _libc_fpxreg","synthetic":false,"types":[]},{"text":"impl Copy for _libc_xmmreg","synthetic":false,"types":[]},{"text":"impl Copy for _libc_fpstate","synthetic":false,"types":[]},{"text":"impl Copy for user_regs_struct","synthetic":false,"types":[]},{"text":"impl Copy for user","synthetic":false,"types":[]},{"text":"impl Copy for mcontext_t","synthetic":false,"types":[]},{"text":"impl Copy for ipc_perm","synthetic":false,"types":[]},{"text":"impl Copy for shmid_ds","synthetic":false,"types":[]},{"text":"impl Copy for termios2","synthetic":false,"types":[]},{"text":"impl Copy for ip_mreqn","synthetic":false,"types":[]},{"text":"impl Copy for user_fpregs_struct","synthetic":false,"types":[]},{"text":"impl Copy for ucontext_t","synthetic":false,"types":[]},{"text":"impl Copy for statvfs","synthetic":false,"types":[]},{"text":"impl Copy for max_align_t","synthetic":false,"types":[]},{"text":"impl Copy for sem_t","synthetic":false,"types":[]},{"text":"impl Copy for pthread_mutexattr_t","synthetic":false,"types":[]},{"text":"impl Copy for pthread_rwlockattr_t","synthetic":false,"types":[]},{"text":"impl Copy for pthread_condattr_t","synthetic":false,"types":[]},{"text":"impl Copy for fanotify_event_metadata","synthetic":false,"types":[]},{"text":"impl Copy for pthread_cond_t","synthetic":false,"types":[]},{"text":"impl Copy for pthread_mutex_t","synthetic":false,"types":[]},{"text":"impl Copy for pthread_rwlock_t","synthetic":false,"types":[]},{"text":"impl Copy for in6_addr","synthetic":false,"types":[]}];
implementors["librocksdb_sys"] = [{"text":"impl Copy for WriteStallCondition","synthetic":false,"types":[]},{"text":"impl Copy for DBStatisticsTickerType","synthetic":false,"types":[]},{"text":"impl Copy for DBStatisticsHistogramType","synthetic":false,"types":[]},{"text":"impl Copy for DBEntryType","synthetic":false,"types":[]},{"text":"impl Copy for DBCompressionType","synthetic":false,"types":[]},{"text":"impl Copy for DBCompactionStyle","synthetic":false,"types":[]},{"text":"impl Copy for DBUniversalCompactionStyle","synthetic":false,"types":[]},{"text":"impl Copy for DBRecoveryMode","synthetic":false,"types":[]},{"text":"impl Copy for CompactionPriority","synthetic":false,"types":[]},{"text":"impl Copy for CompactionReason","synthetic":false,"types":[]},{"text":"impl Copy for DBInfoLogLevel","synthetic":false,"types":[]},{"text":"impl Copy for DBTableProperty","synthetic":false,"types":[]},{"text":"impl Copy for DBBottommostLevelCompaction","synthetic":false,"types":[]},{"text":"impl Copy for DBRateLimiterMode","synthetic":false,"types":[]},{"text":"impl Copy for DBTitanDBBlobRunMode","synthetic":false,"types":[]},{"text":"impl Copy for IndexType","synthetic":false,"types":[]},{"text":"impl Copy for DBBackgroundErrorReason","synthetic":false,"types":[]},{"text":"impl Copy for DBEncryptionMethod","synthetic":false,"types":[]},{"text":"impl Copy for DBValueType","synthetic":false,"types":[]},{"text":"impl Copy for DBSstPartitionerResult","synthetic":false,"types":[]}];
implementors["libz_sys"] = [{"text":"impl Copy for gz_header","synthetic":false,"types":[]},{"text":"impl Copy for z_stream","synthetic":false,"types":[]}];
implementors["log"] = [{"text":"impl Copy for Level","synthetic":false,"types":[]},{"text":"impl Copy for LevelFilter","synthetic":false,"types":[]}];
implementors["lz4_sys"] = [{"text":"impl Copy for LZ4FCompressionContext","synthetic":false,"types":[]},{"text":"impl Copy for LZ4FDecompressionContext","synthetic":false,"types":[]}];
implementors["md5"] = [{"text":"impl Copy for Digest","synthetic":false,"types":[]}];
implementors["mime"] = [{"text":"impl&lt;'a&gt; Copy for Name&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["mime_guess"] = [{"text":"impl Copy for MimeGuess","synthetic":false,"types":[]}];
implementors["minitrace"] = [{"text":"impl Copy for Span","synthetic":false,"types":[]},{"text":"impl Copy for Link","synthetic":false,"types":[]}];
implementors["mio"] = [{"text":"impl Copy for PollOpt","synthetic":false,"types":[]},{"text":"impl Copy for Ready","synthetic":false,"types":[]},{"text":"impl Copy for Event","synthetic":false,"types":[]},{"text":"impl Copy for UnixReady","synthetic":false,"types":[]},{"text":"impl Copy for Token","synthetic":false,"types":[]}];
implementors["native_tls"] = [{"text":"impl Copy for Protocol","synthetic":false,"types":[]}];
implementors["nix"] = [{"text":"impl Copy for Entry","synthetic":false,"types":[]},{"text":"impl Copy for Type","synthetic":false,"types":[]},{"text":"impl Copy for Errno","synthetic":false,"types":[]},{"text":"impl Copy for AtFlags","synthetic":false,"types":[]},{"text":"impl Copy for OFlag","synthetic":false,"types":[]},{"text":"impl Copy for SealFlag","synthetic":false,"types":[]},{"text":"impl Copy for FdFlag","synthetic":false,"types":[]},{"text":"impl Copy for FlockArg","synthetic":false,"types":[]},{"text":"impl Copy for SpliceFFlags","synthetic":false,"types":[]},{"text":"impl Copy for FallocateFlags","synthetic":false,"types":[]},{"text":"impl Copy for PosixFadviseAdvice","synthetic":false,"types":[]},{"text":"impl Copy for ModuleInitFlags","synthetic":false,"types":[]},{"text":"impl Copy for DeleteModuleFlags","synthetic":false,"types":[]},{"text":"impl Copy for MsFlags","synthetic":false,"types":[]},{"text":"impl Copy for MntFlags","synthetic":false,"types":[]},{"text":"impl Copy for MQ_OFlag","synthetic":false,"types":[]},{"text":"impl Copy for FdFlag","synthetic":false,"types":[]},{"text":"impl Copy for MqAttr","synthetic":false,"types":[]},{"text":"impl Copy for InterfaceFlags","synthetic":false,"types":[]},{"text":"impl Copy for PollFd","synthetic":false,"types":[]},{"text":"impl Copy for PollFlags","synthetic":false,"types":[]},{"text":"impl Copy for OpenptyResult","synthetic":false,"types":[]},{"text":"impl Copy for ForkptyResult","synthetic":false,"types":[]},{"text":"impl Copy for CloneFlags","synthetic":false,"types":[]},{"text":"impl Copy for CpuSet","synthetic":false,"types":[]},{"text":"impl Copy for AioFsyncMode","synthetic":false,"types":[]},{"text":"impl Copy for LioOpcode","synthetic":false,"types":[]},{"text":"impl Copy for LioMode","synthetic":false,"types":[]},{"text":"impl Copy for AioCancelStat","synthetic":false,"types":[]},{"text":"impl Copy for EpollFlags","synthetic":false,"types":[]},{"text":"impl Copy for EpollOp","synthetic":false,"types":[]},{"text":"impl Copy for EpollCreateFlags","synthetic":false,"types":[]},{"text":"impl Copy for EpollEvent","synthetic":false,"types":[]},{"text":"impl Copy for EfdFlags","synthetic":false,"types":[]},{"text":"impl Copy for MemFdCreateFlag","synthetic":false,"types":[]},{"text":"impl Copy for ProtFlags","synthetic":false,"types":[]},{"text":"impl Copy for MapFlags","synthetic":false,"types":[]},{"text":"impl Copy for MmapAdvise","synthetic":false,"types":[]},{"text":"impl Copy for MsFlags","synthetic":false,"types":[]},{"text":"impl Copy for MlockAllFlags","synthetic":false,"types":[]},{"text":"impl Copy for Request","synthetic":false,"types":[]},{"text":"impl Copy for Event","synthetic":false,"types":[]},{"text":"impl Copy for Options","synthetic":false,"types":[]},{"text":"impl Copy for QuotaType","synthetic":false,"types":[]},{"text":"impl Copy for QuotaFmt","synthetic":false,"types":[]},{"text":"impl Copy for QuotaValidFlags","synthetic":false,"types":[]},{"text":"impl Copy for Dqblk","synthetic":false,"types":[]},{"text":"impl Copy for RebootMode","synthetic":false,"types":[]},{"text":"impl Copy for FdSet","synthetic":false,"types":[]},{"text":"impl Copy for Signal","synthetic":false,"types":[]},{"text":"impl Copy for SignalIterator","synthetic":false,"types":[]},{"text":"impl Copy for SaFlags","synthetic":false,"types":[]},{"text":"impl Copy for SigmaskHow","synthetic":false,"types":[]},{"text":"impl Copy for SigSet","synthetic":false,"types":[]},{"text":"impl Copy for SigHandler","synthetic":false,"types":[]},{"text":"impl Copy for SigAction","synthetic":false,"types":[]},{"text":"impl Copy for SigevNotify","synthetic":false,"types":[]},{"text":"impl Copy for SigEvent","synthetic":false,"types":[]},{"text":"impl Copy for SfdFlags","synthetic":false,"types":[]},{"text":"impl Copy for AddressFamily","synthetic":false,"types":[]},{"text":"impl Copy for InetAddr","synthetic":false,"types":[]},{"text":"impl Copy for IpAddr","synthetic":false,"types":[]},{"text":"impl Copy for Ipv4Addr","synthetic":false,"types":[]},{"text":"impl Copy for Ipv6Addr","synthetic":false,"types":[]},{"text":"impl Copy for UnixAddr","synthetic":false,"types":[]},{"text":"impl Copy for SockAddr","synthetic":false,"types":[]},{"text":"impl Copy for NetlinkAddr","synthetic":false,"types":[]},{"text":"impl Copy for AlgAddr","synthetic":false,"types":[]},{"text":"impl Copy for LinkAddr","synthetic":false,"types":[]},{"text":"impl Copy for VsockAddr","synthetic":false,"types":[]},{"text":"impl Copy for ReuseAddr","synthetic":false,"types":[]},{"text":"impl Copy for ReusePort","synthetic":false,"types":[]},{"text":"impl Copy for TcpNoDelay","synthetic":false,"types":[]},{"text":"impl Copy for Linger","synthetic":false,"types":[]},{"text":"impl Copy for IpAddMembership","synthetic":false,"types":[]},{"text":"impl Copy for IpDropMembership","synthetic":false,"types":[]},{"text":"impl Copy for Ipv6AddMembership","synthetic":false,"types":[]},{"text":"impl Copy for Ipv6DropMembership","synthetic":false,"types":[]},{"text":"impl Copy for IpMulticastTtl","synthetic":false,"types":[]},{"text":"impl Copy for IpMulticastLoop","synthetic":false,"types":[]},{"text":"impl Copy for ReceiveTimeout","synthetic":false,"types":[]},{"text":"impl Copy for SendTimeout","synthetic":false,"types":[]},{"text":"impl Copy for Broadcast","synthetic":false,"types":[]},{"text":"impl Copy for OobInline","synthetic":false,"types":[]},{"text":"impl Copy for SocketError","synthetic":false,"types":[]},{"text":"impl Copy for KeepAlive","synthetic":false,"types":[]},{"text":"impl Copy for PeerCredentials","synthetic":false,"types":[]},{"text":"impl Copy for TcpKeepIdle","synthetic":false,"types":[]},{"text":"impl Copy for RcvBuf","synthetic":false,"types":[]},{"text":"impl Copy for SndBuf","synthetic":false,"types":[]},{"text":"impl Copy for RcvBufForce","synthetic":false,"types":[]},{"text":"impl Copy for SndBufForce","synthetic":false,"types":[]},{"text":"impl Copy for SockType","synthetic":false,"types":[]},{"text":"impl Copy for AcceptConn","synthetic":false,"types":[]},{"text":"impl Copy for OriginalDst","synthetic":false,"types":[]},{"text":"impl Copy for ReceiveTimestamp","synthetic":false,"types":[]},{"text":"impl Copy for IpTransparent","synthetic":false,"types":[]},{"text":"impl Copy for Mark","synthetic":false,"types":[]},{"text":"impl Copy for PassCred","synthetic":false,"types":[]},{"text":"impl Copy for TcpCongestion","synthetic":false,"types":[]},{"text":"impl Copy for Ipv4PacketInfo","synthetic":false,"types":[]},{"text":"impl Copy for Ipv6RecvPacketInfo","synthetic":false,"types":[]},{"text":"impl Copy for AlgSetAeadAuthSize","synthetic":false,"types":[]},{"text":"impl Copy for SockType","synthetic":false,"types":[]},{"text":"impl Copy for SockProtocol","synthetic":false,"types":[]},{"text":"impl Copy for SockFlag","synthetic":false,"types":[]},{"text":"impl Copy for MsgFlags","synthetic":false,"types":[]},{"text":"impl Copy for UnixCredentials","synthetic":false,"types":[]},{"text":"impl Copy for IpMembershipRequest","synthetic":false,"types":[]},{"text":"impl Copy for Ipv6MembershipRequest","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Copy for RecvMsg&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Copy for CmsgIterator&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Copy for ControlMessage&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Copy for SockLevel","synthetic":false,"types":[]},{"text":"impl Copy for Shutdown","synthetic":false,"types":[]},{"text":"impl Copy for SFlag","synthetic":false,"types":[]},{"text":"impl Copy for Mode","synthetic":false,"types":[]},{"text":"impl Copy for FchmodatFlags","synthetic":false,"types":[]},{"text":"impl Copy for UtimensatFlags","synthetic":false,"types":[]},{"text":"impl Copy for Statfs","synthetic":false,"types":[]},{"text":"impl Copy for FsType","synthetic":false,"types":[]},{"text":"impl Copy for FsFlags","synthetic":false,"types":[]},{"text":"impl Copy for Statvfs","synthetic":false,"types":[]},{"text":"impl Copy for SysInfo","synthetic":false,"types":[]},{"text":"impl Copy for BaudRate","synthetic":false,"types":[]},{"text":"impl Copy for SetArg","synthetic":false,"types":[]},{"text":"impl Copy for FlushArg","synthetic":false,"types":[]},{"text":"impl Copy for FlowArg","synthetic":false,"types":[]},{"text":"impl Copy for SpecialCharacterIndices","synthetic":false,"types":[]},{"text":"impl Copy for InputFlags","synthetic":false,"types":[]},{"text":"impl Copy for OutputFlags","synthetic":false,"types":[]},{"text":"impl Copy for ControlFlags","synthetic":false,"types":[]},{"text":"impl Copy for LocalFlags","synthetic":false,"types":[]},{"text":"impl Copy for TimeSpec","synthetic":false,"types":[]},{"text":"impl Copy for TimeVal","synthetic":false,"types":[]},{"text":"impl Copy for RemoteIoVec","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy&gt; Copy for IoVec&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Copy for UtsName","synthetic":false,"types":[]},{"text":"impl Copy for WaitPidFlag","synthetic":false,"types":[]},{"text":"impl Copy for WaitStatus","synthetic":false,"types":[]},{"text":"impl Copy for AddWatchFlags","synthetic":false,"types":[]},{"text":"impl Copy for InitFlags","synthetic":false,"types":[]},{"text":"impl Copy for Inotify","synthetic":false,"types":[]},{"text":"impl Copy for WatchDescriptor","synthetic":false,"types":[]},{"text":"impl Copy for UContext","synthetic":false,"types":[]},{"text":"impl Copy for Uid","synthetic":false,"types":[]},{"text":"impl Copy for Gid","synthetic":false,"types":[]},{"text":"impl Copy for Pid","synthetic":false,"types":[]},{"text":"impl Copy for ForkResult","synthetic":false,"types":[]},{"text":"impl Copy for FchownatFlags","synthetic":false,"types":[]},{"text":"impl Copy for Whence","synthetic":false,"types":[]},{"text":"impl Copy for LinkatFlags","synthetic":false,"types":[]},{"text":"impl Copy for UnlinkatFlags","synthetic":false,"types":[]},{"text":"impl Copy for PathconfVar","synthetic":false,"types":[]},{"text":"impl Copy for SysconfVar","synthetic":false,"types":[]},{"text":"impl Copy for AccessFlags","synthetic":false,"types":[]},{"text":"impl Copy for Error","synthetic":false,"types":[]}];
implementors["nom"] = [{"text":"impl Copy for Needed","synthetic":false,"types":[]},{"text":"impl Copy for Move","synthetic":false,"types":[]},{"text":"impl Copy for FileProducerState","synthetic":false,"types":[]}];
implementors["num_complex"] = [{"text":"impl&lt;T:&nbsp;Copy&gt; Copy for Complex&lt;T&gt;","synthetic":false,"types":[]}];
implementors["num_format"] = [{"text":"impl Copy for Buffer","synthetic":false,"types":[]},{"text":"impl Copy for Grouping","synthetic":false,"types":[]},{"text":"impl Copy for Locale","synthetic":false,"types":[]}];
implementors["num_integer"] = [{"text":"impl&lt;A:&nbsp;Copy&gt; Copy for ExtendedGcd&lt;A&gt;","synthetic":false,"types":[]}];
implementors["num_rational"] = [{"text":"impl&lt;T:&nbsp;Copy&gt; Copy for Ratio&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Copy for ParseRatioError","synthetic":false,"types":[]}];
implementors["openssl"] = [{"text":"impl Copy for CMSOptions","synthetic":false,"types":[]},{"text":"impl Copy for PointConversionForm","synthetic":false,"types":[]},{"text":"impl Copy for Asn1Flag","synthetic":false,"types":[]},{"text":"impl&lt;T, U&gt; Copy for Index&lt;T, U&gt;","synthetic":false,"types":[]},{"text":"impl Copy for MessageDigest","synthetic":false,"types":[]},{"text":"impl Copy for DigestBytes","synthetic":false,"types":[]},{"text":"impl Copy for Nid","synthetic":false,"types":[]},{"text":"impl Copy for OcspFlag","synthetic":false,"types":[]},{"text":"impl Copy for OcspResponseStatus","synthetic":false,"types":[]},{"text":"impl Copy for OcspCertStatus","synthetic":false,"types":[]},{"text":"impl Copy for OcspRevokedStatus","synthetic":false,"types":[]},{"text":"impl Copy for Pkcs7Flags","synthetic":false,"types":[]},{"text":"impl Copy for Id","synthetic":false,"types":[]},{"text":"impl Copy for Padding","synthetic":false,"types":[]},{"text":"impl Copy for SrtpProfileId","synthetic":false,"types":[]},{"text":"impl Copy for ErrorCode","synthetic":false,"types":[]},{"text":"impl Copy for SslOptions","synthetic":false,"types":[]},{"text":"impl Copy for SslMode","synthetic":false,"types":[]},{"text":"impl Copy for SslMethod","synthetic":false,"types":[]},{"text":"impl Copy for SslVerifyMode","synthetic":false,"types":[]},{"text":"impl Copy for SslSessionCacheMode","synthetic":false,"types":[]},{"text":"impl Copy for ExtensionContext","synthetic":false,"types":[]},{"text":"impl Copy for SslFiletype","synthetic":false,"types":[]},{"text":"impl Copy for StatusType","synthetic":false,"types":[]},{"text":"impl Copy for NameType","synthetic":false,"types":[]},{"text":"impl Copy for SniError","synthetic":false,"types":[]},{"text":"impl Copy for SslAlert","synthetic":false,"types":[]},{"text":"impl Copy for AlpnError","synthetic":false,"types":[]},{"text":"impl Copy for ClientHelloResponse","synthetic":false,"types":[]},{"text":"impl Copy for SslVersion","synthetic":false,"types":[]},{"text":"impl Copy for ShutdownResult","synthetic":false,"types":[]},{"text":"impl Copy for ShutdownState","synthetic":false,"types":[]},{"text":"impl Copy for Mode","synthetic":false,"types":[]},{"text":"impl Copy for Cipher","synthetic":false,"types":[]},{"text":"impl Copy for X509CheckFlags","synthetic":false,"types":[]},{"text":"impl Copy for X509VerifyResult","synthetic":false,"types":[]}];
implementors["openssl_sys"] = [{"text":"impl Copy for point_conversion_form_t","synthetic":false,"types":[]}];
implementors["ordered_float"] = [{"text":"impl&lt;T:&nbsp;Copy + Float&gt; Copy for OrderedFloat&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy + Float&gt; Copy for NotNan&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Copy for FloatIsNan","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Copy&gt; Copy for ParseNotNanError&lt;E&gt;","synthetic":false,"types":[]}];
implementors["parking_lot"] = [{"text":"impl Copy for WaitTimeoutResult","synthetic":false,"types":[]},{"text":"impl Copy for OnceState","synthetic":false,"types":[]}];
implementors["parking_lot_core"] = [{"text":"impl Copy for ParkResult","synthetic":false,"types":[]},{"text":"impl Copy for UnparkResult","synthetic":false,"types":[]},{"text":"impl Copy for RequeueOp","synthetic":false,"types":[]},{"text":"impl Copy for FilterOp","synthetic":false,"types":[]},{"text":"impl Copy for UnparkToken","synthetic":false,"types":[]},{"text":"impl Copy for ParkToken","synthetic":false,"types":[]}];
implementors["pnet_base"] = [{"text":"impl Copy for MacAddr","synthetic":false,"types":[]},{"text":"impl Copy for ParseMacAddrErr","synthetic":false,"types":[]}];
implementors["pnet_datalink"] = [{"text":"impl Copy for Config","synthetic":false,"types":[]},{"text":"impl Copy for ChannelType","synthetic":false,"types":[]},{"text":"impl Copy for FanoutType","synthetic":false,"types":[]},{"text":"impl Copy for FanoutOption","synthetic":false,"types":[]},{"text":"impl Copy for Config","synthetic":false,"types":[]}];
implementors["ppv_lite86"] = [{"text":"impl Copy for YesS3","synthetic":false,"types":[]},{"text":"impl Copy for NoS3","synthetic":false,"types":[]},{"text":"impl Copy for YesS4","synthetic":false,"types":[]},{"text":"impl Copy for NoS4","synthetic":false,"types":[]},{"text":"impl Copy for YesA1","synthetic":false,"types":[]},{"text":"impl Copy for NoA1","synthetic":false,"types":[]},{"text":"impl Copy for YesA2","synthetic":false,"types":[]},{"text":"impl Copy for NoA2","synthetic":false,"types":[]},{"text":"impl Copy for YesNI","synthetic":false,"types":[]},{"text":"impl Copy for NoNI","synthetic":false,"types":[]},{"text":"impl&lt;S3:&nbsp;Copy, S4:&nbsp;Copy, NI:&nbsp;Copy&gt; Copy for SseMachine&lt;S3, S4, NI&gt;","synthetic":false,"types":[]},{"text":"impl&lt;NI:&nbsp;Copy&gt; Copy for Avx2Machine&lt;NI&gt;","synthetic":false,"types":[]},{"text":"impl Copy for vec128_storage","synthetic":false,"types":[]},{"text":"impl Copy for vec256_storage","synthetic":false,"types":[]},{"text":"impl Copy for vec512_storage","synthetic":false,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl Copy for Span","synthetic":false,"types":[]},{"text":"impl Copy for Delimiter","synthetic":false,"types":[]},{"text":"impl Copy for Spacing","synthetic":false,"types":[]}];
implementors["procfs"] = [{"text":"impl Copy for Limit","synthetic":false,"types":[]},{"text":"impl Copy for LimitValue","synthetic":false,"types":[]},{"text":"impl Copy for NFSServerCaps","synthetic":false,"types":[]},{"text":"impl Copy for NFSEventCounter","synthetic":false,"types":[]},{"text":"impl Copy for NFSByteCounter","synthetic":false,"types":[]},{"text":"impl Copy for StatFlags","synthetic":false,"types":[]},{"text":"impl Copy for CoredumpFlags","synthetic":false,"types":[]},{"text":"impl Copy for FDPermissions","synthetic":false,"types":[]},{"text":"impl Copy for ProcState","synthetic":false,"types":[]},{"text":"impl Copy for Io","synthetic":false,"types":[]},{"text":"impl Copy for StatM","synthetic":false,"types":[]},{"text":"impl Copy for Version","synthetic":false,"types":[]},{"text":"impl Copy for DropCache","synthetic":false,"types":[]}];
implementors["procinfo"] = [{"text":"impl&lt;T:&nbsp;Copy&gt; Copy for Limit&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Copy for Limits","synthetic":false,"types":[]}];
implementors["prometheus"] = [{"text":"impl Copy for MetricType","synthetic":false,"types":[]}];
implementors["prost"] = [{"text":"impl Copy for EncodeError","synthetic":false,"types":[]}];
implementors["protobuf"] = [{"text":"impl Copy for FieldDescriptorProto_Type","synthetic":false,"types":[]},{"text":"impl Copy for FieldDescriptorProto_Label","synthetic":false,"types":[]},{"text":"impl Copy for FileOptions_OptimizeMode","synthetic":false,"types":[]},{"text":"impl Copy for FieldOptions_CType","synthetic":false,"types":[]},{"text":"impl Copy for FieldOptions_JSType","synthetic":false,"types":[]},{"text":"impl Copy for EnumValueDescriptor","synthetic":false,"types":[]},{"text":"impl Copy for WireType","synthetic":false,"types":[]},{"text":"impl Copy for Tag","synthetic":false,"types":[]},{"text":"impl Copy for NullValue","synthetic":false,"types":[]},{"text":"impl Copy for Field_Kind","synthetic":false,"types":[]},{"text":"impl Copy for Field_Cardinality","synthetic":false,"types":[]},{"text":"impl Copy for Syntax","synthetic":false,"types":[]}];
implementors["raft"] = [{"text":"impl Copy for StateRole","synthetic":false,"types":[]},{"text":"impl Copy for SnapshotStatus","synthetic":false,"types":[]},{"text":"impl Copy for ReadOnlyOption","synthetic":false,"types":[]},{"text":"impl Copy for ProgressState","synthetic":false,"types":[]}];
implementors["raft_engine"] = [{"text":"impl Copy for RecoveryMode","synthetic":false,"types":[]},{"text":"impl Copy for CacheStats","synthetic":false,"types":[]}];
implementors["raft_proto"] = [{"text":"impl Copy for EntryType","synthetic":false,"types":[]},{"text":"impl Copy for MessageType","synthetic":false,"types":[]},{"text":"impl Copy for ConfChangeTransition","synthetic":false,"types":[]},{"text":"impl Copy for ConfChangeType","synthetic":false,"types":[]}];
implementors["raftstore"] = [{"text":"impl Copy for ConsistencyCheckMethod","synthetic":false,"types":[]},{"text":"impl Copy for RegionChangeEvent","synthetic":false,"types":[]},{"text":"impl Copy for DiscardReason","synthetic":false,"types":[]},{"text":"impl Copy for ObserveID","synthetic":false,"types":[]},{"text":"impl Copy for GroupState","synthetic":false,"types":[]},{"text":"impl Copy for PeerTicks","synthetic":false,"types":[]},{"text":"impl Copy for StoreTick","synthetic":false,"types":[]},{"text":"impl Copy for AdminCmdEpochState","synthetic":false,"types":[]},{"text":"impl Copy for LeaseState","synthetic":false,"types":[]},{"text":"impl Copy for PerfContextType","synthetic":false,"types":[]},{"text":"impl Copy for ProposalType","synthetic":false,"types":[]},{"text":"impl Copy for AdminCmdType","synthetic":false,"types":[]},{"text":"impl Copy for AdminCmdStatus","synthetic":false,"types":[]},{"text":"impl Copy for RaftReadyType","synthetic":false,"types":[]},{"text":"impl Copy for MessageCounterType","synthetic":false,"types":[]},{"text":"impl Copy for RaftDroppedMessage","synthetic":false,"types":[]},{"text":"impl Copy for SnapValidationType","synthetic":false,"types":[]},{"text":"impl Copy for RegionHashType","synthetic":false,"types":[]},{"text":"impl Copy for RegionHashResult","synthetic":false,"types":[]},{"text":"impl Copy for CfNames","synthetic":false,"types":[]},{"text":"impl Copy for RaftEntryType","synthetic":false,"types":[]},{"text":"impl Copy for RaftInvalidProposal","synthetic":false,"types":[]},{"text":"impl Copy for RaftEventDurationType","synthetic":false,"types":[]},{"text":"impl Copy for ProposalContext","synthetic":false,"types":[]},{"text":"impl Copy for CheckTickResult","synthetic":false,"types":[]},{"text":"impl Copy for CheckApplyingSnapStatus","synthetic":false,"types":[]},{"text":"impl Copy for BuildStatistics","synthetic":false,"types":[]},{"text":"impl Copy for SnapType","synthetic":false,"types":[]},{"text":"impl Copy for SnapStatus","synthetic":false,"types":[]},{"text":"impl Copy for RejectReason","synthetic":false,"types":[]}];
implementors["rand"] = [{"text":"impl Copy for Bernoulli","synthetic":false,"types":[]},{"text":"impl Copy for BernoulliError","synthetic":false,"types":[]},{"text":"impl Copy for Binomial","synthetic":false,"types":[]},{"text":"impl Copy for Cauchy","synthetic":false,"types":[]},{"text":"impl Copy for Exp1","synthetic":false,"types":[]},{"text":"impl Copy for Exp","synthetic":false,"types":[]},{"text":"impl Copy for Gamma","synthetic":false,"types":[]},{"text":"impl Copy for ChiSquared","synthetic":false,"types":[]},{"text":"impl Copy for FisherF","synthetic":false,"types":[]},{"text":"impl Copy for StudentT","synthetic":false,"types":[]},{"text":"impl Copy for Beta","synthetic":false,"types":[]},{"text":"impl Copy for StandardNormal","synthetic":false,"types":[]},{"text":"impl Copy for Normal","synthetic":false,"types":[]},{"text":"impl Copy for LogNormal","synthetic":false,"types":[]},{"text":"impl Copy for Pareto","synthetic":false,"types":[]},{"text":"impl Copy for Poisson","synthetic":false,"types":[]},{"text":"impl Copy for Triangular","synthetic":false,"types":[]},{"text":"impl&lt;X:&nbsp;Copy + SampleUniform&gt; Copy for Uniform&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X::Sampler: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;X:&nbsp;Copy&gt; Copy for UniformInt&lt;X&gt;","synthetic":false,"types":[]},{"text":"impl&lt;X:&nbsp;Copy&gt; Copy for UniformFloat&lt;X&gt;","synthetic":false,"types":[]},{"text":"impl Copy for UniformDuration","synthetic":false,"types":[]},{"text":"impl Copy for UnitCircle","synthetic":false,"types":[]},{"text":"impl Copy for UnitSphereSurface","synthetic":false,"types":[]},{"text":"impl Copy for Weibull","synthetic":false,"types":[]},{"text":"impl Copy for WeightedError","synthetic":false,"types":[]},{"text":"impl Copy for OpenClosed01","synthetic":false,"types":[]},{"text":"impl Copy for Open01","synthetic":false,"types":[]},{"text":"impl Copy for Standard","synthetic":false,"types":[]},{"text":"impl Copy for ThreadRng","synthetic":false,"types":[]}];
implementors["rand_core"] = [{"text":"impl Copy for OsRng","synthetic":false,"types":[]}];
implementors["raw_cpuid"] = [{"text":"impl Copy for CpuIdResult","synthetic":false,"types":[]},{"text":"impl Copy for CacheInfoType","synthetic":false,"types":[]},{"text":"impl Copy for CacheInfo","synthetic":false,"types":[]},{"text":"impl Copy for CacheParameter","synthetic":false,"types":[]}];
implementors["regex"] = [{"text":"impl&lt;'t&gt; Copy for Match&lt;'t&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'t&gt; Copy for Match&lt;'t&gt;","synthetic":false,"types":[]}];
implementors["regex_syntax"] = [{"text":"impl Copy for Span","synthetic":false,"types":[]},{"text":"impl Copy for Position","synthetic":false,"types":[]},{"text":"impl Copy for ClassSetBinaryOpKind","synthetic":false,"types":[]},{"text":"impl Copy for Flag","synthetic":false,"types":[]},{"text":"impl Copy for ClassUnicodeRange","synthetic":false,"types":[]},{"text":"impl Copy for ClassBytesRange","synthetic":false,"types":[]},{"text":"impl Copy for Utf8Sequence","synthetic":false,"types":[]},{"text":"impl Copy for Utf8Range","synthetic":false,"types":[]}];
implementors["rgb"] = [{"text":"impl&lt;ComponentType:&nbsp;Copy&gt; Copy for BGR&lt;ComponentType&gt;","synthetic":false,"types":[]},{"text":"impl&lt;ComponentType:&nbsp;Copy, AlphaComponentType:&nbsp;Copy&gt; Copy for BGRA&lt;ComponentType, AlphaComponentType&gt;","synthetic":false,"types":[]},{"text":"impl&lt;ComponentType:&nbsp;Copy&gt; Copy for Gray&lt;ComponentType&gt;","synthetic":false,"types":[]},{"text":"impl&lt;ComponentType:&nbsp;Copy, AlphaComponentType:&nbsp;Copy&gt; Copy for GrayAlpha&lt;ComponentType, AlphaComponentType&gt;","synthetic":false,"types":[]},{"text":"impl&lt;ComponentType:&nbsp;Copy&gt; Copy for RGB&lt;ComponentType&gt;","synthetic":false,"types":[]},{"text":"impl&lt;ComponentType:&nbsp;Copy, AlphaComponentType:&nbsp;Copy&gt; Copy for RGBA&lt;ComponentType, AlphaComponentType&gt;","synthetic":false,"types":[]}];
implementors["ring"] = [{"text":"impl&lt;B:&nbsp;Copy&gt; Copy for UnparsedPublicKey&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: AsRef&lt;[u8]&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Copy for Positive&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Copy for Digest","synthetic":false,"types":[]},{"text":"impl Copy for Unspecified","synthetic":false,"types":[]},{"text":"impl Copy for KeyRejected","synthetic":false,"types":[]},{"text":"impl Copy for Algorithm","synthetic":false,"types":[]},{"text":"impl Copy for Algorithm","synthetic":false,"types":[]},{"text":"impl Copy for Tag","synthetic":false,"types":[]},{"text":"impl Copy for Algorithm","synthetic":false,"types":[]},{"text":"impl&lt;B:&nbsp;Copy&gt; Copy for RsaPublicKeyComponents&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: AsRef&lt;[u8]&gt; + Debug,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Copy for Signature","synthetic":false,"types":[]},{"text":"impl&lt;B:&nbsp;Copy&gt; Copy for UnparsedPublicKey&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: AsRef&lt;[u8]&gt;,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["rocksdb"] = [{"text":"impl Copy for PerfLevel","synthetic":false,"types":[]}];
implementors["rustyline"] = [{"text":"impl Copy for Quote","synthetic":false,"types":[]},{"text":"impl Copy for Config","synthetic":false,"types":[]},{"text":"impl Copy for BellStyle","synthetic":false,"types":[]},{"text":"impl Copy for HistoryDuplicates","synthetic":false,"types":[]},{"text":"impl Copy for CompletionType","synthetic":false,"types":[]},{"text":"impl Copy for EditMode","synthetic":false,"types":[]},{"text":"impl Copy for ColorMode","synthetic":false,"types":[]},{"text":"impl Copy for OutputStreamType","synthetic":false,"types":[]},{"text":"impl Copy for Direction","synthetic":false,"types":[]},{"text":"impl Copy for Word","synthetic":false,"types":[]},{"text":"impl Copy for At","synthetic":false,"types":[]},{"text":"impl Copy for Anchor","synthetic":false,"types":[]},{"text":"impl Copy for CharSearch","synthetic":false,"types":[]},{"text":"impl Copy for KeyPress","synthetic":false,"types":[]},{"text":"impl Copy for WordAction","synthetic":false,"types":[]}];
implementors["ryu"] = [{"text":"impl Copy for Buffer","synthetic":false,"types":[]}];
implementors["serde"] = [{"text":"impl&lt;E&gt; Copy for UnitDeserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Copy for BoolDeserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Copy for I8Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Copy for I16Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Copy for I32Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Copy for I64Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Copy for IsizeDeserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Copy for U8Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Copy for U16Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Copy for U64Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Copy for UsizeDeserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Copy for F32Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Copy for F64Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Copy for CharDeserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Copy for I128Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Copy for U128Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Copy for U32Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'de, E&gt; Copy for StrDeserializer&lt;'de, E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'de, E&gt; Copy for BorrowedStrDeserializer&lt;'de, E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'de, E&gt; Copy for BorrowedBytesDeserializer&lt;'de, E&gt;","synthetic":false,"types":[]},{"text":"impl Copy for IgnoredAny","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Copy for Unexpected&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["serde_json"] = [{"text":"impl Copy for Category","synthetic":false,"types":[]}];
implementors["serde_with"] = [{"text":"impl&lt;Sep:&nbsp;Copy&gt; Copy for StringWithSeparator&lt;Sep&gt;","synthetic":false,"types":[]},{"text":"impl Copy for SpaceSeparator","synthetic":false,"types":[]},{"text":"impl Copy for CommaSeparator","synthetic":false,"types":[]}];
implementors["signal_hook_registry"] = [{"text":"impl Copy for SigId","synthetic":false,"types":[]}];
implementors["slog"] = [{"text":"impl Copy for Discard","synthetic":false,"types":[]},{"text":"impl Copy for Level","synthetic":false,"types":[]},{"text":"impl Copy for FilterLevel","synthetic":false,"types":[]}];
implementors["slog_async"] = [{"text":"impl Copy for OverflowStrategy","synthetic":false,"types":[]}];
implementors["subtle"] = [{"text":"impl Copy for Choice","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy&gt; Copy for CtOption&lt;T&gt;","synthetic":false,"types":[]}];
implementors["syn"] = [{"text":"impl Copy for Underscore","synthetic":false,"types":[]},{"text":"impl Copy for Abstract","synthetic":false,"types":[]},{"text":"impl Copy for As","synthetic":false,"types":[]},{"text":"impl Copy for Async","synthetic":false,"types":[]},{"text":"impl Copy for Auto","synthetic":false,"types":[]},{"text":"impl Copy for Await","synthetic":false,"types":[]},{"text":"impl Copy for Become","synthetic":false,"types":[]},{"text":"impl Copy for Box","synthetic":false,"types":[]},{"text":"impl Copy for Break","synthetic":false,"types":[]},{"text":"impl Copy for Const","synthetic":false,"types":[]},{"text":"impl Copy for Continue","synthetic":false,"types":[]},{"text":"impl Copy for Crate","synthetic":false,"types":[]},{"text":"impl Copy for Default","synthetic":false,"types":[]},{"text":"impl Copy for Do","synthetic":false,"types":[]},{"text":"impl Copy for Dyn","synthetic":false,"types":[]},{"text":"impl Copy for Else","synthetic":false,"types":[]},{"text":"impl Copy for Enum","synthetic":false,"types":[]},{"text":"impl Copy for Extern","synthetic":false,"types":[]},{"text":"impl Copy for Final","synthetic":false,"types":[]},{"text":"impl Copy for Fn","synthetic":false,"types":[]},{"text":"impl Copy for For","synthetic":false,"types":[]},{"text":"impl Copy for If","synthetic":false,"types":[]},{"text":"impl Copy for Impl","synthetic":false,"types":[]},{"text":"impl Copy for In","synthetic":false,"types":[]},{"text":"impl Copy for Let","synthetic":false,"types":[]},{"text":"impl Copy for Loop","synthetic":false,"types":[]},{"text":"impl Copy for Macro","synthetic":false,"types":[]},{"text":"impl Copy for Match","synthetic":false,"types":[]},{"text":"impl Copy for Mod","synthetic":false,"types":[]},{"text":"impl Copy for Move","synthetic":false,"types":[]},{"text":"impl Copy for Mut","synthetic":false,"types":[]},{"text":"impl Copy for Override","synthetic":false,"types":[]},{"text":"impl Copy for Priv","synthetic":false,"types":[]},{"text":"impl Copy for Pub","synthetic":false,"types":[]},{"text":"impl Copy for Ref","synthetic":false,"types":[]},{"text":"impl Copy for Return","synthetic":false,"types":[]},{"text":"impl Copy for SelfType","synthetic":false,"types":[]},{"text":"impl Copy for SelfValue","synthetic":false,"types":[]},{"text":"impl Copy for Static","synthetic":false,"types":[]},{"text":"impl Copy for Struct","synthetic":false,"types":[]},{"text":"impl Copy for Super","synthetic":false,"types":[]},{"text":"impl Copy for Trait","synthetic":false,"types":[]},{"text":"impl Copy for Try","synthetic":false,"types":[]},{"text":"impl Copy for Type","synthetic":false,"types":[]},{"text":"impl Copy for Typeof","synthetic":false,"types":[]},{"text":"impl Copy for Union","synthetic":false,"types":[]},{"text":"impl Copy for Unsafe","synthetic":false,"types":[]},{"text":"impl Copy for Unsized","synthetic":false,"types":[]},{"text":"impl Copy for Use","synthetic":false,"types":[]},{"text":"impl Copy for Virtual","synthetic":false,"types":[]},{"text":"impl Copy for Where","synthetic":false,"types":[]},{"text":"impl Copy for While","synthetic":false,"types":[]},{"text":"impl Copy for Yield","synthetic":false,"types":[]},{"text":"impl Copy for Add","synthetic":false,"types":[]},{"text":"impl Copy for AddEq","synthetic":false,"types":[]},{"text":"impl Copy for And","synthetic":false,"types":[]},{"text":"impl Copy for AndAnd","synthetic":false,"types":[]},{"text":"impl Copy for AndEq","synthetic":false,"types":[]},{"text":"impl Copy for At","synthetic":false,"types":[]},{"text":"impl Copy for Bang","synthetic":false,"types":[]},{"text":"impl Copy for Caret","synthetic":false,"types":[]},{"text":"impl Copy for CaretEq","synthetic":false,"types":[]},{"text":"impl Copy for Colon","synthetic":false,"types":[]},{"text":"impl Copy for Colon2","synthetic":false,"types":[]},{"text":"impl Copy for Comma","synthetic":false,"types":[]},{"text":"impl Copy for Div","synthetic":false,"types":[]},{"text":"impl Copy for DivEq","synthetic":false,"types":[]},{"text":"impl Copy for Dollar","synthetic":false,"types":[]},{"text":"impl Copy for Dot","synthetic":false,"types":[]},{"text":"impl Copy for Dot2","synthetic":false,"types":[]},{"text":"impl Copy for Dot3","synthetic":false,"types":[]},{"text":"impl Copy for DotDotEq","synthetic":false,"types":[]},{"text":"impl Copy for Eq","synthetic":false,"types":[]},{"text":"impl Copy for EqEq","synthetic":false,"types":[]},{"text":"impl Copy for Ge","synthetic":false,"types":[]},{"text":"impl Copy for Gt","synthetic":false,"types":[]},{"text":"impl Copy for Le","synthetic":false,"types":[]},{"text":"impl Copy for Lt","synthetic":false,"types":[]},{"text":"impl Copy for MulEq","synthetic":false,"types":[]},{"text":"impl Copy for Ne","synthetic":false,"types":[]},{"text":"impl Copy for Or","synthetic":false,"types":[]},{"text":"impl Copy for OrEq","synthetic":false,"types":[]},{"text":"impl Copy for OrOr","synthetic":false,"types":[]},{"text":"impl Copy for Pound","synthetic":false,"types":[]},{"text":"impl Copy for Question","synthetic":false,"types":[]},{"text":"impl Copy for RArrow","synthetic":false,"types":[]},{"text":"impl Copy for LArrow","synthetic":false,"types":[]},{"text":"impl Copy for Rem","synthetic":false,"types":[]},{"text":"impl Copy for RemEq","synthetic":false,"types":[]},{"text":"impl Copy for FatArrow","synthetic":false,"types":[]},{"text":"impl Copy for Semi","synthetic":false,"types":[]},{"text":"impl Copy for Shl","synthetic":false,"types":[]},{"text":"impl Copy for ShlEq","synthetic":false,"types":[]},{"text":"impl Copy for Shr","synthetic":false,"types":[]},{"text":"impl Copy for ShrEq","synthetic":false,"types":[]},{"text":"impl Copy for Star","synthetic":false,"types":[]},{"text":"impl Copy for Sub","synthetic":false,"types":[]},{"text":"impl Copy for SubEq","synthetic":false,"types":[]},{"text":"impl Copy for Tilde","synthetic":false,"types":[]},{"text":"impl Copy for Brace","synthetic":false,"types":[]},{"text":"impl Copy for Bracket","synthetic":false,"types":[]},{"text":"impl Copy for Paren","synthetic":false,"types":[]},{"text":"impl Copy for Group","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Copy for Cursor&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Copy for AttrStyle","synthetic":false,"types":[]},{"text":"impl Copy for BinOp","synthetic":false,"types":[]},{"text":"impl Copy for RangeLimits","synthetic":false,"types":[]},{"text":"impl Copy for TraitBoundModifier","synthetic":false,"types":[]},{"text":"impl Copy for UnOp","synthetic":false,"types":[]},{"text":"impl&lt;'c, 'a&gt; Copy for StepCursor&lt;'c, 'a&gt;","synthetic":false,"types":[]}];
implementors["synstructure"] = [{"text":"impl Copy for AddBounds","synthetic":false,"types":[]},{"text":"impl Copy for BindStyle","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Copy for VariantAst&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["sysinfo"] = [{"text":"impl Copy for ProcessStatus","synthetic":false,"types":[]},{"text":"impl Copy for RefreshKind","synthetic":false,"types":[]},{"text":"impl Copy for DiskType","synthetic":false,"types":[]},{"text":"impl Copy for Signal","synthetic":false,"types":[]},{"text":"impl Copy for DiskUsage","synthetic":false,"types":[]}];
implementors["tame_gcs"] = [{"text":"impl Copy for StorageClass","synthetic":false,"types":[]},{"text":"impl Copy for PredefinedAcl","synthetic":false,"types":[]},{"text":"impl Copy for Projection","synthetic":false,"types":[]},{"text":"impl Copy for DigestAlgorithm","synthetic":false,"types":[]},{"text":"impl Copy for SigningAlgorithm","synthetic":false,"types":[]},{"text":"impl Copy for Scopes","synthetic":false,"types":[]}];
implementors["term"] = [{"text":"impl Copy for Attr","synthetic":false,"types":[]}];
implementors["test_raftstore"] = [{"text":"impl Copy for Direction","synthetic":false,"types":[]}];
implementors["tidb_query_aggr"] = [{"text":"impl Copy for BitAnd","synthetic":false,"types":[]},{"text":"impl Copy for BitOr","synthetic":false,"types":[]},{"text":"impl Copy for BitXor","synthetic":false,"types":[]},{"text":"impl Copy for Max","synthetic":false,"types":[]},{"text":"impl Copy for Min","synthetic":false,"types":[]}];
implementors["tidb_query_codegen"] = [{"text":"impl Copy for state","synthetic":false,"types":[]},{"text":"impl Copy for Option","synthetic":false,"types":[]}];
implementors["tidb_query_common"] = [{"text":"impl Copy for ExecSummary","synthetic":false,"types":[]},{"text":"impl Copy for ExecutorName","synthetic":false,"types":[]}];
implementors["tidb_query_datatype"] = [{"text":"impl Copy for EvalType","synthetic":false,"types":[]},{"text":"impl Copy for FieldTypeTp","synthetic":false,"types":[]},{"text":"impl Copy for Collation","synthetic":false,"types":[]},{"text":"impl Copy for FieldTypeFlag","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Copy for LogicalRows&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Copy for ScalarValueRef&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy&gt; Copy for Res&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Copy for Decimal","synthetic":false,"types":[]},{"text":"impl Copy for Duration","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Copy for EnumRef&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Copy for ModifyType","synthetic":false,"types":[]},{"text":"impl Copy for JsonType","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Copy for JsonRef&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Copy for SetRef&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Copy for TzOffset","synthetic":false,"types":[]},{"text":"impl Copy for WeekMode","synthetic":false,"types":[]},{"text":"impl Copy for Time","synthetic":false,"types":[]},{"text":"impl Copy for TimeType","synthetic":false,"types":[]},{"text":"impl Copy for Flags","synthetic":false,"types":[]},{"text":"impl Copy for SqlMode","synthetic":false,"types":[]},{"text":"impl Copy for Flag","synthetic":false,"types":[]}];
implementors["tidb_query_expr"] = [{"text":"impl Copy for RpnFnMeta","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;Copy + EvaluableRef&lt;'a&gt;&gt; Copy for ScalarArg&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;Copy + 'a + EvaluableRef&lt;'a&gt;, C:&nbsp;Copy + 'a + ChunkRef&lt;'a, T&gt;&gt; Copy for VectorArg&lt;'a, T, C&gt;","synthetic":false,"types":[]},{"text":"impl Copy for IntWithSign","synthetic":false,"types":[]}];
implementors["tikv"] = [{"text":"impl Copy for DBType","synthetic":false,"types":[]},{"text":"impl Copy for UnifiedReadPoolConfig","synthetic":false,"types":[]},{"text":"impl Copy for StorageReadPoolConfig","synthetic":false,"types":[]},{"text":"impl Copy for CoprReadPoolConfig","synthetic":false,"types":[]},{"text":"impl Copy for ReqTag","synthetic":false,"types":[]},{"text":"impl Copy for CF","synthetic":false,"types":[]},{"text":"impl Copy for ScanKeysKind","synthetic":false,"types":[]},{"text":"impl Copy for ScanKind","synthetic":false,"types":[]},{"text":"impl Copy for WaitType","synthetic":false,"types":[]},{"text":"impl Copy for PerfMetric","synthetic":false,"types":[]},{"text":"impl Copy for AcquireSemaphoreType","synthetic":false,"types":[]},{"text":"impl Copy for TrackerState","synthetic":false,"types":[]},{"text":"impl Copy for GrpcTypeKind","synthetic":false,"types":[]},{"text":"impl Copy for GcCommandKind","synthetic":false,"types":[]},{"text":"impl Copy for SnapTask","synthetic":false,"types":[]},{"text":"impl Copy for ResolveStore","synthetic":false,"types":[]},{"text":"impl Copy for GcKeysCF","synthetic":false,"types":[]},{"text":"impl Copy for GcKeysDetail","synthetic":false,"types":[]},{"text":"impl Copy for GlobalGrpcTypeKind","synthetic":false,"types":[]},{"text":"impl Copy for BatchableRequestKind","synthetic":false,"types":[]},{"text":"impl Copy for RequestStatusKind","synthetic":false,"types":[]},{"text":"impl Copy for RequestTypeKind","synthetic":false,"types":[]},{"text":"impl Copy for BottommostLevelCompaction","synthetic":false,"types":[]},{"text":"impl Copy for Role","synthetic":false,"types":[]},{"text":"impl Copy for DetectType","synthetic":false,"types":[]},{"text":"impl Copy for RaftProgressState","synthetic":false,"types":[]},{"text":"impl Copy for RaftProgress","synthetic":false,"types":[]},{"text":"impl Copy for RaftHardState","synthetic":false,"types":[]},{"text":"impl Copy for RaftStateRole","synthetic":false,"types":[]},{"text":"impl Copy for RaftSoftState","synthetic":false,"types":[]},{"text":"impl Copy for RaftPeerRole","synthetic":false,"types":[]},{"text":"impl Copy for Epoch","synthetic":false,"types":[]},{"text":"impl Copy for RegionPeer","synthetic":false,"types":[]},{"text":"impl Copy for RegionMergeState","synthetic":false,"types":[]},{"text":"impl Copy for RaftTruncatedState","synthetic":false,"types":[]},{"text":"impl Copy for RaftApplyState","synthetic":false,"types":[]},{"text":"impl Copy for PerfStatisticsFields","synthetic":false,"types":[]},{"text":"impl Copy for PerfStatisticsInstant","synthetic":false,"types":[]},{"text":"impl Copy for PerfStatisticsDelta","synthetic":false,"types":[]},{"text":"impl Copy for ScanMode","synthetic":false,"types":[]},{"text":"impl Copy for Lock","synthetic":false,"types":[]},{"text":"impl Copy for WaitTimeout","synthetic":false,"types":[]},{"text":"impl Copy for CommandKind","synthetic":false,"types":[]},{"text":"impl Copy for CommandStageKind","synthetic":false,"types":[]},{"text":"impl Copy for CommandPriority","synthetic":false,"types":[]},{"text":"impl Copy for GcKeysCF","synthetic":false,"types":[]},{"text":"impl Copy for GcKeysDetail","synthetic":false,"types":[]},{"text":"impl Copy for MvccConflictKind","synthetic":false,"types":[]},{"text":"impl Copy for MvccDuplicateCommandKind","synthetic":false,"types":[]},{"text":"impl Copy for MvccCheckTxnStatusKind","synthetic":false,"types":[]},{"text":"impl Copy for NewerTsCheckState","synthetic":false,"types":[]},{"text":"impl Copy for GcInfo","synthetic":false,"types":[]},{"text":"impl Copy for MissingLockAction","synthetic":false,"types":[]},{"text":"impl Copy for ResponsePolicy","synthetic":false,"types":[]}];
implementors["tikv_jemalloc_ctl"] = [{"text":"impl Copy for narenas_mib","synthetic":false,"types":[]},{"text":"impl Copy for malloc_conf_mib","synthetic":false,"types":[]},{"text":"impl Copy for Error","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy + MibArg&gt; Copy for Mib&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy + MibArg&gt; Copy for MibStr&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Copy for abort_mib","synthetic":false,"types":[]},{"text":"impl Copy for dss_mib","synthetic":false,"types":[]},{"text":"impl Copy for narenas_mib","synthetic":false,"types":[]},{"text":"impl Copy for junk_mib","synthetic":false,"types":[]},{"text":"impl Copy for zero_mib","synthetic":false,"types":[]},{"text":"impl Copy for tcache_mib","synthetic":false,"types":[]},{"text":"impl Copy for lg_tcache_max_mib","synthetic":false,"types":[]},{"text":"impl Copy for background_thread_mib","synthetic":false,"types":[]},{"text":"impl Copy for allocated_mib","synthetic":false,"types":[]},{"text":"impl Copy for active_mib","synthetic":false,"types":[]},{"text":"impl Copy for metadata_mib","synthetic":false,"types":[]},{"text":"impl Copy for resident_mib","synthetic":false,"types":[]},{"text":"impl Copy for mapped_mib","synthetic":false,"types":[]},{"text":"impl Copy for retained_mib","synthetic":false,"types":[]},{"text":"impl Copy for allocatedp_mib","synthetic":false,"types":[]},{"text":"impl Copy for deallocatedp_mib","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy&gt; Copy for ThreadLocal&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Copy for version_mib","synthetic":false,"types":[]},{"text":"impl Copy for background_thread_mib","synthetic":false,"types":[]},{"text":"impl Copy for max_background_threads_mib","synthetic":false,"types":[]},{"text":"impl Copy for epoch_mib","synthetic":false,"types":[]}];
implementors["tikv_jemallocator"] = [{"text":"impl Copy for Jemalloc","synthetic":false,"types":[]}];
implementors["tikv_util"] = [{"text":"impl&lt;'a&gt; Copy for Iter&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Copy for LogFormat","synthetic":false,"types":[]},{"text":"impl Copy for ReadableSize","synthetic":false,"types":[]},{"text":"impl Copy for OptionReadableSize","synthetic":false,"types":[]},{"text":"impl Copy for ReadableDuration","synthetic":false,"types":[]},{"text":"impl Copy for DeadlineError","synthetic":false,"types":[]},{"text":"impl Copy for Deadline","synthetic":false,"types":[]},{"text":"impl Copy for LiunxStyleCpuTime","synthetic":false,"types":[]},{"text":"impl Copy for UnixSecs","synthetic":false,"types":[]},{"text":"impl Copy for Instant","synthetic":false,"types":[]},{"text":"impl Copy for CoarseClock","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Copy + Into&lt;String&gt;&gt; Copy for Builder&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl Copy for Full","synthetic":false,"types":[]},{"text":"impl Copy for Config","synthetic":false,"types":[]}];
implementors["time"] = [{"text":"impl Copy for Date","synthetic":false,"types":[]},{"text":"impl Copy for Duration","synthetic":false,"types":[]},{"text":"impl Copy for ConversionRange","synthetic":false,"types":[]},{"text":"impl Copy for ComponentRange","synthetic":false,"types":[]},{"text":"impl Copy for IndeterminateOffset","synthetic":false,"types":[]},{"text":"impl Copy for Format","synthetic":false,"types":[]},{"text":"impl Copy for Instant","synthetic":false,"types":[]},{"text":"impl Copy for OffsetDateTime","synthetic":false,"types":[]},{"text":"impl Copy for PrimitiveDateTime","synthetic":false,"types":[]},{"text":"impl Copy for Sign","synthetic":false,"types":[]},{"text":"impl Copy for Time","synthetic":false,"types":[]},{"text":"impl Copy for UtcOffset","synthetic":false,"types":[]},{"text":"impl Copy for Weekday","synthetic":false,"types":[]}];
implementors["tipb"] = [{"text":"impl Copy for AnalyzeType","synthetic":false,"types":[]},{"text":"impl Copy for ChecksumScanOn","synthetic":false,"types":[]},{"text":"impl Copy for ChecksumAlgorithm","synthetic":false,"types":[]},{"text":"impl Copy for Event","synthetic":false,"types":[]},{"text":"impl Copy for ExprType","synthetic":false,"types":[]},{"text":"impl Copy for ScalarFuncSig","synthetic":false,"types":[]},{"text":"impl Copy for EncodeType","synthetic":false,"types":[]},{"text":"impl Copy for Endian","synthetic":false,"types":[]},{"text":"impl Copy for ExecType","synthetic":false,"types":[]}];
implementors["tokio"] = [{"text":"impl Copy for UCred","synthetic":false,"types":[]},{"text":"impl Copy for SignalKind","synthetic":false,"types":[]},{"text":"impl Copy for Instant","synthetic":false,"types":[]}];
implementors["tokio_util"] = [{"text":"impl Copy for BytesCodec","synthetic":false,"types":[]},{"text":"impl Copy for Builder","synthetic":false,"types":[]}];
implementors["twox_hash"] = [{"text":"impl Copy for XxHash64","synthetic":false,"types":[]},{"text":"impl Copy for XxHash32","synthetic":false,"types":[]}];
implementors["txn_types"] = [{"text":"impl Copy for LockType","synthetic":false,"types":[]},{"text":"impl Copy for TimeStamp","synthetic":false,"types":[]},{"text":"impl Copy for MutationType","synthetic":false,"types":[]},{"text":"impl Copy for WriteType","synthetic":false,"types":[]}];
implementors["typenum"] = [{"text":"impl Copy for B0","synthetic":false,"types":[]},{"text":"impl Copy for B1","synthetic":false,"types":[]},{"text":"impl&lt;U:&nbsp;Copy + Unsigned + NonZero&gt; Copy for PInt&lt;U&gt;","synthetic":false,"types":[]},{"text":"impl&lt;U:&nbsp;Copy + Unsigned + NonZero&gt; Copy for NInt&lt;U&gt;","synthetic":false,"types":[]},{"text":"impl Copy for Z0","synthetic":false,"types":[]},{"text":"impl Copy for UTerm","synthetic":false,"types":[]},{"text":"impl&lt;U:&nbsp;Copy, B:&nbsp;Copy&gt; Copy for UInt&lt;U, B&gt;","synthetic":false,"types":[]},{"text":"impl Copy for ATerm","synthetic":false,"types":[]},{"text":"impl&lt;V:&nbsp;Copy, A:&nbsp;Copy&gt; Copy for TArr&lt;V, A&gt;","synthetic":false,"types":[]},{"text":"impl Copy for Greater","synthetic":false,"types":[]},{"text":"impl Copy for Less","synthetic":false,"types":[]},{"text":"impl Copy for Equal","synthetic":false,"types":[]}];
implementors["unchecked_index"] = [{"text":"impl&lt;S:&nbsp;Copy&gt; Copy for UncheckedIndex&lt;S&gt;","synthetic":false,"types":[]}];
implementors["unicase"] = [{"text":"impl&lt;S:&nbsp;Copy&gt; Copy for UniCase&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Copy&gt; Copy for Ascii&lt;S&gt;","synthetic":false,"types":[]}];
implementors["unicode_bidi"] = [{"text":"impl Copy for Level","synthetic":false,"types":[]},{"text":"impl Copy for BidiClass","synthetic":false,"types":[]}];
implementors["untrusted"] = [{"text":"impl&lt;'a&gt; Copy for Input&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Copy for EndOfInput","synthetic":false,"types":[]}];
implementors["url"] = [{"text":"impl Copy for ParseError","synthetic":false,"types":[]},{"text":"impl Copy for SyntaxViolation","synthetic":false,"types":[]},{"text":"impl Copy for Position","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Copy for Parse&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Copy for ParseOptions&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["uuid"] = [{"text":"impl Copy for Hyphenated","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Copy for HyphenatedRef&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Copy for Simple","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Copy for SimpleRef&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Copy for Urn","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Copy for UrnRef&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Copy for Version","synthetic":false,"types":[]},{"text":"impl Copy for Variant","synthetic":false,"types":[]},{"text":"impl Copy for Uuid","synthetic":false,"types":[]}];
implementors["void"] = [{"text":"impl Copy for Void","synthetic":false,"types":[]}];
implementors["xml"] = [{"text":"impl&lt;'a&gt; Copy for Name&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Copy for Attribute&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Copy for TextPosition","synthetic":false,"types":[]},{"text":"impl Copy for XmlVersion","synthetic":false,"types":[]}];
implementors["zstd_sys"] = [{"text":"impl Copy for ZSTD_CCtx_s","synthetic":false,"types":[]},{"text":"impl Copy for ZSTD_DCtx_s","synthetic":false,"types":[]},{"text":"impl Copy for ZSTD_strategy","synthetic":false,"types":[]},{"text":"impl Copy for ZSTD_cParameter","synthetic":false,"types":[]},{"text":"impl Copy for ZSTD_bounds","synthetic":false,"types":[]},{"text":"impl Copy for ZSTD_ResetDirective","synthetic":false,"types":[]},{"text":"impl Copy for ZSTD_dParameter","synthetic":false,"types":[]},{"text":"impl Copy for ZSTD_inBuffer_s","synthetic":false,"types":[]},{"text":"impl Copy for ZSTD_outBuffer_s","synthetic":false,"types":[]},{"text":"impl Copy for ZSTD_EndDirective","synthetic":false,"types":[]},{"text":"impl Copy for ZSTD_CDict_s","synthetic":false,"types":[]},{"text":"impl Copy for ZSTD_DDict_s","synthetic":false,"types":[]},{"text":"impl Copy for ZDICT_params_t","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()