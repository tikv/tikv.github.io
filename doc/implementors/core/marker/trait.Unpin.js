(function() {var implementors = {};
implementors["adler32"] = [{"text":"impl Unpin for RollingAdler32","synthetic":true,"types":[]}];
implementors["ahash"] = [{"text":"impl Unpin for AHasher","synthetic":true,"types":[]},{"text":"impl&lt;K, V, S&gt; Unpin for AHashMap&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; Unpin for AHashSet&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for RandomState","synthetic":true,"types":[]}];
implementors["aho_corasick"] = [{"text":"impl&lt;S&gt; Unpin for AhoCorasick&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, S&gt; Unpin for FindIter&lt;'a, 'b, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, S&gt; Unpin for FindOverlappingIter&lt;'a, 'b, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, S&gt; Unpin for StreamFindIter&lt;'a, R, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for AhoCorasickBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for MatchKind","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for ErrorKind","synthetic":true,"types":[]},{"text":"impl Unpin for MatchKind","synthetic":true,"types":[]},{"text":"impl Unpin for Config","synthetic":true,"types":[]},{"text":"impl Unpin for Builder","synthetic":true,"types":[]},{"text":"impl Unpin for Searcher","synthetic":true,"types":[]},{"text":"impl&lt;'s, 'h&gt; Unpin for FindIter&lt;'s, 'h&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Match","synthetic":true,"types":[]}];
implementors["ansi_term"] = [{"text":"impl Unpin for Prefix","synthetic":true,"types":[]},{"text":"impl Unpin for Infix","synthetic":true,"types":[]},{"text":"impl Unpin for Suffix","synthetic":true,"types":[]},{"text":"impl Unpin for Style","synthetic":true,"types":[]},{"text":"impl Unpin for Colour","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized&gt; Unpin for ANSIGenericString&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as ToOwned&gt;::Owned: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized&gt; Unpin for ANSIGenericStrings&lt;'a, S&gt;","synthetic":true,"types":[]}];
implementors["antidote"] = [{"text":"impl&lt;T:&nbsp;?Sized&gt; Unpin for Mutex&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Unpin for MutexGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Condvar","synthetic":true,"types":[]},{"text":"impl Unpin for TryLockError","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; Unpin for RwLock&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Unpin for RwLockReadGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Unpin for RwLockWriteGuard&lt;'a, T&gt;","synthetic":true,"types":[]}];
implementors["anyhow"] = [{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Chain&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["arc_swap"] = [{"text":"impl&lt;T&gt; Unpin for DirectDeref&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; Unpin for DynGuard&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;G, F, T, R&gt; Unpin for MapGuard&lt;G, F, T, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, T, F&gt; Unpin for Map&lt;A, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for ConstantDeref&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Constant&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, T&gt; Unpin for Cache&lt;A, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, T, F&gt; Unpin for MapCache&lt;A, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Shard","synthetic":true,"types":[]},{"text":"impl Unpin for Global","synthetic":true,"types":[]},{"text":"impl Unpin for PrivateUnsharded","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for PrivateSharded&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'l, T&gt; Unpin for Guard&lt;'l, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; Unpin for ArcSwapAny&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["arrayvec"] = [{"text":"impl&lt;A&gt; Unpin for ArrayString&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Index: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for CapacityError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for ArrayVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Index: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for IntoIter&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Index: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, A&gt; Unpin for Drain&lt;'a, A&gt;","synthetic":true,"types":[]}];
implementors["async_speed_limit"] = [{"text":"impl Unpin for StandardClock","synthetic":true,"types":[]},{"text":"impl Unpin for Nanoseconds","synthetic":true,"types":[]},{"text":"impl Unpin for ManualDelay","synthetic":true,"types":[]},{"text":"impl Unpin for ManualClock","synthetic":true,"types":[]},{"text":"impl&lt;C&gt; Unpin for Builder&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;C as Clock&gt;::Instant: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;C&gt; Unpin for Limiter&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;C, R&gt; Unpin for Consume&lt;C, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'__pin, R, C:&nbsp;Clock&gt; Unpin for Resource&lt;R, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, R, C&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["atty"] = [{"text":"impl Unpin for Stream","synthetic":true,"types":[]}];
implementors["backtrace"] = [{"text":"impl Unpin for Frame","synthetic":true,"types":[]},{"text":"impl Unpin for Symbol","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SymbolName&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for BytesOrWideString&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; Unpin for BacktraceFmt&lt;'a, 'b&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'b: 'a,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for PrintFmt","synthetic":true,"types":[]},{"text":"impl&lt;'fmt, 'a, 'b&gt; Unpin for BacktraceFrameFmt&lt;'fmt, 'a, 'b&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'a: 'fmt,<br>&nbsp;&nbsp;&nbsp;&nbsp;'b: 'fmt,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Backtrace","synthetic":true,"types":[]},{"text":"impl Unpin for BacktraceFrame","synthetic":true,"types":[]},{"text":"impl Unpin for BacktraceSymbol","synthetic":true,"types":[]}];
implementors["backtrace_sys"] = [{"text":"impl Unpin for backtrace_state","synthetic":true,"types":[]}];
implementors["backup"] = [{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Task","synthetic":true,"types":[]},{"text":"impl Unpin for LimitedStorage","synthetic":true,"types":[]},{"text":"impl Unpin for BackupRange","synthetic":true,"types":[]},{"text":"impl Unpin for ConfigManager","synthetic":true,"types":[]},{"text":"impl&lt;E, R&gt; Unpin for Endpoint&lt;E, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for Progress&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ControlThreadPool","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for BACKUP_REQUEST_HISTOGRAM","synthetic":true,"types":[]},{"text":"impl Unpin for BACKUP_RANGE_HISTOGRAM_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for BACKUP_RANGE_SIZE_HISTOGRAM_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for BACKUP_THREAD_POOL_SIZE_GAUGE","synthetic":true,"types":[]},{"text":"impl Unpin for BACKUP_RANGE_ERROR_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for Service","synthetic":true,"types":[]},{"text":"impl Unpin for Writer","synthetic":true,"types":[]},{"text":"impl Unpin for BackupWriterBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for BackupWriter","synthetic":true,"types":[]},{"text":"impl Unpin for BackupRawKVWriter","synthetic":true,"types":[]}];
implementors["base64"] = [{"text":"impl&lt;'a&gt; Unpin for Base64Display&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; Unpin for DecoderReader&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, W&gt; Unpin for EncoderWriter&lt;'a, W&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for DecodeError","synthetic":true,"types":[]},{"text":"impl Unpin for CharacterSet","synthetic":true,"types":[]},{"text":"impl Unpin for Config","synthetic":true,"types":[]}];
implementors["batch_system"] = [{"text":"impl&lt;N, C&gt; Unpin for FsmTypes&lt;N, C&gt;","synthetic":true,"types":[]},{"text":"impl&lt;N, C&gt; Unpin for NormalScheduler&lt;N, C&gt;","synthetic":true,"types":[]},{"text":"impl&lt;N, C&gt; Unpin for ControlScheduler&lt;N, C&gt;","synthetic":true,"types":[]},{"text":"impl&lt;N, C&gt; Unpin for Batch&lt;N, C&gt;","synthetic":true,"types":[]},{"text":"impl&lt;N, C, Handler&gt; Unpin for Poller&lt;N, C, Handler&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Handler: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ReschedulePolicy","synthetic":true,"types":[]},{"text":"impl&lt;N, C&gt; Unpin for BatchSystem&lt;N, C&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Config","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for FsmState&lt;N&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Owner&gt; Unpin for BasicMailbox&lt;Owner&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Owner, Scheduler&gt; Unpin for Mailbox&lt;Owner, Scheduler&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Scheduler: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for CheckDoResult&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N, C, Ns, Cs&gt; Unpin for Router&lt;N, C, Ns, Cs&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Cs: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ns: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["block_buffer"] = [{"text":"impl&lt;BlockSize&gt; Unpin for BlockBuffer&lt;BlockSize&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;BlockSize as ArrayLength&lt;u8&gt;&gt;::ArrayType: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["bstr"] = [{"text":"impl Unpin for BStr","synthetic":true,"types":[]},{"text":"impl Unpin for BString","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Finder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for FinderReverse&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Find&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for FindReverse&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Bytes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Fields&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, F&gt; Unpin for FieldsWith&lt;'a, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Split&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SplitReverse&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SplitN&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SplitNReverse&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Lines&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for LinesWithTerminator&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for DrainBytes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for FromUtf8Error","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for ByteLines&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Graphemes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for GraphemeIndices&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Sentences&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SentenceIndices&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Words&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for WordIndices&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for WordsWithBreaks&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for WordsWithBreakIndices&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Chars&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for CharIndices&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Utf8Error","synthetic":true,"types":[]}];
implementors["byteorder"] = [{"text":"impl Unpin for BigEndian","synthetic":true,"types":[]},{"text":"impl Unpin for LittleEndian","synthetic":true,"types":[]}];
implementors["bytes"] = [{"text":"impl&lt;'a&gt; Unpin for IoSliceMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Unpin for Chain&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Limit&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for Reader&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Take&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for Writer&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for BytesMut","synthetic":true,"types":[]},{"text":"impl Unpin for Bytes","synthetic":true,"types":[]}];
implementors["bzip2_sys"] = [{"text":"impl Unpin for bz_stream","synthetic":true,"types":[]}];
implementors["c2_chacha"] = [{"text":"impl Unpin for ChaCha","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; Unpin for State&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["cache_size"] = [{"text":"impl Unpin for CacheType","synthetic":true,"types":[]}];
implementors["cargo_metadata"] = [{"text":"impl Unpin for DependencyKind","synthetic":true,"types":[]},{"text":"impl Unpin for Dependency","synthetic":true,"types":[]},{"text":"impl Unpin for DiagnosticCode","synthetic":true,"types":[]},{"text":"impl Unpin for DiagnosticSpanLine","synthetic":true,"types":[]},{"text":"impl Unpin for DiagnosticSpanMacroExpansion","synthetic":true,"types":[]},{"text":"impl Unpin for DiagnosticSpan","synthetic":true,"types":[]},{"text":"impl Unpin for Applicability","synthetic":true,"types":[]},{"text":"impl Unpin for DiagnosticLevel","synthetic":true,"types":[]},{"text":"impl Unpin for Diagnostic","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for ArtifactProfile","synthetic":true,"types":[]},{"text":"impl Unpin for Artifact","synthetic":true,"types":[]},{"text":"impl Unpin for CompilerMessage","synthetic":true,"types":[]},{"text":"impl Unpin for BuildScript","synthetic":true,"types":[]},{"text":"impl Unpin for Message","synthetic":true,"types":[]},{"text":"impl Unpin for PackageId","synthetic":true,"types":[]},{"text":"impl Unpin for Metadata","synthetic":true,"types":[]},{"text":"impl Unpin for Resolve","synthetic":true,"types":[]},{"text":"impl Unpin for Node","synthetic":true,"types":[]},{"text":"impl Unpin for NodeDep","synthetic":true,"types":[]},{"text":"impl Unpin for DepKindInfo","synthetic":true,"types":[]},{"text":"impl Unpin for Package","synthetic":true,"types":[]},{"text":"impl Unpin for Source","synthetic":true,"types":[]},{"text":"impl Unpin for Target","synthetic":true,"types":[]},{"text":"impl Unpin for CargoOpt","synthetic":true,"types":[]},{"text":"impl Unpin for MetadataCommand","synthetic":true,"types":[]}];
implementors["cdc"] = [{"text":"impl Unpin for DownstreamID","synthetic":true,"types":[]},{"text":"impl Unpin for DownstreamState","synthetic":true,"types":[]},{"text":"impl Unpin for Downstream","synthetic":true,"types":[]},{"text":"impl Unpin for Pending","synthetic":true,"types":[]},{"text":"impl Unpin for PendingLock","synthetic":true,"types":[]},{"text":"impl Unpin for Delegate","synthetic":true,"types":[]},{"text":"impl Unpin for Deregister","synthetic":true,"types":[]},{"text":"impl Unpin for OldValueCache","synthetic":true,"types":[]},{"text":"impl Unpin for Task","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Endpoint&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Initializer","synthetic":true,"types":[]},{"text":"impl Unpin for CdcTxnExtraScheduler","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for CDC_RESOLVED_TS_GAP_HISTOGRAM","synthetic":true,"types":[]},{"text":"impl Unpin for CDC_SCAN_DURATION_HISTOGRAM","synthetic":true,"types":[]},{"text":"impl Unpin for CDC_MIN_RESOLVED_TS_REGION","synthetic":true,"types":[]},{"text":"impl Unpin for CDC_MIN_RESOLVED_TS","synthetic":true,"types":[]},{"text":"impl Unpin for CDC_PENDING_BYTES_GAUGE","synthetic":true,"types":[]},{"text":"impl Unpin for CDC_CAPTURED_REGION_COUNT","synthetic":true,"types":[]},{"text":"impl Unpin for CDC_OLD_VALUE_CACHE_MISS","synthetic":true,"types":[]},{"text":"impl Unpin for CDC_OLD_VALUE_CACHE_ACCESS","synthetic":true,"types":[]},{"text":"impl Unpin for CDC_OLD_VALUE_CACHE_BYTES","synthetic":true,"types":[]},{"text":"impl Unpin for CDC_OLD_VALUE_SCAN_DETAILS","synthetic":true,"types":[]},{"text":"impl Unpin for CDC_OLD_VALUE_DURATION_HISTOGRAM","synthetic":true,"types":[]},{"text":"impl Unpin for CdcObserver","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for OldValueReader&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ConnID","synthetic":true,"types":[]},{"text":"impl Unpin for CdcEvent","synthetic":true,"types":[]},{"text":"impl Unpin for EventBatcher","synthetic":true,"types":[]},{"text":"impl Unpin for FeatureGate","synthetic":true,"types":[]},{"text":"impl Unpin for Conn","synthetic":true,"types":[]},{"text":"impl Unpin for Service","synthetic":true,"types":[]}];
implementors["chrono"] = [{"text":"impl Unpin for FixedOffset","synthetic":true,"types":[]},{"text":"impl Unpin for Local","synthetic":true,"types":[]},{"text":"impl Unpin for Utc","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for LocalResult&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for NaiveDate","synthetic":true,"types":[]},{"text":"impl Unpin for IsoWeek","synthetic":true,"types":[]},{"text":"impl Unpin for NaiveTime","synthetic":true,"types":[]},{"text":"impl Unpin for NaiveDateTime","synthetic":true,"types":[]},{"text":"impl&lt;Tz&gt; Unpin for Date&lt;Tz&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Tz as TimeZone&gt;::Offset: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for SecondsFormat","synthetic":true,"types":[]},{"text":"impl&lt;Tz&gt; Unpin for DateTime&lt;Tz&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Tz as TimeZone&gt;::Offset: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Parsed","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for StrftimeItems&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Pad","synthetic":true,"types":[]},{"text":"impl Unpin for Numeric","synthetic":true,"types":[]},{"text":"impl Unpin for InternalNumeric","synthetic":true,"types":[]},{"text":"impl Unpin for Fixed","synthetic":true,"types":[]},{"text":"impl Unpin for InternalFixed","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Item&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ParseError","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for DelayedFormat&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Weekday","synthetic":true,"types":[]},{"text":"impl Unpin for ParseWeekdayError","synthetic":true,"types":[]}];
implementors["chrono_tz"] = [{"text":"impl Unpin for Tz","synthetic":true,"types":[]}];
implementors["clap"] = [{"text":"impl Unpin for AppSettings","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; Unpin for App&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; Unpin for Arg&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ArgMatches&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Values&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for OsValues&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SubCommand&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ArgGroup&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ArgSettings","synthetic":true,"types":[]},{"text":"impl Unpin for ErrorKind","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Shell","synthetic":true,"types":[]}];
implementors["cmd"] = [{"text":"impl&lt;ER&gt; Unpin for TiKVServer&lt;ER&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ER: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;ER&gt; Unpin for TiKVEngines&lt;ER&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ER: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;ER&gt; Unpin for Servers&lt;ER&gt;","synthetic":true,"types":[]}];
implementors["codec"] = [{"text":"impl Unpin for MemComparableByteCodec","synthetic":true,"types":[]},{"text":"impl Unpin for AscendingMemComparableCodecHelper","synthetic":true,"types":[]},{"text":"impl Unpin for DescendingMemComparableCodecHelper","synthetic":true,"types":[]},{"text":"impl Unpin for CompactByteCodec","synthetic":true,"types":[]},{"text":"impl Unpin for ErrorInner","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for NumberCodec","synthetic":true,"types":[]}];
implementors["concurrency_manager"] = [{"text":"impl Unpin for KeyHandle","synthetic":true,"types":[]},{"text":"impl Unpin for KeyHandleGuard","synthetic":true,"types":[]},{"text":"impl Unpin for LockTable","synthetic":true,"types":[]},{"text":"impl Unpin for ConcurrencyManager","synthetic":true,"types":[]}];
implementors["configuration"] = [{"text":"impl Unpin for ConfigValue","synthetic":true,"types":[]}];
implementors["cpuid_bool"] = [{"text":"impl Unpin for LazyBool","synthetic":true,"types":[]}];
implementors["crc32fast"] = [{"text":"impl Unpin for Hasher","synthetic":true,"types":[]}];
implementors["crc64fast"] = [{"text":"impl Unpin for Digest","synthetic":true,"types":[]}];
implementors["crossbeam_channel"] = [{"text":"impl&lt;T&gt; Unpin for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Receiver&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for TryIter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for SendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for TrySendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for SendTimeoutError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for RecvError","synthetic":true,"types":[]},{"text":"impl Unpin for TryRecvError","synthetic":true,"types":[]},{"text":"impl Unpin for RecvTimeoutError","synthetic":true,"types":[]},{"text":"impl Unpin for TrySelectError","synthetic":true,"types":[]},{"text":"impl Unpin for SelectTimeoutError","synthetic":true,"types":[]},{"text":"impl Unpin for TryReadyError","synthetic":true,"types":[]},{"text":"impl Unpin for ReadyTimeoutError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Select&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SelectedOperation&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["crossbeam_deque"] = [{"text":"impl&lt;T&gt; Unpin for Worker&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Stealer&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Injector&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Steal&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["crossbeam_epoch"] = [{"text":"impl&lt;'g, T, P&gt; Unpin for CompareAndSetError&lt;'g, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Atomic&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Owned&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'g, T&gt; Unpin for Shared&lt;'g, T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Collector","synthetic":true,"types":[]},{"text":"impl Unpin for LocalHandle","synthetic":true,"types":[]},{"text":"impl Unpin for Guard","synthetic":true,"types":[]}];
implementors["crossbeam_queue"] = [{"text":"impl&lt;T&gt; Unpin for ArrayQueue&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for PopError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for PushError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for SegQueue&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["crossbeam_skiplist"] = [{"text":"impl&lt;K, V&gt; Unpin for SkipList&lt;K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'g, K, V&gt; Unpin for Entry&lt;'a, 'g, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for RefEntry&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'g, K, V&gt; Unpin for Iter&lt;'a, 'g, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for RefIter&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'g, Q:&nbsp;?Sized, R, K, V&gt; Unpin for Range&lt;'a, 'g, Q, R, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, Q:&nbsp;?Sized, R, K, V&gt; Unpin for RefRange&lt;'a, Q, R, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Unpin for IntoIter&lt;K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Unpin for SkipMap&lt;K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Entry&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Unpin for IntoIter&lt;K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Iter&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Q:&nbsp;?Sized, R, K, V&gt; Unpin for Range&lt;'a, Q, R, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for SkipSet&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Entry&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for IntoIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Q:&nbsp;?Sized, R, T&gt; Unpin for Range&lt;'a, Q, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["crossbeam_utils"] = [{"text":"impl&lt;T:&nbsp;?Sized&gt; Unpin for AtomicCell&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for CachePadded&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Backoff","synthetic":true,"types":[]},{"text":"impl Unpin for Parker","synthetic":true,"types":[]},{"text":"impl Unpin for Unparker","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; Unpin for ShardedLock&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Unpin for ShardedLockReadGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Unpin for ShardedLockWriteGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for WaitGroup","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; Unpin for Scope&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope, 'env&gt; Unpin for ScopedThreadBuilder&lt;'scope, 'env&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'env: 'scope,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'scope, T&gt; Unpin for ScopedJoinHandle&lt;'scope, T&gt;","synthetic":true,"types":[]}];
implementors["crypto_mac"] = [{"text":"impl Unpin for MacError","synthetic":true,"types":[]},{"text":"impl Unpin for InvalidKeyLength","synthetic":true,"types":[]},{"text":"impl&lt;M&gt; Unpin for Output&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;M as Mac&gt;::OutputSize as ArrayLength&lt;u8&gt;&gt;::ArrayType: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["darling_core"] = [{"text":"impl&lt;V, F&gt; Unpin for Data&lt;V, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Fields&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Style","synthetic":true,"types":[]},{"text":"impl&lt;T, L, C&gt; Unpin for GenericParam&lt;T, L, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P, W&gt; Unpin for Generics&lt;P, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for IntoIter","synthetic":true,"types":[]},{"text":"impl Unpin for Purpose","synthetic":true,"types":[]},{"text":"impl Unpin for Options","synthetic":true,"types":[]},{"text":"impl Unpin for IdentString","synthetic":true,"types":[]},{"text":"impl Unpin for Ignored","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Override&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for PathList","synthetic":true,"types":[]},{"text":"impl&lt;T, O&gt; Unpin for WithOriginal&lt;T, O&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;O: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for SpannedValue&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Flag","synthetic":true,"types":[]}];
implementors["dashmap"] = [{"text":"impl&lt;K, V, S&gt; Unpin for OwningIter&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S, M&gt; Unpin for Iter&lt;'a, K, V, S, M&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S, M&gt; Unpin for IterMut&lt;'a, K, V, S, M&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, S&gt; Unpin for OwningIter&lt;K, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, S, M&gt; Unpin for Iter&lt;'a, K, S, M&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; Unpin for RwLock&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Unpin for RwLockReadGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Unpin for RwLockWriteGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Unpin for RwLockUpgradeableGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Unpin for Entry&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Unpin for VacantEntry&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Unpin for OccupiedEntry&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Unpin for RefMulti&lt;'a, K, V, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Unpin for RefMutMulti&lt;'a, K, V, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Unpin for Ref&lt;'a, K, V, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Unpin for RefMut&lt;'a, K, V, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V, S&gt; Unpin for ReadOnlyView&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, S&gt; Unpin for DashSet&lt;K, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, S&gt; Unpin for RefMulti&lt;'a, K, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, S&gt; Unpin for Ref&lt;'a, K, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V, S&gt; Unpin for DashMap&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["debugid"] = [{"text":"impl Unpin for ParseDebugIdError","synthetic":true,"types":[]},{"text":"impl Unpin for DebugId","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for BreakpadFormat&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ParseCodeIdError","synthetic":true,"types":[]},{"text":"impl Unpin for CodeId","synthetic":true,"types":[]}];
implementors["digest"] = [{"text":"impl Unpin for InvalidOutputSize","synthetic":true,"types":[]}];
implementors["either"] = [{"text":"impl&lt;L, R&gt; Unpin for Either&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["encoding_rs"] = [{"text":"impl Unpin for Latin1Bidi","synthetic":true,"types":[]},{"text":"impl Unpin for Encoding","synthetic":true,"types":[]},{"text":"impl Unpin for CoderResult","synthetic":true,"types":[]},{"text":"impl Unpin for DecoderResult","synthetic":true,"types":[]},{"text":"impl Unpin for Decoder","synthetic":true,"types":[]},{"text":"impl Unpin for EncoderResult","synthetic":true,"types":[]},{"text":"impl Unpin for Encoder","synthetic":true,"types":[]}];
implementors["encryption"] = [{"text":"impl Unpin for EncryptionConfig","synthetic":true,"types":[]},{"text":"impl Unpin for FileConfig","synthetic":true,"types":[]},{"text":"impl Unpin for KmsConfig","synthetic":true,"types":[]},{"text":"impl Unpin for MasterKeyConfig","synthetic":true,"types":[]},{"text":"impl Unpin for Iv","synthetic":true,"types":[]},{"text":"impl Unpin for AesGcmTag","synthetic":true,"types":[]},{"text":"impl&lt;'k&gt; Unpin for AesGcmCrypter&lt;'k&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for PlainKey","synthetic":true,"types":[]},{"text":"impl Unpin for Version","synthetic":true,"types":[]},{"text":"impl Unpin for Header","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for EncryptedFile&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for LogRecord","synthetic":true,"types":[]},{"text":"impl Unpin for FileDictionaryFile","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for EncrypterReader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for DecrypterReader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for CrypterReader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Unpin for EncrypterWriter&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Dicts","synthetic":true,"types":[]},{"text":"impl Unpin for DataKeyManager","synthetic":true,"types":[]},{"text":"impl Unpin for DataKeyManagerArgs","synthetic":true,"types":[]},{"text":"impl Unpin for LoadDicts","synthetic":true,"types":[]},{"text":"impl Unpin for MemAesGcmBackend","synthetic":true,"types":[]},{"text":"impl Unpin for FileBackend","synthetic":true,"types":[]},{"text":"impl Unpin for KeyId","synthetic":true,"types":[]},{"text":"impl Unpin for AwsKms","synthetic":true,"types":[]},{"text":"impl Unpin for KmsClientDebug","synthetic":true,"types":[]},{"text":"impl Unpin for State","synthetic":true,"types":[]},{"text":"impl Unpin for EncryptedKey","synthetic":true,"types":[]},{"text":"impl Unpin for DataKeyPair","synthetic":true,"types":[]},{"text":"impl Unpin for KmsBackend","synthetic":true,"types":[]},{"text":"impl Unpin for MetadataKey","synthetic":true,"types":[]},{"text":"impl Unpin for MetadataMethod","synthetic":true,"types":[]},{"text":"impl Unpin for PlaintextBackend","synthetic":true,"types":[]},{"text":"impl Unpin for ENCRYPTION_DATA_KEY_GAUGE","synthetic":true,"types":[]},{"text":"impl Unpin for ENCRYPTION_FILE_NUM_GAUGE","synthetic":true,"types":[]},{"text":"impl Unpin for ENCRYPTION_INITIALIZED_GAUGE","synthetic":true,"types":[]},{"text":"impl Unpin for ENCRYPT_DECRPTION_FILE_HISTOGRAM","synthetic":true,"types":[]},{"text":"impl Unpin for ENCRYPTION_FILE_SIZE_GAUGE","synthetic":true,"types":[]}];
implementors["engine_panic"] = [{"text":"impl Unpin for PanicColumnFamilyOptions","synthetic":true,"types":[]},{"text":"impl Unpin for PanicCompactedEvent","synthetic":true,"types":[]},{"text":"impl Unpin for PanicDBOptions","synthetic":true,"types":[]},{"text":"impl Unpin for PanicTitanDBOptions","synthetic":true,"types":[]},{"text":"impl Unpin for PanicDBVector","synthetic":true,"types":[]},{"text":"impl Unpin for PanicEngine","synthetic":true,"types":[]},{"text":"impl Unpin for PanicEngineIterator","synthetic":true,"types":[]},{"text":"impl Unpin for PanicIngestExternalFileOptions","synthetic":true,"types":[]},{"text":"impl Unpin for PanicSnapshot","synthetic":true,"types":[]},{"text":"impl Unpin for PanicSnapshotIterator","synthetic":true,"types":[]},{"text":"impl Unpin for PanicSstReader","synthetic":true,"types":[]},{"text":"impl Unpin for PanicSstReaderIterator","synthetic":true,"types":[]},{"text":"impl Unpin for PanicSstWriter","synthetic":true,"types":[]},{"text":"impl Unpin for PanicSstWriterBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for PanicExternalSstFileInfo","synthetic":true,"types":[]},{"text":"impl Unpin for PanicExternalSstFileReader","synthetic":true,"types":[]},{"text":"impl Unpin for PanicTablePropertiesCollection","synthetic":true,"types":[]},{"text":"impl Unpin for PanicTablePropertiesCollectionIter","synthetic":true,"types":[]},{"text":"impl Unpin for PanicTablePropertiesKey","synthetic":true,"types":[]},{"text":"impl Unpin for PanicTableProperties","synthetic":true,"types":[]},{"text":"impl Unpin for PanicUserCollectedProperties","synthetic":true,"types":[]},{"text":"impl Unpin for PanicWriteBatch","synthetic":true,"types":[]},{"text":"impl Unpin for PanicPerfContext","synthetic":true,"types":[]}];
implementors["engine_rocks"] = [{"text":"impl Unpin for RocksColumnFamilyOptions","synthetic":true,"types":[]},{"text":"impl Unpin for RocksDBOptions","synthetic":true,"types":[]},{"text":"impl Unpin for RocksTitanDBOptions","synthetic":true,"types":[]},{"text":"impl Unpin for RocksDBVector","synthetic":true,"types":[]},{"text":"impl Unpin for RocksEngine","synthetic":true,"types":[]},{"text":"impl Unpin for RocksIngestExternalFileOptions","synthetic":true,"types":[]},{"text":"impl Unpin for RocksdbLogger","synthetic":true,"types":[]},{"text":"impl Unpin for RaftDBLogger","synthetic":true,"types":[]},{"text":"impl Unpin for RocksSnapshot","synthetic":true,"types":[]},{"text":"impl Unpin for RocksSstReader","synthetic":true,"types":[]},{"text":"impl Unpin for RocksSstIterator","synthetic":true,"types":[]},{"text":"impl Unpin for RocksSstWriterBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for RocksSstWriter","synthetic":true,"types":[]},{"text":"impl Unpin for RocksExternalSstFileInfo","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Unpin for RocksSstPartitionerFactory&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; Unpin for RocksSstPartitioner&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for RocksTablePropertiesCollection","synthetic":true,"types":[]},{"text":"impl Unpin for RocksTablePropertiesCollectionIter","synthetic":true,"types":[]},{"text":"impl Unpin for RocksTablePropertiesKey","synthetic":true,"types":[]},{"text":"impl Unpin for RocksTableProperties","synthetic":true,"types":[]},{"text":"impl Unpin for RocksUserCollectedProperties","synthetic":true,"types":[]},{"text":"impl Unpin for RocksUserCollectedPropertiesNoRc","synthetic":true,"types":[]},{"text":"impl Unpin for RocksWriteBatch","synthetic":true,"types":[]},{"text":"impl Unpin for RocksWriteBatchVec","synthetic":true,"types":[]},{"text":"impl Unpin for RocksMvccProperties","synthetic":true,"types":[]},{"text":"impl Unpin for RocksPerfContext","synthetic":true,"types":[]},{"text":"impl Unpin for PerfContextStatistics","synthetic":true,"types":[]},{"text":"impl Unpin for PerfContextTimeDurationInner","synthetic":true,"types":[]},{"text":"impl Unpin for PerfContextTimeDurationDelegator","synthetic":true,"types":[]},{"text":"impl Unpin for PerfContextTimeDuration","synthetic":true,"types":[]},{"text":"impl Unpin for PerfContextType","synthetic":true,"types":[]},{"text":"impl Unpin for APPLY_PERF_CONTEXT_TIME_HISTOGRAM","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_PERF_CONTEXT_TIME_HISTOGRAM","synthetic":true,"types":[]},{"text":"impl Unpin for APPLY_PERF_CONTEXT_TIME_HISTOGRAM_STATIC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_PERF_CONTEXT_TIME_HISTOGRAM_STATIC","synthetic":true,"types":[]},{"text":"impl Unpin for RocksEngineIterator","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for RocksSeekKey&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for RocksReadOptions","synthetic":true,"types":[]},{"text":"impl Unpin for RocksWriteOptions","synthetic":true,"types":[]},{"text":"impl Unpin for TsFilter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for CFOptions&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for RocksCFOptions&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for FixedSuffixSliceTransform","synthetic":true,"types":[]},{"text":"impl Unpin for FixedPrefixSliceTransform","synthetic":true,"types":[]},{"text":"impl Unpin for NoopSliceTransform","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for RocksCompactionJobInfo&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for RocksCompactedEvent","synthetic":true,"types":[]},{"text":"impl Unpin for CompactionListener","synthetic":true,"types":[]},{"text":"impl Unpin for SizeProperties","synthetic":true,"types":[]},{"text":"impl Unpin for UserProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for UserCollectedPropertiesDecoder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for RangeOffsetKind","synthetic":true,"types":[]},{"text":"impl Unpin for RangeOffsets","synthetic":true,"types":[]},{"text":"impl Unpin for RangeProperties","synthetic":true,"types":[]},{"text":"impl Unpin for RangePropertiesCollector","synthetic":true,"types":[]},{"text":"impl Unpin for RangePropertiesCollectorFactory","synthetic":true,"types":[]},{"text":"impl Unpin for MvccPropertiesCollector","synthetic":true,"types":[]},{"text":"impl Unpin for MvccPropertiesCollectorFactory","synthetic":true,"types":[]},{"text":"impl Unpin for EngineTickerMetricsInner","synthetic":true,"types":[]},{"text":"impl Unpin for EngineTickerMetricsDelegator","synthetic":true,"types":[]},{"text":"impl Unpin for EngineTickerMetrics2Inner","synthetic":true,"types":[]},{"text":"impl Unpin for EngineTickerMetrics2Delegator","synthetic":true,"types":[]},{"text":"impl Unpin for EngineTickerMetrics","synthetic":true,"types":[]},{"text":"impl Unpin for SimpleEngineTickerMetricsInner","synthetic":true,"types":[]},{"text":"impl Unpin for SimpleEngineTickerMetricsDelegator","synthetic":true,"types":[]},{"text":"impl Unpin for SimpleEngineTickerMetrics","synthetic":true,"types":[]},{"text":"impl Unpin for TickerName","synthetic":true,"types":[]},{"text":"impl Unpin for TickerEnum","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_SIZE_GAUGE_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_BLOCK_CACHE_USAGE_GAUGE_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_BLOB_CACHE_USAGE_GAUGE_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_MEMORY_GAUGE_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_ESTIMATE_NUM_KEYS_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_PENDING_COMPACTION_BYTES_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_COMPRESSION_RATIO_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_NUM_FILES_AT_LEVEL_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_NUM_SNAPSHOTS_GAUGE_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_OLDEST_SNAPSHOT_DURATION_GAUGE_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_WRITE_STALL_REASON_GAUGE_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_TITANDB_NUM_BLOB_FILES_AT_LEVEL_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_TITANDB_LIVE_BLOB_SIZE_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_TITANDB_NUM_LIVE_BLOB_FILE_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_TITANDB_NUM_OBSOLETE_BLOB_FILE_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_TITANDB_LIVE_BLOB_FILE_SIZE_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_TITANDB_OBSOLETE_BLOB_FILE_SIZE_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_TITANDB_BLOB_FILE_DISCARDABLE_RATIO_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_CACHE_EFFICIENCY_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_CACHE_EFFICIENCY","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_MEMTABLE_EFFICIENCY_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_MEMTABLE_EFFICIENCY","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_GET_SERVED_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_GET_SERVED","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_WRITE_SERVED_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_WRITE_SERVED","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_BLOOM_EFFICIENCY_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_BLOOM_EFFICIENCY","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_FLOW_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_FLOW","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_STALL_MICROS_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_STALL_MICROS","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_COMPACTION_FLOW_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_COMPACTION_FLOW","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_COMPACTION_DROP_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_COMPACTION_DROP","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_COMPACTION_DURATIONS_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_COMPACTION_NUM_CORRUPT_KEYS_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_COMPACTION_REASON_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_LOCATE_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_LOCATE","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_FILE_STATUS_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_FILE_STATUS","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_READ_AMP_FLOW_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_READ_AMP_FLOW","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_NO_ITERATORS","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_WAL_FILE_SYNCED_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_WAL_FILE_SYNCED","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_EVENT_COUNTER_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_NUM_IMMUTABLE_MEM_TABLE_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_BLOB_LOCATE_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_BLOB_LOCATE","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_BLOB_FLOW_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_BLOB_FLOW","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_BLOB_GC_FLOW_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_BLOB_GC_FLOW","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_BLOB_GC_FILE_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_BLOB_GC_FILE","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_BLOB_GC_ACTION_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_BLOB_GC_ACTION","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_BLOB_FILE_SYNCED_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_BLOB_FILE_SYNCED","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_BLOB_CACHE_EFFICIENCY_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_BLOB_CACHE_EFFICIENCY","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_GET_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_WRITE_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_COMPACTION_TIME_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_TABLE_SYNC_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_COMPACTION_OUTFILE_SYNC_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_MANIFEST_FILE_SYNC_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_WAL_FILE_SYNC_MICROS_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_STALL_L0_SLOWDOWN_COUNT_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_STALL_MEMTABLE_COMPACTION_COUNT_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_STALL_L0_NUM_FILES_COUNT_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_HARD_RATE_LIMIT_DELAY_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_SOFT_RATE_LIMIT_DELAY_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_NUM_FILES_IN_SINGLE_COMPACTION_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_SEEK_MICROS_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_WRITE_STALL_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_SST_READ_MICROS_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_NUM_SUBCOMPACTION_SCHEDULED_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_BYTES_PER_READ_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_BYTES_PER_WRITE_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_BYTES_COMPRESSED_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_BYTES_DECOMPRESSED_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_COMPRESSION_TIMES_NANOS_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_DECOMPRESSION_TIMES_NANOS_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_WRITE_WAL_TIME_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_BLOB_KEY_SIZE_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_BLOB_VALUE_SIZE_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_BLOB_GET_MICROS_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_BLOB_SEEK_MICROS_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_BLOB_NEXT_MICROS_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_BLOB_PREV_MICROS_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_BLOB_FILE_WRITE_MICROS_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_BLOB_FILE_READ_MICROS_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_BLOB_FILE_SYNC_MICROS_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_BLOB_GC_MICROS_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_GC_INPUT_BLOB_FILE_SIZE_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_GC_OUTPUT_BLOB_FILE_SIZE_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_ENGINE_ITER_TOUCH_BLOB_FILE_COUNT_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for RocksEventListener","synthetic":true,"types":[]},{"text":"impl Unpin for LogLevel","synthetic":true,"types":[]},{"text":"impl Unpin for CompressionType","synthetic":true,"types":[]},{"text":"impl Unpin for BlobRunMode","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for WrappedEncryptionKeyManager&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for WrappedFileSystemInspector&lt;T&gt;","synthetic":true,"types":[]}];
implementors["engine_test"] = [{"text":"impl Unpin for CryptoOptions","synthetic":true,"types":[]},{"text":"impl Unpin for DBOptions","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for CFOptions&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ColumnFamilyOptions","synthetic":true,"types":[]}];
implementors["engine_traits"] = [{"text":"impl Unpin for EngineFileSystemInspector","synthetic":true,"types":[]},{"text":"impl Unpin for DeleteStrategy","synthetic":true,"types":[]},{"text":"impl Unpin for SstCompressionType","synthetic":true,"types":[]},{"text":"impl Unpin for FileEncryptionInfo","synthetic":true,"types":[]},{"text":"impl Unpin for EncryptionMethod","synthetic":true,"types":[]},{"text":"impl Unpin for IndexHandle","synthetic":true,"types":[]},{"text":"impl Unpin for IndexHandles","synthetic":true,"types":[]},{"text":"impl Unpin for MvccProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SstPartitionerRequest&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for SstPartitionerResult","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SstPartitionerContext&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for PerfLevel","synthetic":true,"types":[]},{"text":"impl Unpin for PerfContextKind","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SeekKey&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, R&gt; Unpin for Engines&lt;K, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for ReadOptions","synthetic":true,"types":[]},{"text":"impl Unpin for WriteOptions","synthetic":true,"types":[]},{"text":"impl Unpin for SeekMode","synthetic":true,"types":[]},{"text":"impl Unpin for IterOptions","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Range&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for CacheStats","synthetic":true,"types":[]},{"text":"impl&lt;K, R&gt; Unpin for MetricsFlusher&lt;K, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["error_code"] = [{"text":"impl Unpin for ALL_ERROR_CODES","synthetic":true,"types":[]},{"text":"impl Unpin for ALL_ERROR_CODES","synthetic":true,"types":[]},{"text":"impl Unpin for ALL_ERROR_CODES","synthetic":true,"types":[]},{"text":"impl Unpin for ALL_ERROR_CODES","synthetic":true,"types":[]},{"text":"impl Unpin for ALL_ERROR_CODES","synthetic":true,"types":[]},{"text":"impl Unpin for ALL_ERROR_CODES","synthetic":true,"types":[]},{"text":"impl Unpin for ALL_ERROR_CODES","synthetic":true,"types":[]},{"text":"impl Unpin for ALL_ERROR_CODES","synthetic":true,"types":[]},{"text":"impl Unpin for ALL_ERROR_CODES","synthetic":true,"types":[]},{"text":"impl Unpin for ErrorCode","synthetic":true,"types":[]}];
implementors["external_storage"] = [{"text":"impl Unpin for LocalStorage","synthetic":true,"types":[]},{"text":"impl Unpin for NoopStorage","synthetic":true,"types":[]},{"text":"impl Unpin for S3Storage","synthetic":true,"types":[]},{"text":"impl&lt;'client&gt; Unpin for S3Uploader&lt;'client&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for GCSStorage","synthetic":true,"types":[]},{"text":"impl Unpin for RequestError","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for AsyncReadAsSyncStreamOfBytes&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for EXT_STORAGE_CREATE_HISTOGRAM","synthetic":true,"types":[]}];
implementors["fail"] = [{"text":"impl&lt;'a&gt; Unpin for FailScenario&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["failure"] = [{"text":"impl Unpin for Backtrace","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for Compat&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; Unpin for Context&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for SyncFailure&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl&lt;'f&gt; Unpin for Causes&lt;'f&gt;","synthetic":true,"types":[]}];
implementors["farmhash"] = [{"text":"impl Unpin for FarmHasher","synthetic":true,"types":[]}];
implementors["file_system"] = [{"text":"impl Unpin for File","synthetic":true,"types":[]},{"text":"impl Unpin for OpenOptions","synthetic":true,"types":[]},{"text":"impl Unpin for IOContext","synthetic":true,"types":[]},{"text":"impl Unpin for IOLatencyVec","synthetic":true,"types":[]},{"text":"impl Unpin for IOLatencyVec2","synthetic":true,"types":[]},{"text":"impl Unpin for IOBytesVec","synthetic":true,"types":[]},{"text":"impl Unpin for IOBytesVec2","synthetic":true,"types":[]},{"text":"impl Unpin for IOType","synthetic":true,"types":[]},{"text":"impl Unpin for IOOp","synthetic":true,"types":[]},{"text":"impl Unpin for IO_BYTES_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for IO_LATENCY_MICROS_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for IOStats","synthetic":true,"types":[]},{"text":"impl Unpin for BytesRecorder","synthetic":true,"types":[]},{"text":"impl Unpin for IORateLimiter","synthetic":true,"types":[]},{"text":"impl Unpin for IO_RATE_LIMITER","synthetic":true,"types":[]},{"text":"impl Unpin for IOOp","synthetic":true,"types":[]},{"text":"impl Unpin for IOType","synthetic":true,"types":[]},{"text":"impl Unpin for WithIOType","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for Sha256Reader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["flate2"] = [{"text":"impl Unpin for Crc","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for CrcReader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Unpin for CrcWriter&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for DeflateEncoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for DeflateDecoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for DeflateEncoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for DeflateDecoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Unpin for DeflateEncoder&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Unpin for DeflateDecoder&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for GzEncoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for GzDecoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for MultiGzDecoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for GzEncoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for GzDecoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for MultiGzDecoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Unpin for GzEncoder&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Unpin for GzDecoder&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for GzHeader","synthetic":true,"types":[]},{"text":"impl Unpin for GzBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for Compress","synthetic":true,"types":[]},{"text":"impl Unpin for Decompress","synthetic":true,"types":[]},{"text":"impl Unpin for FlushCompress","synthetic":true,"types":[]},{"text":"impl Unpin for FlushDecompress","synthetic":true,"types":[]},{"text":"impl Unpin for DecompressError","synthetic":true,"types":[]},{"text":"impl Unpin for CompressError","synthetic":true,"types":[]},{"text":"impl Unpin for Status","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for ZlibEncoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for ZlibDecoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for ZlibEncoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for ZlibDecoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Unpin for ZlibEncoder&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Unpin for ZlibDecoder&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Compression","synthetic":true,"types":[]}];
implementors["fnv"] = [{"text":"impl Unpin for FnvHasher","synthetic":true,"types":[]}];
implementors["foreign_types_shared"] = [{"text":"impl Unpin for Opaque","synthetic":true,"types":[]}];
implementors["fs2"] = [{"text":"impl Unpin for FsStats","synthetic":true,"types":[]}];
implementors["futures_channel"] = [{"text":"impl&lt;T&gt; Unpin for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for UnboundedSender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for SendError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for TrySendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for TryRecvError","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Cancellation&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Canceled","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for UnboundedReceiver&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Unpin for Receiver&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Unpin for Receiver&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Unpin for Sender&lt;T&gt;","synthetic":false,"types":[]}];
implementors["futures_executor"] = [{"text":"impl Unpin for LocalPool","synthetic":true,"types":[]},{"text":"impl Unpin for LocalSpawner","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for BlockingStream&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ThreadPool","synthetic":true,"types":[]},{"text":"impl Unpin for ThreadPoolBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for Enter","synthetic":true,"types":[]},{"text":"impl Unpin for EnterError","synthetic":true,"types":[]}];
implementors["futures_task"] = [{"text":"impl Unpin for SpawnError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for WakerRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for LocalFutureObj&lt;'_, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Unpin for FutureObj&lt;'_, T&gt;","synthetic":false,"types":[]}];
implementors["futures_timer"] = [{"text":"impl Unpin for Delay","synthetic":true,"types":[]}];
implementors["futures_util"] = [{"text":"impl&lt;T&gt; Unpin for RemoteHandle&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Unpin for JoinAll&lt;F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Unpin for TryJoinAll&lt;F&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for AbortRegistration","synthetic":true,"types":[]},{"text":"impl Unpin for AbortHandle","synthetic":true,"types":[]},{"text":"impl Unpin for Aborted","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Unpin for StreamFuture&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, St:&nbsp;?Sized&gt; Unpin for SelectNextSome&lt;'a, St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, Item&gt; Unpin for ReuniteError&lt;T, Item&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Fut&gt; Unpin for IterPinMut&lt;'a, Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Fut&gt; Unpin for IterMut&lt;'a, Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Fut&gt; Unpin for IterPinRef&lt;'a, Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Fut&gt; Unpin for Iter&lt;'a, Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Unpin for SelectAll&lt;St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Ex&gt; Unpin for Executor01As03&lt;Ex&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ex: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Compat&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, Item&gt; Unpin for CompatSink&lt;T, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Cursor&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Empty","synthetic":true,"types":[]},{"text":"impl Unpin for Repeat","synthetic":true,"types":[]},{"text":"impl Unpin for Sink","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for ReadHalf&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for WriteHalf&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for ReuniteError&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Window&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; Unpin for Mutex&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Unpin for MutexLockFuture&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Unpin for MutexGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized, U:&nbsp;?Sized&gt; Unpin for MappedMutexGuard&lt;'a, T, U&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'pin, Fut&gt; Unpin for Fuse&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Fuse&lt;'pin, Fut&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, F&gt; Unpin for Flatten&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Future,<br>&nbsp;&nbsp;&nbsp;&nbsp;__Flatten&lt;'pin, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, F&gt; Unpin for FlattenStream&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Future,<br>&nbsp;&nbsp;&nbsp;&nbsp;__FlattenStream&lt;'pin, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut, F&gt; Unpin for Map&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Map&lt;'pin, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, F&gt; Unpin for IntoStream&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__IntoStream&lt;'pin, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut, T&gt; Unpin for MapInto&lt;Fut, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__MapInto&lt;'pin, Fut, T&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut1, Fut2, F&gt; Unpin for Then&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Then&lt;'pin, Fut1, Fut2, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut, F&gt; Unpin for Inspect&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Inspect&lt;'pin, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut&gt; Unpin for NeverError&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__NeverError&lt;'pin, Fut&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut&gt; Unpin for UnitError&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__UnitError&lt;'pin, Fut&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut&gt; Unpin for CatchUnwind&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__CatchUnwind&lt;'pin, Fut&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut:&nbsp;Future&gt; Unpin for Remote&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Remote&lt;'pin, Fut&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;Fut:&nbsp;Future&gt; Unpin for Shared&lt;Fut&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut&gt; Unpin for IntoFuture&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__IntoFuture&lt;'pin, Fut&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut1, Fut2&gt; Unpin for TryFlatten&lt;Fut1, Fut2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__TryFlatten&lt;'pin, Fut1, Fut2&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut&gt; Unpin for TryFlattenStream&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: TryFuture,<br>&nbsp;&nbsp;&nbsp;&nbsp;__TryFlattenStream&lt;'pin, Fut&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut, Si&gt; Unpin for FlattenSink&lt;Fut, Si&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__FlattenSink&lt;'pin, Fut, Si&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut1, Fut2, F&gt; Unpin for AndThen&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__AndThen&lt;'pin, Fut1, Fut2, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut1, Fut2, F&gt; Unpin for OrElse&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__OrElse&lt;'pin, Fut1, Fut2, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut, E&gt; Unpin for ErrInto&lt;Fut, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__ErrInto&lt;'pin, Fut, E&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut, E&gt; Unpin for OkInto&lt;Fut, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__OkInto&lt;'pin, Fut, E&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut, F&gt; Unpin for InspectOk&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__InspectOk&lt;'pin, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut, F&gt; Unpin for InspectErr&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__InspectErr&lt;'pin, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut, F&gt; Unpin for MapOk&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__MapOk&lt;'pin, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut, F&gt; Unpin for MapErr&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__MapErr&lt;'pin, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut, F, G&gt; Unpin for MapOkOrElse&lt;Fut, F, G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__MapOkOrElse&lt;'pin, Fut, F, G&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut, F&gt; Unpin for UnwrapOrElse&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__UnwrapOrElse&lt;'pin, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;F&gt; Unpin for Lazy&lt;F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Unpin for Pending&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut:&nbsp;Future&gt; Unpin for MaybeDone&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__MaybeDone&lt;'pin, Fut&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut:&nbsp;TryFuture&gt; Unpin for TryMaybeDone&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__TryMaybeDone&lt;'pin, Fut&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, F&gt; Unpin for OptionFuture&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__OptionFuture&lt;'pin, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;F&gt; Unpin for PollFn&lt;F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Unpin for Ready&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut1:&nbsp;Future, Fut2:&nbsp;Future&gt; Unpin for Join&lt;Fut1, Fut2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Join&lt;'pin, Fut1, Fut2&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut1:&nbsp;Future, Fut2:&nbsp;Future, Fut3:&nbsp;Future&gt; Unpin for Join3&lt;Fut1, Fut2, Fut3&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Join3&lt;'pin, Fut1, Fut2, Fut3&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut1:&nbsp;Future, Fut2:&nbsp;Future, Fut3:&nbsp;Future, Fut4:&nbsp;Future&gt; Unpin for Join4&lt;Fut1, Fut2, Fut3, Fut4&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Join4&lt;'pin, Fut1, Fut2, Fut3, Fut4&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut1:&nbsp;Future, Fut2:&nbsp;Future, Fut3:&nbsp;Future, Fut4:&nbsp;Future, Fut5:&nbsp;Future&gt; Unpin for Join5&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Join5&lt;'pin, Fut1, Fut2, Fut3, Fut4, Fut5&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Unpin, B:&nbsp;Unpin&gt; Unpin for Select&lt;A, B&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Fut:&nbsp;Unpin&gt; Unpin for SelectAll&lt;Fut&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut1:&nbsp;TryFuture, Fut2:&nbsp;TryFuture&gt; Unpin for TryJoin&lt;Fut1, Fut2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__TryJoin&lt;'pin, Fut1, Fut2&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut1:&nbsp;TryFuture, Fut2:&nbsp;TryFuture, Fut3:&nbsp;TryFuture&gt; Unpin for TryJoin3&lt;Fut1, Fut2, Fut3&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__TryJoin3&lt;'pin, Fut1, Fut2, Fut3&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut1:&nbsp;TryFuture, Fut2:&nbsp;TryFuture, Fut3:&nbsp;TryFuture, Fut4:&nbsp;TryFuture&gt; Unpin for TryJoin4&lt;Fut1, Fut2, Fut3, Fut4&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__TryJoin4&lt;'pin, Fut1, Fut2, Fut3, Fut4&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut1:&nbsp;TryFuture, Fut2:&nbsp;TryFuture, Fut3:&nbsp;TryFuture, Fut4:&nbsp;TryFuture, Fut5:&nbsp;TryFuture&gt; Unpin for TryJoin5&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__TryJoin5&lt;'pin, Fut1, Fut2, Fut3, Fut4, Fut5&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Unpin, B:&nbsp;Unpin&gt; Unpin for TrySelect&lt;A, B&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Fut:&nbsp;Unpin&gt; Unpin for SelectOk&lt;Fut&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'pin, A, B&gt; Unpin for Either&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Either&lt;'pin, A, B&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut&gt; Unpin for Abortable&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Abortable&lt;'pin, Fut&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St1, St2&gt; Unpin for Chain&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Chain&lt;'pin, St1, St2&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St, C&gt; Unpin for Collect&lt;St, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Collect&lt;'pin, St, C&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St:&nbsp;Stream&gt; Unpin for Concat&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Concat&lt;'pin, St&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St&gt; Unpin for Enumerate&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Enumerate&lt;'pin, St&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St, Fut, F&gt; Unpin for Filter&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Stream,<br>&nbsp;&nbsp;&nbsp;&nbsp;__Filter&lt;'pin, St, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St, Fut, F&gt; Unpin for FilterMap&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__FilterMap&lt;'pin, St, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St&gt; Unpin for Flatten&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Stream,<br>&nbsp;&nbsp;&nbsp;&nbsp;__Flatten&lt;'pin, St&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St, Fut, T, F&gt; Unpin for Fold&lt;St, Fut, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Fold&lt;'pin, St, Fut, T, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St, Si&gt; Unpin for Forward&lt;St, Si&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: TryStream,<br>&nbsp;&nbsp;&nbsp;&nbsp;__Forward&lt;'pin, St, Si&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St, Fut, F&gt; Unpin for ForEach&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__ForEach&lt;'pin, St, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St&gt; Unpin for Fuse&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Fuse&lt;'pin, St&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St, F&gt; Unpin for Inspect&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Inspect&lt;'pin, St, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St, F&gt; Unpin for Map&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Map&lt;'pin, St, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St, U, F&gt; Unpin for FlatMap&lt;St, U, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__FlatMap&lt;'pin, St, U, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;St:&nbsp;?Sized + Unpin&gt; Unpin for Next&lt;'_, St&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St:&nbsp;Stream&gt; Unpin for Peekable&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Peekable&lt;'pin, St&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, 'a, St:&nbsp;Stream&gt; Unpin for Peek&lt;'a, St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Peek&lt;'pin, 'a, St&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St&gt; Unpin for Skip&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Skip&lt;'pin, St&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St, Fut, F&gt; Unpin for SkipWhile&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Stream,<br>&nbsp;&nbsp;&nbsp;&nbsp;__SkipWhile&lt;'pin, St, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St&gt; Unpin for Take&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Take&lt;'pin, St&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St:&nbsp;Stream, Fut, F&gt; Unpin for TakeWhile&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__TakeWhile&lt;'pin, St, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St:&nbsp;Stream, Fut:&nbsp;Future&gt; Unpin for TakeUntil&lt;St, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__TakeUntil&lt;'pin, St, Fut&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St, Fut, F&gt; Unpin for Then&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Then&lt;'pin, St, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St1:&nbsp;Stream, St2:&nbsp;Stream&gt; Unpin for Zip&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Zip&lt;'pin, St1, St2&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St:&nbsp;Stream&gt; Unpin for Chunks&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Chunks&lt;'pin, St&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St:&nbsp;Stream&gt; Unpin for ReadyChunks&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__ReadyChunks&lt;'pin, St&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St:&nbsp;Stream, S, Fut, F&gt; Unpin for Scan&lt;St, S, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Scan&lt;'pin, St, S, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St&gt; Unpin for BufferUnordered&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Stream,<br>&nbsp;&nbsp;&nbsp;&nbsp;__BufferUnordered&lt;'pin, St&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St&gt; Unpin for Buffered&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Stream,<br>&nbsp;&nbsp;&nbsp;&nbsp;St::Item: Future,<br>&nbsp;&nbsp;&nbsp;&nbsp;__Buffered&lt;'pin, St&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St, Fut, F&gt; Unpin for ForEachConcurrent&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__ForEachConcurrent&lt;'pin, St, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;S&gt; Unpin for SplitStream&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S, Item&gt; Unpin for SplitSink&lt;S, Item&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St&gt; Unpin for CatchUnwind&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__CatchUnwind&lt;'pin, St&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St, Fut, F&gt; Unpin for AndThen&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__AndThen&lt;'pin, St, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St, E&gt; Unpin for ErrInto&lt;St, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__ErrInto&lt;'pin, St, E&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St, F&gt; Unpin for InspectOk&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__InspectOk&lt;'pin, St, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St, F&gt; Unpin for InspectErr&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__InspectErr&lt;'pin, St, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St&gt; Unpin for IntoStream&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__IntoStream&lt;'pin, St&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St, F&gt; Unpin for MapOk&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__MapOk&lt;'pin, St, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St, F&gt; Unpin for MapErr&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__MapErr&lt;'pin, St, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St, Fut, F&gt; Unpin for OrElse&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__OrElse&lt;'pin, St, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;St:&nbsp;?Sized + Unpin&gt; Unpin for TryNext&lt;'_, St&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St, Fut, F&gt; Unpin for TryForEach&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__TryForEach&lt;'pin, St, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St, Fut, F&gt; Unpin for TryFilter&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: TryStream,<br>&nbsp;&nbsp;&nbsp;&nbsp;__TryFilter&lt;'pin, St, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St, Fut, F&gt; Unpin for TryFilterMap&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__TryFilterMap&lt;'pin, St, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St&gt; Unpin for TryFlatten&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: TryStream,<br>&nbsp;&nbsp;&nbsp;&nbsp;__TryFlatten&lt;'pin, St&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St, C&gt; Unpin for TryCollect&lt;St, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__TryCollect&lt;'pin, St, C&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St:&nbsp;TryStream&gt; Unpin for TryConcat&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__TryConcat&lt;'pin, St&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St, Fut, T, F&gt; Unpin for TryFold&lt;St, Fut, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__TryFold&lt;'pin, St, Fut, T, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, T, F, Fut&gt; Unpin for TryUnfold&lt;T, F, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__TryUnfold&lt;'pin, T, F, Fut&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St, Fut, F&gt; Unpin for TrySkipWhile&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: TryStream,<br>&nbsp;&nbsp;&nbsp;&nbsp;__TrySkipWhile&lt;'pin, St, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St, Fut, F&gt; Unpin for TryTakeWhile&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: TryStream,<br>&nbsp;&nbsp;&nbsp;&nbsp;__TryTakeWhile&lt;'pin, St, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St&gt; Unpin for TryBufferUnordered&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: TryStream,<br>&nbsp;&nbsp;&nbsp;&nbsp;__TryBufferUnordered&lt;'pin, St&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St, Fut, F&gt; Unpin for TryForEachConcurrent&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__TryForEachConcurrent&lt;'pin, St, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;St&gt; Unpin for IntoAsyncRead&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: TryStream&lt;Error = Error&gt; + Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;St::Ok: AsRef&lt;[u8]&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; Unpin for Iter&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Unpin for Repeat&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Unpin for Empty&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut&gt; Unpin for Once&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Once&lt;'pin, Fut&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Unpin for Pending&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;F&gt; Unpin for PollFn&lt;F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St1, St2&gt; Unpin for Select&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Select&lt;'pin, St1, St2&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, T, F, Fut&gt; Unpin for Unfold&lt;T, F, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Unfold&lt;'pin, T, F, Fut&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Future&gt; Unpin for FuturesOrdered&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Fut&gt; Unpin for FuturesUnordered&lt;Fut&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Si:&nbsp;Unpin + ?Sized, Item&gt; Unpin for Close&lt;'_, Si, Item&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Unpin for Drain&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Si1, Si2&gt; Unpin for Fanout&lt;Si1, Si2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Fanout&lt;'pin, Si1, Si2&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;Si:&nbsp;Unpin + ?Sized, Item&gt; Unpin for Flush&lt;'_, Si, Item&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Si:&nbsp;Sink&lt;Item&gt;, Item, E&gt; Unpin for SinkErrInto&lt;Si, Item, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__SinkErrInto&lt;'pin, Si, Item, E&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Si, F&gt; Unpin for SinkMapErr&lt;Si, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__SinkMapErr&lt;'pin, Si, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;Si:&nbsp;Unpin + ?Sized, Item&gt; Unpin for Send&lt;'_, Si, Item&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Si:&nbsp;?Sized, St:&nbsp;?Sized&gt; Unpin for SendAll&lt;'_, Si, St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: TryStream + Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Si, Item, U, Fut, F&gt; Unpin for With&lt;Si, Item, U, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__With&lt;'pin, Si, Item, U, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Si, Item, U, St, F&gt; Unpin for WithFlatMap&lt;Si, Item, U, St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__WithFlatMap&lt;'pin, Si, Item, U, St, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Si, Item&gt; Unpin for Buffer&lt;Si, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Buffer&lt;'pin, Si, Item&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Unpin for Compat01As03&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S, SinkItem&gt; Unpin for Compat01As03Sink&lt;S, SinkItem&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Unpin for AllowStdIo&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'pin, R&gt; Unpin for BufReader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__BufReader&lt;'pin, R&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, W&gt; Unpin for BufWriter&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__BufWriter&lt;'pin, W&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, T, U&gt; Unpin for Chain&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Chain&lt;'pin, T, U&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;W:&nbsp;?Sized + Unpin&gt; Unpin for Close&lt;'_, W&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'pin, 'a, R, W:&nbsp;?Sized&gt; Unpin for Copy&lt;'a, R, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Copy&lt;'pin, 'a, R, W&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, 'a, R, W:&nbsp;?Sized&gt; Unpin for CopyBuf&lt;'a, R, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__CopyBuf&lt;'pin, 'a, R, W&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;?Sized&gt; Unpin for FillBuf&lt;'_, R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;W:&nbsp;?Sized + Unpin&gt; Unpin for Flush&lt;'_, W&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'pin, W, Item&gt; Unpin for IntoSink&lt;W, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__IntoSink&lt;'pin, W, Item&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, R&gt; Unpin for Lines&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Lines&lt;'pin, R&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;?Sized + Unpin&gt; Unpin for Read&lt;'_, R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;?Sized + Unpin&gt; Unpin for ReadVectored&lt;'_, R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;?Sized + Unpin&gt; Unpin for ReadExact&lt;'_, R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;?Sized + Unpin&gt; Unpin for ReadLine&lt;'_, R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;?Sized + Unpin&gt; Unpin for ReadToEnd&lt;'_, R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;?Sized + Unpin&gt; Unpin for ReadToString&lt;'_, R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;?Sized + Unpin&gt; Unpin for ReadUntil&lt;'_, R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;?Sized + Unpin&gt; Unpin for Seek&lt;'_, S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'pin, R&gt; Unpin for Take&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Take&lt;'pin, R&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;W:&nbsp;?Sized + Unpin&gt; Unpin for Write&lt;'_, W&gt;","synthetic":false,"types":[]},{"text":"impl&lt;W:&nbsp;?Sized + Unpin&gt; Unpin for WriteVectored&lt;'_, W&gt;","synthetic":false,"types":[]},{"text":"impl&lt;W:&nbsp;?Sized + Unpin&gt; Unpin for WriteAll&lt;'_, W&gt;","synthetic":false,"types":[]}];
implementors["fuzz"] = [{"text":"impl Unpin for WORKSPACE_ROOT","synthetic":true,"types":[]},{"text":"impl Unpin for FUZZ_ROOT","synthetic":true,"types":[]},{"text":"impl Unpin for FUZZ_TARGETS","synthetic":true,"types":[]},{"text":"impl Unpin for SEED_ROOT","synthetic":true,"types":[]},{"text":"impl Unpin for Cli","synthetic":true,"types":[]},{"text":"impl Unpin for Fuzzer","synthetic":true,"types":[]}];
implementors["fxhash"] = [{"text":"impl Unpin for FxHasher","synthetic":true,"types":[]},{"text":"impl Unpin for FxHasher64","synthetic":true,"types":[]},{"text":"impl Unpin for FxHasher32","synthetic":true,"types":[]}];
implementors["generic_array"] = [{"text":"impl&lt;T, N&gt; Unpin for GenericArrayIter&lt;T, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;N as ArrayLength&lt;T&gt;&gt;::ArrayType: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Unpin for GenericArray&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as ArrayLength&lt;T&gt;&gt;::ArrayType: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["getrandom"] = [{"text":"impl Unpin for Error","synthetic":true,"types":[]}];
implementors["grpcio"] = [{"text":"impl Unpin for AuthContext","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for AuthPropertyIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for AuthProperty&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for GrpcSlice","synthetic":true,"types":[]},{"text":"impl Unpin for CallOption","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for ClientUnaryReceiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for ClientCStreamReceiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Req&gt; Unpin for StreamingCallSink&lt;Req&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Resp&gt; Unpin for ClientSStreamReceiver&lt;Resp&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Resp&gt; Unpin for ClientDuplexReceiver&lt;Resp&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Deadline","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for RequestStream&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for UnarySinkResult","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for UnarySink&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ClientStreamingSinkResult","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for ClientStreamingSink&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for ServerStreamingSink&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ServerStreamingSinkFailure","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for DuplexSink&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for DuplexSinkFailure","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for RpcContext&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for RpcStatusCode","synthetic":true,"types":[]},{"text":"impl Unpin for MethodType","synthetic":true,"types":[]},{"text":"impl&lt;Req, Resp&gt; Unpin for Method&lt;Req, Resp&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for RpcStatus","synthetic":true,"types":[]},{"text":"impl Unpin for WriteFlags","synthetic":true,"types":[]},{"text":"impl Unpin for OptTarget","synthetic":true,"types":[]},{"text":"impl Unpin for LbPolicy","synthetic":true,"types":[]},{"text":"impl Unpin for ChannelBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for Channel","synthetic":true,"types":[]},{"text":"impl Unpin for Client","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Marshaller&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for EnvBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for Environment","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for MetadataBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for Metadata","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for MetadataIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ResourceQuota","synthetic":true,"types":[]},{"text":"impl Unpin for CertificateRequestType","synthetic":true,"types":[]},{"text":"impl Unpin for ServerCredentialsBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for ServerCredentials","synthetic":true,"types":[]},{"text":"impl Unpin for ChannelCredentialsBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for ChannelCredentials","synthetic":true,"types":[]},{"text":"impl Unpin for ServiceBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for CheckResult","synthetic":true,"types":[]},{"text":"impl Unpin for Service","synthetic":true,"types":[]},{"text":"impl Unpin for ServerBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for ShutdownFuture","synthetic":true,"types":[]},{"text":"impl Unpin for Server","synthetic":true,"types":[]}];
implementors["grpcio_sys"] = [{"text":"impl Unpin for grpc_compression_algorithm","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_compression_level","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_compression_options","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_compression_options_grpc_compression_options_default_level","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_compression_options_grpc_compression_options_default_algorithm","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_slice_refcount","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_slice","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_slice_grpc_slice_data","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_slice_grpc_slice_data_grpc_slice_refcounted","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_slice_grpc_slice_data_grpc_slice_inlined","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_slice_buffer","synthetic":true,"types":[]},{"text":"impl Unpin for gpr_clock_type","synthetic":true,"types":[]},{"text":"impl Unpin for gpr_timespec","synthetic":true,"types":[]},{"text":"impl Unpin for gpr_event","synthetic":true,"types":[]},{"text":"impl Unpin for gpr_refcount","synthetic":true,"types":[]},{"text":"impl Unpin for gpr_stats_counter","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_slice_ref_whom","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_byte_buffer_type","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_byte_buffer","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_byte_buffer_grpc_byte_buffer_data","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_byte_buffer_grpc_byte_buffer_data__bindgen_ty_1","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_byte_buffer_grpc_byte_buffer_data_grpc_compressed_buffer","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_completion_queue","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_alarm","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_channel","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_server","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_call","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_socket_mutator","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_socket_factory","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_arg_type","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_arg_pointer_vtable","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_arg","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_arg_grpc_arg_value","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_arg_grpc_arg_value_grpc_arg_pointer","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_channel_args","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_call_error","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_metadata","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_metadata__bindgen_ty_1","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_completion_type","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_event","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_metadata_array","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_call_details","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_op_type","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_op","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_op_grpc_op_data","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_op_grpc_op_data__bindgen_ty_1","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_op_grpc_op_data_grpc_op_send_initial_metadata","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_op_grpc_op_data_grpc_op_send_initial_metadata_grpc_op_send_initial_metadata_maybe_compression_level","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_op_grpc_op_data_grpc_op_send_message","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_op_grpc_op_data_grpc_op_send_status_from_server","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_op_grpc_op_data_grpc_op_recv_initial_metadata","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_op_grpc_op_data_grpc_op_recv_message","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_op_grpc_op_data_grpc_op_recv_status_on_client","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_op_grpc_op_data_grpc_op_recv_close_on_server","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_channel_info","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_resource_quota","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_cq_polling_type","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_cq_completion_type","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_experimental_completion_queue_functor","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_completion_queue_attributes","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_completion_queue_factory","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_connectivity_state","synthetic":true,"types":[]},{"text":"impl Unpin for census_context","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_server_register_method_payload_handling","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_ssl_roots_override_result","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_ssl_certificate_config_reload_status","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_ssl_client_certificate_request_type","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_security_level","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_tls_server_verification_option","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_local_connect_type","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_tls_version","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_auth_context","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_auth_property_iterator","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_auth_property","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_ssl_session_cache","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_call_credentials","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_channel_credentials","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_ssl_pem_key_cert_pair","synthetic":true,"types":[]},{"text":"impl Unpin for verify_peer_options","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_ssl_verify_peer_options","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_sts_credentials_options","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_auth_metadata_context","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_metadata_credentials_plugin","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_server_credentials","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_ssl_server_certificate_config","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_ssl_server_credentials_options","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_auth_metadata_processor","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_alts_credentials_options","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_tls_error_details","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_tls_key_materials_config","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_tls_credential_reload_config","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_tls_server_authorization_check_config","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_tls_credentials_options","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_tls_credential_reload_arg","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_tls_server_authorization_check_arg","synthetic":true,"types":[]},{"text":"impl Unpin for gpr_log_severity","synthetic":true,"types":[]},{"text":"impl Unpin for gpr_log_func_args","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_byte_buffer_reader","synthetic":true,"types":[]},{"text":"impl Unpin for grpc_byte_buffer_reader_grpc_byte_buffer_reader_current","synthetic":true,"types":[]},{"text":"impl Unpin for grpcwrap_batch_context","synthetic":true,"types":[]},{"text":"impl Unpin for grpcwrap_batch_context__bindgen_ty_1","synthetic":true,"types":[]},{"text":"impl Unpin for grpcwrap_batch_context__bindgen_ty_2","synthetic":true,"types":[]},{"text":"impl Unpin for grpcwrap_request_call_context","synthetic":true,"types":[]}];
implementors["h2"] = [{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Reason","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for SendRequest&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for ReadySendRequest&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, B&gt; Unpin for Connection&lt;T, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ResponseFuture","synthetic":true,"types":[]},{"text":"impl Unpin for PushedResponseFuture","synthetic":true,"types":[]},{"text":"impl Unpin for PushPromise","synthetic":true,"types":[]},{"text":"impl Unpin for PushPromises","synthetic":true,"types":[]},{"text":"impl Unpin for Builder","synthetic":true,"types":[]},{"text":"impl&lt;T, B&gt; Unpin for Handshake&lt;T, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, B&gt; Unpin for Connection&lt;T, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Builder","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for SendResponse&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for SendPushedResponse&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for SendStream&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for StreamId","synthetic":true,"types":[]},{"text":"impl Unpin for RecvStream","synthetic":true,"types":[]},{"text":"impl Unpin for FlowControl","synthetic":true,"types":[]},{"text":"impl Unpin for PingPong","synthetic":true,"types":[]},{"text":"impl Unpin for Ping","synthetic":true,"types":[]},{"text":"impl Unpin for Pong","synthetic":true,"types":[]}];
implementors["hex"] = [{"text":"impl Unpin for FromHexError","synthetic":true,"types":[]}];
implementors["hmac"] = [{"text":"impl&lt;D&gt; Unpin for Hmac&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;D as BlockInput&gt;::BlockSize as ArrayLength&lt;u8&gt;&gt;::ArrayType: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["http"] = [{"text":"impl&lt;T&gt; Unpin for HeaderMap&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Keys&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Values&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for ValuesMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Drain&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for GetAll&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Entry&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for VacantEntry&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for OccupiedEntry&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for ValueIter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for ValueIterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for ValueDrain&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for HeaderName","synthetic":true,"types":[]},{"text":"impl Unpin for InvalidHeaderName","synthetic":true,"types":[]},{"text":"impl Unpin for HeaderValue","synthetic":true,"types":[]},{"text":"impl Unpin for InvalidHeaderValue","synthetic":true,"types":[]},{"text":"impl Unpin for ToStrError","synthetic":true,"types":[]},{"text":"impl Unpin for Method","synthetic":true,"types":[]},{"text":"impl Unpin for InvalidMethod","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Request&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Parts","synthetic":true,"types":[]},{"text":"impl Unpin for Builder","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Response&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Parts","synthetic":true,"types":[]},{"text":"impl Unpin for Builder","synthetic":true,"types":[]},{"text":"impl Unpin for StatusCode","synthetic":true,"types":[]},{"text":"impl Unpin for InvalidStatusCode","synthetic":true,"types":[]},{"text":"impl Unpin for Authority","synthetic":true,"types":[]},{"text":"impl Unpin for Builder","synthetic":true,"types":[]},{"text":"impl Unpin for PathAndQuery","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Port&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Scheme","synthetic":true,"types":[]},{"text":"impl Unpin for Uri","synthetic":true,"types":[]},{"text":"impl Unpin for Parts","synthetic":true,"types":[]},{"text":"impl Unpin for InvalidUri","synthetic":true,"types":[]},{"text":"impl Unpin for InvalidUriParts","synthetic":true,"types":[]},{"text":"impl Unpin for Version","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Extensions","synthetic":true,"types":[]}];
implementors["http_body"] = [{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Unpin for Data&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Unpin for Trailers&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for SizeHint","synthetic":true,"types":[]}];
implementors["httparse"] = [{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for InvalidChunkSize","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Status&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'headers, 'buf&gt; Unpin for Request&lt;'headers, 'buf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'buf: 'headers,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'headers, 'buf&gt; Unpin for Response&lt;'headers, 'buf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'buf: 'headers,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Header&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["hyper"] = [{"text":"impl Unpin for Body","synthetic":true,"types":[]},{"text":"impl Unpin for Sender","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for SendRequest&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, B&gt; Unpin for Connection&lt;T, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Builder","synthetic":true,"types":[]},{"text":"impl Unpin for ResponseFuture","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Parts&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Name","synthetic":true,"types":[]},{"text":"impl Unpin for GaiResolver","synthetic":true,"types":[]},{"text":"impl Unpin for GaiAddrs","synthetic":true,"types":[]},{"text":"impl Unpin for GaiFuture","synthetic":true,"types":[]},{"text":"impl Unpin for InvalidNameError","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for HttpConnector&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for HttpInfo","synthetic":true,"types":[]},{"text":"impl Unpin for Connected","synthetic":true,"types":[]},{"text":"impl&lt;C, B, T&gt; Unpin for Connect&lt;C, B, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;C, B&gt; Unpin for Client&lt;C, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ResponseFuture","synthetic":true,"types":[]},{"text":"impl Unpin for Builder","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for AddrIncoming","synthetic":true,"types":[]},{"text":"impl Unpin for AddrStream","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for Http&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; Unpin for Parts&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, E&gt; Unpin for Builder&lt;I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Upgraded","synthetic":true,"types":[]},{"text":"impl Unpin for OnUpgrade","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Parts&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'pin, I, F, E&gt; Unpin for Connecting&lt;I, F, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Connecting&lt;'pin, I, F, E&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, T, S, E&gt; Unpin for Connection&lt;T, S, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: HttpService&lt;Body&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;__Connection&lt;'pin, T, S, E&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, I, S, E&gt; Unpin for Server&lt;I, S, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Server&lt;'pin, I, S, E&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["hyper_openssl"] = [{"text":"impl&lt;T&gt; Unpin for HttpsConnector&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for MaybeHttpsStream&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["hyper_tls"] = [{"text":"impl&lt;T&gt; Unpin for HttpsConnector&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for HttpsConnecting&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for MaybeHttpsStream&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["ident_case"] = [{"text":"impl Unpin for RenameRule","synthetic":true,"types":[]}];
implementors["idna"] = [{"text":"impl Unpin for Config","synthetic":true,"types":[]},{"text":"impl Unpin for Errors","synthetic":true,"types":[]}];
implementors["indexmap"] = [{"text":"impl&lt;T, S&gt; Unpin for IndexSet&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Drain&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Unpin for Difference&lt;'a, T, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Unpin for Intersection&lt;'a, T, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S1, S2&gt; Unpin for SymmetricDifference&lt;'a, T, S1, S2&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Unpin for Union&lt;'a, T, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V, S&gt; Unpin for IndexMap&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Entry&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for OccupiedEntry&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for VacantEntry&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Keys&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Values&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for ValuesMut&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Iter&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for IterMut&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Unpin for IntoIter&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Drain&lt;'a, K, V&gt;","synthetic":true,"types":[]}];
implementors["inferno"] = [{"text":"impl Unpin for Options","synthetic":true,"types":[]},{"text":"impl Unpin for Folder","synthetic":true,"types":[]},{"text":"impl Unpin for Options","synthetic":true,"types":[]},{"text":"impl Unpin for Folder","synthetic":true,"types":[]},{"text":"impl Unpin for Options","synthetic":true,"types":[]},{"text":"impl Unpin for Folder","synthetic":true,"types":[]},{"text":"impl Unpin for Options","synthetic":true,"types":[]},{"text":"impl Unpin for Folder","synthetic":true,"types":[]},{"text":"impl Unpin for Options","synthetic":true,"types":[]},{"text":"impl Unpin for Folder","synthetic":true,"types":[]},{"text":"impl Unpin for Options","synthetic":true,"types":[]},{"text":"impl Unpin for FuncFrameAttrsMap","synthetic":true,"types":[]},{"text":"impl Unpin for PaletteMap","synthetic":true,"types":[]},{"text":"impl Unpin for BackgroundColor","synthetic":true,"types":[]},{"text":"impl Unpin for Palette","synthetic":true,"types":[]},{"text":"impl Unpin for BasicPalette","synthetic":true,"types":[]},{"text":"impl Unpin for MultiPalette","synthetic":true,"types":[]},{"text":"impl Unpin for SearchColor","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Options&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Direction","synthetic":true,"types":[]},{"text":"impl Unpin for TextTruncateDirection","synthetic":true,"types":[]}];
implementors["iovec"] = [{"text":"impl Unpin for IoVec","synthetic":true,"types":[]}];
implementors["ipnet"] = [{"text":"impl Unpin for IpAddrRange","synthetic":true,"types":[]},{"text":"impl Unpin for Ipv4AddrRange","synthetic":true,"types":[]},{"text":"impl Unpin for Ipv6AddrRange","synthetic":true,"types":[]},{"text":"impl Unpin for IpNet","synthetic":true,"types":[]},{"text":"impl Unpin for Ipv4Net","synthetic":true,"types":[]},{"text":"impl Unpin for Ipv6Net","synthetic":true,"types":[]},{"text":"impl Unpin for PrefixLenError","synthetic":true,"types":[]},{"text":"impl Unpin for IpSubnets","synthetic":true,"types":[]},{"text":"impl Unpin for Ipv4Subnets","synthetic":true,"types":[]},{"text":"impl Unpin for Ipv6Subnets","synthetic":true,"types":[]},{"text":"impl Unpin for AddrParseError","synthetic":true,"types":[]}];
implementors["ipnetwork"] = [{"text":"impl Unpin for IpNetworkError","synthetic":true,"types":[]},{"text":"impl Unpin for Ipv4Network","synthetic":true,"types":[]},{"text":"impl Unpin for Ipv6Network","synthetic":true,"types":[]},{"text":"impl Unpin for IpNetwork","synthetic":true,"types":[]},{"text":"impl Unpin for NetworkSize","synthetic":true,"types":[]}];
implementors["itertools"] = [{"text":"impl&lt;I, Pred&gt; Unpin for DedupBy&lt;I, Pred&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Pred: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J&gt; Unpin for Interleave&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J&gt; Unpin for InterleaveShortest&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J&gt; Unpin for Product&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for PutBack&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; Unpin for Batching&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, R&gt; Unpin for MapInto&lt;I, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; Unpin for MapResults&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J, F&gt; Unpin for MergeBy&lt;I, J, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I, F&gt; Unpin for TakeWhileRef&lt;'a, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for WhileSome&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; Unpin for Coalesce&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, T&gt; Unpin for TupleCombinations&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as HasCombination&lt;I&gt;&gt;::Combination: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; Unpin for Positions&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; Unpin for Update&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for Step&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for MultiProduct&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for Combinations&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for CombinationsWithReplacement&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J&gt; Unpin for ConsTuples&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for ExactlyOneError&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; Unpin for Format&lt;'a, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I, F&gt; Unpin for FormatWith&lt;'a, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for IntoChunks&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; Unpin for Chunk&lt;'a, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; Unpin for Chunks&lt;'a, I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, I, F&gt; Unpin for GroupBy&lt;K, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, I, F&gt; Unpin for Group&lt;'a, K, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, I, F&gt; Unpin for Groups&lt;'a, K, I, F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for Intersperse&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; Unpin for KMergeBy&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J, F&gt; Unpin for MergeJoinBy&lt;I, J, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;J as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for MultiPeek&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; Unpin for PadUsing&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I, F&gt; Unpin for PeekingTakeWhile&lt;'a, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for Permutations&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I, E&gt; Unpin for ProcessResults&lt;'a, I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for PutBackN&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for RcIter&lt;I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for RepeatN&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Unpin for RepeatCall&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; Unpin for Unfold&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; Unpin for Iterate&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for Tee&lt;I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for TupleBuffer&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as TupleCollect&gt;::Buffer: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, T&gt; Unpin for TupleWindows&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, T&gt; Unpin for Tuples&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as TupleCollect&gt;::Buffer: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for Unique&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, V, F&gt; Unpin for UniqueBy&lt;I, V, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for WithPosition&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J&gt; Unpin for ZipEq&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Unpin for ZipLongest&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Zip&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Unpin for EitherOrBoth&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J&gt; Unpin for Diff&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;J as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for MinMaxResult&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Position&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for FoldWhile&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["itoa"] = [{"text":"impl Unpin for Buffer","synthetic":true,"types":[]}];
implementors["keys"] = [{"text":"impl Unpin for WrongPrefix","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]}];
implementors["kvproto"] = [{"text":"impl Unpin for BatchCommandsRequest","synthetic":true,"types":[]},{"text":"impl Unpin for BatchCommandsRequestRequest","synthetic":true,"types":[]},{"text":"impl Unpin for BatchCommandsRequest_Request_oneof_cmd","synthetic":true,"types":[]},{"text":"impl Unpin for BatchCommandsResponse","synthetic":true,"types":[]},{"text":"impl Unpin for BatchCommandsResponseResponse","synthetic":true,"types":[]},{"text":"impl Unpin for BatchCommandsResponse_Response_oneof_cmd","synthetic":true,"types":[]},{"text":"impl Unpin for BatchRaftMessage","synthetic":true,"types":[]},{"text":"impl Unpin for BatchCommandsEmptyRequest","synthetic":true,"types":[]},{"text":"impl Unpin for BatchCommandsEmptyResponse","synthetic":true,"types":[]},{"text":"impl Unpin for PdClient","synthetic":true,"types":[]},{"text":"impl Unpin for TikvClient","synthetic":true,"types":[]},{"text":"impl Unpin for EngineClient","synthetic":true,"types":[]},{"text":"impl Unpin for ReplicationStatus","synthetic":true,"types":[]},{"text":"impl Unpin for DrAutoSync","synthetic":true,"types":[]},{"text":"impl Unpin for RegionReplicationStatus","synthetic":true,"types":[]},{"text":"impl Unpin for ReplicationMode","synthetic":true,"types":[]},{"text":"impl Unpin for DrAutoSyncState","synthetic":true,"types":[]},{"text":"impl Unpin for RegionReplicationState","synthetic":true,"types":[]},{"text":"impl Unpin for ChangeDataClient","synthetic":true,"types":[]},{"text":"impl Unpin for ConfigClient","synthetic":true,"types":[]},{"text":"impl Unpin for CommandRequestHeader","synthetic":true,"types":[]},{"text":"impl Unpin for CommandRequest","synthetic":true,"types":[]},{"text":"impl Unpin for CommandRequestBatch","synthetic":true,"types":[]},{"text":"impl Unpin for CommandResponseHeader","synthetic":true,"types":[]},{"text":"impl Unpin for CommandResponse","synthetic":true,"types":[]},{"text":"impl Unpin for CommandResponseBatch","synthetic":true,"types":[]},{"text":"impl Unpin for SnapshotState","synthetic":true,"types":[]},{"text":"impl Unpin for SnapshotData","synthetic":true,"types":[]},{"text":"impl Unpin for SnapshotRequest","synthetic":true,"types":[]},{"text":"impl Unpin for SnapshotRequest_oneof_chunk","synthetic":true,"types":[]},{"text":"impl Unpin for SnapshotDone","synthetic":true,"types":[]},{"text":"impl Unpin for SpanSet","synthetic":true,"types":[]},{"text":"impl Unpin for Root","synthetic":true,"types":[]},{"text":"impl Unpin for Parent","synthetic":true,"types":[]},{"text":"impl Unpin for Continue","synthetic":true,"types":[]},{"text":"impl Unpin for Link","synthetic":true,"types":[]},{"text":"impl Unpin for Link_oneof_link","synthetic":true,"types":[]},{"text":"impl Unpin for Span","synthetic":true,"types":[]},{"text":"impl Unpin for Cluster","synthetic":true,"types":[]},{"text":"impl Unpin for StoreLabel","synthetic":true,"types":[]},{"text":"impl Unpin for Store","synthetic":true,"types":[]},{"text":"impl Unpin for RegionEpoch","synthetic":true,"types":[]},{"text":"impl Unpin for Region","synthetic":true,"types":[]},{"text":"impl Unpin for Peer","synthetic":true,"types":[]},{"text":"impl Unpin for StoreState","synthetic":true,"types":[]},{"text":"impl Unpin for PeerRole","synthetic":true,"types":[]},{"text":"impl Unpin for RequestHeader","synthetic":true,"types":[]},{"text":"impl Unpin for ResponseHeader","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for TsoRequest","synthetic":true,"types":[]},{"text":"impl Unpin for Timestamp","synthetic":true,"types":[]},{"text":"impl Unpin for TsoResponse","synthetic":true,"types":[]},{"text":"impl Unpin for BootstrapRequest","synthetic":true,"types":[]},{"text":"impl Unpin for BootstrapResponse","synthetic":true,"types":[]},{"text":"impl Unpin for IsBootstrappedRequest","synthetic":true,"types":[]},{"text":"impl Unpin for IsBootstrappedResponse","synthetic":true,"types":[]},{"text":"impl Unpin for AllocIdRequest","synthetic":true,"types":[]},{"text":"impl Unpin for AllocIdResponse","synthetic":true,"types":[]},{"text":"impl Unpin for GetStoreRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GetStoreResponse","synthetic":true,"types":[]},{"text":"impl Unpin for PutStoreRequest","synthetic":true,"types":[]},{"text":"impl Unpin for PutStoreResponse","synthetic":true,"types":[]},{"text":"impl Unpin for GetAllStoresRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GetAllStoresResponse","synthetic":true,"types":[]},{"text":"impl Unpin for GetRegionRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GetRegionResponse","synthetic":true,"types":[]},{"text":"impl Unpin for GetRegionByIdRequest","synthetic":true,"types":[]},{"text":"impl Unpin for ScanRegionsRequest","synthetic":true,"types":[]},{"text":"impl Unpin for Region","synthetic":true,"types":[]},{"text":"impl Unpin for ScanRegionsResponse","synthetic":true,"types":[]},{"text":"impl Unpin for GetClusterConfigRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GetClusterConfigResponse","synthetic":true,"types":[]},{"text":"impl Unpin for PutClusterConfigRequest","synthetic":true,"types":[]},{"text":"impl Unpin for PutClusterConfigResponse","synthetic":true,"types":[]},{"text":"impl Unpin for Member","synthetic":true,"types":[]},{"text":"impl Unpin for GetMembersRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GetMembersResponse","synthetic":true,"types":[]},{"text":"impl Unpin for PeerStats","synthetic":true,"types":[]},{"text":"impl Unpin for RegionHeartbeatRequest","synthetic":true,"types":[]},{"text":"impl Unpin for ChangePeer","synthetic":true,"types":[]},{"text":"impl Unpin for ChangePeerV2","synthetic":true,"types":[]},{"text":"impl Unpin for TransferLeader","synthetic":true,"types":[]},{"text":"impl Unpin for Merge","synthetic":true,"types":[]},{"text":"impl Unpin for SplitRegion","synthetic":true,"types":[]},{"text":"impl Unpin for RegionHeartbeatResponse","synthetic":true,"types":[]},{"text":"impl Unpin for AskSplitRequest","synthetic":true,"types":[]},{"text":"impl Unpin for AskSplitResponse","synthetic":true,"types":[]},{"text":"impl Unpin for ReportSplitRequest","synthetic":true,"types":[]},{"text":"impl Unpin for ReportSplitResponse","synthetic":true,"types":[]},{"text":"impl Unpin for AskBatchSplitRequest","synthetic":true,"types":[]},{"text":"impl Unpin for SplitId","synthetic":true,"types":[]},{"text":"impl Unpin for AskBatchSplitResponse","synthetic":true,"types":[]},{"text":"impl Unpin for ReportBatchSplitRequest","synthetic":true,"types":[]},{"text":"impl Unpin for ReportBatchSplitResponse","synthetic":true,"types":[]},{"text":"impl Unpin for TimeInterval","synthetic":true,"types":[]},{"text":"impl Unpin for RecordPair","synthetic":true,"types":[]},{"text":"impl Unpin for StoreStats","synthetic":true,"types":[]},{"text":"impl Unpin for StoreHeartbeatRequest","synthetic":true,"types":[]},{"text":"impl Unpin for StoreHeartbeatResponse","synthetic":true,"types":[]},{"text":"impl Unpin for ScatterRegionRequest","synthetic":true,"types":[]},{"text":"impl Unpin for ScatterRegionResponse","synthetic":true,"types":[]},{"text":"impl Unpin for GetGcSafePointRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GetGcSafePointResponse","synthetic":true,"types":[]},{"text":"impl Unpin for UpdateGcSafePointRequest","synthetic":true,"types":[]},{"text":"impl Unpin for UpdateGcSafePointResponse","synthetic":true,"types":[]},{"text":"impl Unpin for UpdateServiceGcSafePointRequest","synthetic":true,"types":[]},{"text":"impl Unpin for UpdateServiceGcSafePointResponse","synthetic":true,"types":[]},{"text":"impl Unpin for RegionStat","synthetic":true,"types":[]},{"text":"impl Unpin for SyncRegionRequest","synthetic":true,"types":[]},{"text":"impl Unpin for SyncRegionResponse","synthetic":true,"types":[]},{"text":"impl Unpin for GetOperatorRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GetOperatorResponse","synthetic":true,"types":[]},{"text":"impl Unpin for SyncMaxTsRequest","synthetic":true,"types":[]},{"text":"impl Unpin for SyncMaxTsResponse","synthetic":true,"types":[]},{"text":"impl Unpin for SplitRegionsRequest","synthetic":true,"types":[]},{"text":"impl Unpin for SplitRegionsResponse","synthetic":true,"types":[]},{"text":"impl Unpin for GetDcLocationInfoRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GetDcLocationInfoResponse","synthetic":true,"types":[]},{"text":"impl Unpin for ErrorType","synthetic":true,"types":[]},{"text":"impl Unpin for CheckPolicy","synthetic":true,"types":[]},{"text":"impl Unpin for OperatorStatus","synthetic":true,"types":[]},{"text":"impl Unpin for GetRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GetResponse","synthetic":true,"types":[]},{"text":"impl Unpin for PutRequest","synthetic":true,"types":[]},{"text":"impl Unpin for PutResponse","synthetic":true,"types":[]},{"text":"impl Unpin for DeleteRequest","synthetic":true,"types":[]},{"text":"impl Unpin for DeleteResponse","synthetic":true,"types":[]},{"text":"impl Unpin for DeleteRangeRequest","synthetic":true,"types":[]},{"text":"impl Unpin for DeleteRangeResponse","synthetic":true,"types":[]},{"text":"impl Unpin for SnapRequest","synthetic":true,"types":[]},{"text":"impl Unpin for SnapResponse","synthetic":true,"types":[]},{"text":"impl Unpin for PrewriteRequest","synthetic":true,"types":[]},{"text":"impl Unpin for PrewriteResponse","synthetic":true,"types":[]},{"text":"impl Unpin for IngestSstRequest","synthetic":true,"types":[]},{"text":"impl Unpin for IngestSstResponse","synthetic":true,"types":[]},{"text":"impl Unpin for ReadIndexRequest","synthetic":true,"types":[]},{"text":"impl Unpin for ReadIndexResponse","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Response","synthetic":true,"types":[]},{"text":"impl Unpin for ChangePeerRequest","synthetic":true,"types":[]},{"text":"impl Unpin for ChangePeerResponse","synthetic":true,"types":[]},{"text":"impl Unpin for ChangePeerV2Request","synthetic":true,"types":[]},{"text":"impl Unpin for ChangePeerV2Response","synthetic":true,"types":[]},{"text":"impl Unpin for SplitRequest","synthetic":true,"types":[]},{"text":"impl Unpin for SplitResponse","synthetic":true,"types":[]},{"text":"impl Unpin for BatchSplitRequest","synthetic":true,"types":[]},{"text":"impl Unpin for BatchSplitResponse","synthetic":true,"types":[]},{"text":"impl Unpin for CompactLogRequest","synthetic":true,"types":[]},{"text":"impl Unpin for CompactLogResponse","synthetic":true,"types":[]},{"text":"impl Unpin for TransferLeaderRequest","synthetic":true,"types":[]},{"text":"impl Unpin for TransferLeaderResponse","synthetic":true,"types":[]},{"text":"impl Unpin for ComputeHashRequest","synthetic":true,"types":[]},{"text":"impl Unpin for VerifyHashRequest","synthetic":true,"types":[]},{"text":"impl Unpin for VerifyHashResponse","synthetic":true,"types":[]},{"text":"impl Unpin for PrepareMergeRequest","synthetic":true,"types":[]},{"text":"impl Unpin for PrepareMergeResponse","synthetic":true,"types":[]},{"text":"impl Unpin for CommitMergeRequest","synthetic":true,"types":[]},{"text":"impl Unpin for CommitMergeResponse","synthetic":true,"types":[]},{"text":"impl Unpin for RollbackMergeRequest","synthetic":true,"types":[]},{"text":"impl Unpin for RollbackMergeResponse","synthetic":true,"types":[]},{"text":"impl Unpin for AdminRequest","synthetic":true,"types":[]},{"text":"impl Unpin for AdminResponse","synthetic":true,"types":[]},{"text":"impl Unpin for RegionLeaderRequest","synthetic":true,"types":[]},{"text":"impl Unpin for RegionLeaderResponse","synthetic":true,"types":[]},{"text":"impl Unpin for RegionDetailRequest","synthetic":true,"types":[]},{"text":"impl Unpin for RegionDetailResponse","synthetic":true,"types":[]},{"text":"impl Unpin for StatusRequest","synthetic":true,"types":[]},{"text":"impl Unpin for StatusResponse","synthetic":true,"types":[]},{"text":"impl Unpin for RaftRequestHeader","synthetic":true,"types":[]},{"text":"impl Unpin for RaftResponseHeader","synthetic":true,"types":[]},{"text":"impl Unpin for RaftCmdRequest","synthetic":true,"types":[]},{"text":"impl Unpin for RaftCmdResponse","synthetic":true,"types":[]},{"text":"impl Unpin for CmdType","synthetic":true,"types":[]},{"text":"impl Unpin for AdminCmdType","synthetic":true,"types":[]},{"text":"impl Unpin for StatusCmdType","synthetic":true,"types":[]},{"text":"impl Unpin for RaftMessage","synthetic":true,"types":[]},{"text":"impl Unpin for RaftTruncatedState","synthetic":true,"types":[]},{"text":"impl Unpin for SnapshotCfFile","synthetic":true,"types":[]},{"text":"impl Unpin for SnapshotMeta","synthetic":true,"types":[]},{"text":"impl Unpin for SnapshotChunk","synthetic":true,"types":[]},{"text":"impl Unpin for Done","synthetic":true,"types":[]},{"text":"impl Unpin for KeyValue","synthetic":true,"types":[]},{"text":"impl Unpin for RaftSnapshotData","synthetic":true,"types":[]},{"text":"impl Unpin for StoreIdent","synthetic":true,"types":[]},{"text":"impl Unpin for RaftLocalState","synthetic":true,"types":[]},{"text":"impl Unpin for RaftApplyState","synthetic":true,"types":[]},{"text":"impl Unpin for MergeState","synthetic":true,"types":[]},{"text":"impl Unpin for RegionLocalState","synthetic":true,"types":[]},{"text":"impl Unpin for ExtraMessage","synthetic":true,"types":[]},{"text":"impl Unpin for PeerState","synthetic":true,"types":[]},{"text":"impl Unpin for ExtraMessageType","synthetic":true,"types":[]},{"text":"impl Unpin for EncryptionMeta","synthetic":true,"types":[]},{"text":"impl Unpin for FileInfo","synthetic":true,"types":[]},{"text":"impl Unpin for FileDictionary","synthetic":true,"types":[]},{"text":"impl Unpin for DataKey","synthetic":true,"types":[]},{"text":"impl Unpin for KeyDictionary","synthetic":true,"types":[]},{"text":"impl Unpin for MasterKey","synthetic":true,"types":[]},{"text":"impl Unpin for MasterKey_oneof_backend","synthetic":true,"types":[]},{"text":"impl Unpin for MasterKeyPlaintext","synthetic":true,"types":[]},{"text":"impl Unpin for MasterKeyFile","synthetic":true,"types":[]},{"text":"impl Unpin for MasterKeyKms","synthetic":true,"types":[]},{"text":"impl Unpin for EncryptedContent","synthetic":true,"types":[]},{"text":"impl Unpin for EncryptionMethod","synthetic":true,"types":[]},{"text":"impl Unpin for KeyRange","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Response","synthetic":true,"types":[]},{"text":"impl Unpin for RegionInfo","synthetic":true,"types":[]},{"text":"impl Unpin for BatchRequest","synthetic":true,"types":[]},{"text":"impl Unpin for BatchResponse","synthetic":true,"types":[]},{"text":"impl Unpin for SwitchModeRequest","synthetic":true,"types":[]},{"text":"impl Unpin for SwitchModeResponse","synthetic":true,"types":[]},{"text":"impl Unpin for Range","synthetic":true,"types":[]},{"text":"impl Unpin for SstMeta","synthetic":true,"types":[]},{"text":"impl Unpin for RewriteRule","synthetic":true,"types":[]},{"text":"impl Unpin for UploadRequest","synthetic":true,"types":[]},{"text":"impl Unpin for UploadRequest_oneof_chunk","synthetic":true,"types":[]},{"text":"impl Unpin for UploadResponse","synthetic":true,"types":[]},{"text":"impl Unpin for IngestRequest","synthetic":true,"types":[]},{"text":"impl Unpin for IngestResponse","synthetic":true,"types":[]},{"text":"impl Unpin for CompactRequest","synthetic":true,"types":[]},{"text":"impl Unpin for CompactResponse","synthetic":true,"types":[]},{"text":"impl Unpin for DownloadRequest","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for DownloadResponse","synthetic":true,"types":[]},{"text":"impl Unpin for SetDownloadSpeedLimitRequest","synthetic":true,"types":[]},{"text":"impl Unpin for SetDownloadSpeedLimitResponse","synthetic":true,"types":[]},{"text":"impl Unpin for Pair","synthetic":true,"types":[]},{"text":"impl Unpin for PairOp","synthetic":true,"types":[]},{"text":"impl Unpin for WriteBatch","synthetic":true,"types":[]},{"text":"impl Unpin for WriteRequest","synthetic":true,"types":[]},{"text":"impl Unpin for WriteRequest_oneof_chunk","synthetic":true,"types":[]},{"text":"impl Unpin for WriteResponse","synthetic":true,"types":[]},{"text":"impl Unpin for SwitchMode","synthetic":true,"types":[]},{"text":"impl Unpin for Header","synthetic":true,"types":[]},{"text":"impl Unpin for DuplicateRequest","synthetic":true,"types":[]},{"text":"impl Unpin for Compatibility","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for TxnInfo","synthetic":true,"types":[]},{"text":"impl Unpin for TxnStatus","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for Event_oneof_event","synthetic":true,"types":[]},{"text":"impl Unpin for EventRow","synthetic":true,"types":[]},{"text":"impl Unpin for EventRowOpType","synthetic":true,"types":[]},{"text":"impl Unpin for EventEntries","synthetic":true,"types":[]},{"text":"impl Unpin for EventAdmin","synthetic":true,"types":[]},{"text":"impl Unpin for EventLongTxn","synthetic":true,"types":[]},{"text":"impl Unpin for EventLogType","synthetic":true,"types":[]},{"text":"impl Unpin for ChangeDataEvent","synthetic":true,"types":[]},{"text":"impl Unpin for ResolvedTs","synthetic":true,"types":[]},{"text":"impl Unpin for ChangeDataRequest","synthetic":true,"types":[]},{"text":"impl Unpin for ChangeDataRequest_oneof_request","synthetic":true,"types":[]},{"text":"impl Unpin for ChangeDataRequestRegister","synthetic":true,"types":[]},{"text":"impl Unpin for ChangeDataRequestNotifyTxnStatus","synthetic":true,"types":[]},{"text":"impl Unpin for ImportKvClient","synthetic":true,"types":[]},{"text":"impl Unpin for BackupMeta","synthetic":true,"types":[]},{"text":"impl Unpin for File","synthetic":true,"types":[]},{"text":"impl Unpin for Schema","synthetic":true,"types":[]},{"text":"impl Unpin for RawRange","synthetic":true,"types":[]},{"text":"impl Unpin for ClusterIdError","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Error_oneof_detail","synthetic":true,"types":[]},{"text":"impl Unpin for BackupRequest","synthetic":true,"types":[]},{"text":"impl Unpin for StorageBackend","synthetic":true,"types":[]},{"text":"impl Unpin for StorageBackend_oneof_backend","synthetic":true,"types":[]},{"text":"impl Unpin for Noop","synthetic":true,"types":[]},{"text":"impl Unpin for Local","synthetic":true,"types":[]},{"text":"impl Unpin for S3","synthetic":true,"types":[]},{"text":"impl Unpin for Gcs","synthetic":true,"types":[]},{"text":"impl Unpin for BackupResponse","synthetic":true,"types":[]},{"text":"impl Unpin for CompressionType","synthetic":true,"types":[]},{"text":"impl Unpin for DebugClient","synthetic":true,"types":[]},{"text":"impl Unpin for SearchLogRequest","synthetic":true,"types":[]},{"text":"impl Unpin for SearchLogRequestTarget","synthetic":true,"types":[]},{"text":"impl Unpin for SearchLogResponse","synthetic":true,"types":[]},{"text":"impl Unpin for LogMessage","synthetic":true,"types":[]},{"text":"impl Unpin for ServerInfoRequest","synthetic":true,"types":[]},{"text":"impl Unpin for ServerInfoPair","synthetic":true,"types":[]},{"text":"impl Unpin for ServerInfoItem","synthetic":true,"types":[]},{"text":"impl Unpin for ServerInfoResponse","synthetic":true,"types":[]},{"text":"impl Unpin for LogLevel","synthetic":true,"types":[]},{"text":"impl Unpin for ServerInfoType","synthetic":true,"types":[]},{"text":"impl Unpin for DeadlockClient","synthetic":true,"types":[]},{"text":"impl Unpin for DiagnosticsClient","synthetic":true,"types":[]},{"text":"impl Unpin for Status","synthetic":true,"types":[]},{"text":"impl Unpin for Version","synthetic":true,"types":[]},{"text":"impl Unpin for Local","synthetic":true,"types":[]},{"text":"impl Unpin for Global","synthetic":true,"types":[]},{"text":"impl Unpin for ConfigKind","synthetic":true,"types":[]},{"text":"impl Unpin for ConfigKind_oneof_kind","synthetic":true,"types":[]},{"text":"impl Unpin for ConfigEntry","synthetic":true,"types":[]},{"text":"impl Unpin for LocalConfig","synthetic":true,"types":[]},{"text":"impl Unpin for Header","synthetic":true,"types":[]},{"text":"impl Unpin for CreateRequest","synthetic":true,"types":[]},{"text":"impl Unpin for CreateResponse","synthetic":true,"types":[]},{"text":"impl Unpin for GetAllRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GetAllResponse","synthetic":true,"types":[]},{"text":"impl Unpin for GetRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GetResponse","synthetic":true,"types":[]},{"text":"impl Unpin for UpdateRequest","synthetic":true,"types":[]},{"text":"impl Unpin for UpdateResponse","synthetic":true,"types":[]},{"text":"impl Unpin for DeleteRequest","synthetic":true,"types":[]},{"text":"impl Unpin for DeleteResponse","synthetic":true,"types":[]},{"text":"impl Unpin for StatusCode","synthetic":true,"types":[]},{"text":"impl Unpin for TaskMeta","synthetic":true,"types":[]},{"text":"impl Unpin for DispatchTaskRequest","synthetic":true,"types":[]},{"text":"impl Unpin for DispatchTaskResponse","synthetic":true,"types":[]},{"text":"impl Unpin for CancelTaskRequest","synthetic":true,"types":[]},{"text":"impl Unpin for CancelTaskResponse","synthetic":true,"types":[]},{"text":"impl Unpin for EstablishMppConnectionRequest","synthetic":true,"types":[]},{"text":"impl Unpin for MppDataPacket","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for SwitchModeRequest","synthetic":true,"types":[]},{"text":"impl Unpin for SwitchModeResponse","synthetic":true,"types":[]},{"text":"impl Unpin for OpenEngineRequest","synthetic":true,"types":[]},{"text":"impl Unpin for OpenEngineResponse","synthetic":true,"types":[]},{"text":"impl Unpin for WriteHead","synthetic":true,"types":[]},{"text":"impl Unpin for Mutation","synthetic":true,"types":[]},{"text":"impl Unpin for MutationOp","synthetic":true,"types":[]},{"text":"impl Unpin for WriteBatch","synthetic":true,"types":[]},{"text":"impl Unpin for WriteEngineRequest","synthetic":true,"types":[]},{"text":"impl Unpin for WriteEngineRequest_oneof_chunk","synthetic":true,"types":[]},{"text":"impl Unpin for KvPair","synthetic":true,"types":[]},{"text":"impl Unpin for WriteEngineV3Request","synthetic":true,"types":[]},{"text":"impl Unpin for WriteEngineResponse","synthetic":true,"types":[]},{"text":"impl Unpin for CloseEngineRequest","synthetic":true,"types":[]},{"text":"impl Unpin for CloseEngineResponse","synthetic":true,"types":[]},{"text":"impl Unpin for ImportEngineRequest","synthetic":true,"types":[]},{"text":"impl Unpin for ImportEngineResponse","synthetic":true,"types":[]},{"text":"impl Unpin for CleanupEngineRequest","synthetic":true,"types":[]},{"text":"impl Unpin for CleanupEngineResponse","synthetic":true,"types":[]},{"text":"impl Unpin for CompactClusterRequest","synthetic":true,"types":[]},{"text":"impl Unpin for CompactClusterResponse","synthetic":true,"types":[]},{"text":"impl Unpin for GetVersionRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GetVersionResponse","synthetic":true,"types":[]},{"text":"impl Unpin for GetMetricsRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GetMetricsResponse","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for ErrorEngineNotFound","synthetic":true,"types":[]},{"text":"impl Unpin for GetRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GetResponse","synthetic":true,"types":[]},{"text":"impl Unpin for ScanRequest","synthetic":true,"types":[]},{"text":"impl Unpin for ScanResponse","synthetic":true,"types":[]},{"text":"impl Unpin for PrewriteRequest","synthetic":true,"types":[]},{"text":"impl Unpin for PrewriteResponse","synthetic":true,"types":[]},{"text":"impl Unpin for PessimisticLockRequest","synthetic":true,"types":[]},{"text":"impl Unpin for PessimisticLockResponse","synthetic":true,"types":[]},{"text":"impl Unpin for PessimisticRollbackRequest","synthetic":true,"types":[]},{"text":"impl Unpin for PessimisticRollbackResponse","synthetic":true,"types":[]},{"text":"impl Unpin for TxnHeartBeatRequest","synthetic":true,"types":[]},{"text":"impl Unpin for TxnHeartBeatResponse","synthetic":true,"types":[]},{"text":"impl Unpin for CheckTxnStatusRequest","synthetic":true,"types":[]},{"text":"impl Unpin for CheckTxnStatusResponse","synthetic":true,"types":[]},{"text":"impl Unpin for CheckSecondaryLocksRequest","synthetic":true,"types":[]},{"text":"impl Unpin for CheckSecondaryLocksResponse","synthetic":true,"types":[]},{"text":"impl Unpin for CommitRequest","synthetic":true,"types":[]},{"text":"impl Unpin for CommitResponse","synthetic":true,"types":[]},{"text":"impl Unpin for ImportRequest","synthetic":true,"types":[]},{"text":"impl Unpin for ImportResponse","synthetic":true,"types":[]},{"text":"impl Unpin for CleanupRequest","synthetic":true,"types":[]},{"text":"impl Unpin for CleanupResponse","synthetic":true,"types":[]},{"text":"impl Unpin for BatchGetRequest","synthetic":true,"types":[]},{"text":"impl Unpin for BatchGetResponse","synthetic":true,"types":[]},{"text":"impl Unpin for BatchRollbackRequest","synthetic":true,"types":[]},{"text":"impl Unpin for BatchRollbackResponse","synthetic":true,"types":[]},{"text":"impl Unpin for ScanLockRequest","synthetic":true,"types":[]},{"text":"impl Unpin for ScanLockResponse","synthetic":true,"types":[]},{"text":"impl Unpin for ResolveLockRequest","synthetic":true,"types":[]},{"text":"impl Unpin for ResolveLockResponse","synthetic":true,"types":[]},{"text":"impl Unpin for GcRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GcResponse","synthetic":true,"types":[]},{"text":"impl Unpin for DeleteRangeRequest","synthetic":true,"types":[]},{"text":"impl Unpin for DeleteRangeResponse","synthetic":true,"types":[]},{"text":"impl Unpin for RawGetRequest","synthetic":true,"types":[]},{"text":"impl Unpin for RawGetResponse","synthetic":true,"types":[]},{"text":"impl Unpin for RawBatchGetRequest","synthetic":true,"types":[]},{"text":"impl Unpin for RawBatchGetResponse","synthetic":true,"types":[]},{"text":"impl Unpin for RawPutRequest","synthetic":true,"types":[]},{"text":"impl Unpin for RawPutResponse","synthetic":true,"types":[]},{"text":"impl Unpin for RawBatchPutRequest","synthetic":true,"types":[]},{"text":"impl Unpin for RawBatchPutResponse","synthetic":true,"types":[]},{"text":"impl Unpin for RawDeleteRequest","synthetic":true,"types":[]},{"text":"impl Unpin for RawDeleteResponse","synthetic":true,"types":[]},{"text":"impl Unpin for RawBatchDeleteRequest","synthetic":true,"types":[]},{"text":"impl Unpin for RawBatchDeleteResponse","synthetic":true,"types":[]},{"text":"impl Unpin for RawScanRequest","synthetic":true,"types":[]},{"text":"impl Unpin for RawScanResponse","synthetic":true,"types":[]},{"text":"impl Unpin for RawDeleteRangeRequest","synthetic":true,"types":[]},{"text":"impl Unpin for RawDeleteRangeResponse","synthetic":true,"types":[]},{"text":"impl Unpin for RawBatchScanRequest","synthetic":true,"types":[]},{"text":"impl Unpin for RawBatchScanResponse","synthetic":true,"types":[]},{"text":"impl Unpin for UnsafeDestroyRangeRequest","synthetic":true,"types":[]},{"text":"impl Unpin for UnsafeDestroyRangeResponse","synthetic":true,"types":[]},{"text":"impl Unpin for RegisterLockObserverRequest","synthetic":true,"types":[]},{"text":"impl Unpin for RegisterLockObserverResponse","synthetic":true,"types":[]},{"text":"impl Unpin for CheckLockObserverRequest","synthetic":true,"types":[]},{"text":"impl Unpin for CheckLockObserverResponse","synthetic":true,"types":[]},{"text":"impl Unpin for RemoveLockObserverRequest","synthetic":true,"types":[]},{"text":"impl Unpin for RemoveLockObserverResponse","synthetic":true,"types":[]},{"text":"impl Unpin for PhysicalScanLockRequest","synthetic":true,"types":[]},{"text":"impl Unpin for PhysicalScanLockResponse","synthetic":true,"types":[]},{"text":"impl Unpin for SplitRegionRequest","synthetic":true,"types":[]},{"text":"impl Unpin for SplitRegionResponse","synthetic":true,"types":[]},{"text":"impl Unpin for ReadIndexRequest","synthetic":true,"types":[]},{"text":"impl Unpin for ReadIndexResponse","synthetic":true,"types":[]},{"text":"impl Unpin for VerMutation","synthetic":true,"types":[]},{"text":"impl Unpin for VerValue","synthetic":true,"types":[]},{"text":"impl Unpin for VerError","synthetic":true,"types":[]},{"text":"impl Unpin for VerKvPair","synthetic":true,"types":[]},{"text":"impl Unpin for VerGetRequest","synthetic":true,"types":[]},{"text":"impl Unpin for VerGetResponse","synthetic":true,"types":[]},{"text":"impl Unpin for VerBatchGetRequest","synthetic":true,"types":[]},{"text":"impl Unpin for VerBatchGetResponse","synthetic":true,"types":[]},{"text":"impl Unpin for VerMutRequest","synthetic":true,"types":[]},{"text":"impl Unpin for VerMutResponse","synthetic":true,"types":[]},{"text":"impl Unpin for VerBatchMutRequest","synthetic":true,"types":[]},{"text":"impl Unpin for VerBatchMutResponse","synthetic":true,"types":[]},{"text":"impl Unpin for VerScanRequest","synthetic":true,"types":[]},{"text":"impl Unpin for VerScanResponse","synthetic":true,"types":[]},{"text":"impl Unpin for VerDeleteRangeRequest","synthetic":true,"types":[]},{"text":"impl Unpin for VerDeleteRangeResponse","synthetic":true,"types":[]},{"text":"impl Unpin for MvccGetByKeyRequest","synthetic":true,"types":[]},{"text":"impl Unpin for MvccGetByKeyResponse","synthetic":true,"types":[]},{"text":"impl Unpin for MvccGetByStartTsRequest","synthetic":true,"types":[]},{"text":"impl Unpin for MvccGetByStartTsResponse","synthetic":true,"types":[]},{"text":"impl Unpin for Context","synthetic":true,"types":[]},{"text":"impl Unpin for LockInfo","synthetic":true,"types":[]},{"text":"impl Unpin for KeyError","synthetic":true,"types":[]},{"text":"impl Unpin for WriteConflict","synthetic":true,"types":[]},{"text":"impl Unpin for AlreadyExist","synthetic":true,"types":[]},{"text":"impl Unpin for Deadlock","synthetic":true,"types":[]},{"text":"impl Unpin for CommitTsExpired","synthetic":true,"types":[]},{"text":"impl Unpin for TxnNotFound","synthetic":true,"types":[]},{"text":"impl Unpin for CommitTsTooLarge","synthetic":true,"types":[]},{"text":"impl Unpin for TimeDetail","synthetic":true,"types":[]},{"text":"impl Unpin for ScanInfo","synthetic":true,"types":[]},{"text":"impl Unpin for ScanDetail","synthetic":true,"types":[]},{"text":"impl Unpin for ScanDetailV2","synthetic":true,"types":[]},{"text":"impl Unpin for ExecDetails","synthetic":true,"types":[]},{"text":"impl Unpin for ExecDetailsV2","synthetic":true,"types":[]},{"text":"impl Unpin for KvPair","synthetic":true,"types":[]},{"text":"impl Unpin for Mutation","synthetic":true,"types":[]},{"text":"impl Unpin for MvccWrite","synthetic":true,"types":[]},{"text":"impl Unpin for MvccValue","synthetic":true,"types":[]},{"text":"impl Unpin for MvccLock","synthetic":true,"types":[]},{"text":"impl Unpin for MvccInfo","synthetic":true,"types":[]},{"text":"impl Unpin for TxnInfo","synthetic":true,"types":[]},{"text":"impl Unpin for KeyRange","synthetic":true,"types":[]},{"text":"impl Unpin for LeaderInfo","synthetic":true,"types":[]},{"text":"impl Unpin for CheckLeaderRequest","synthetic":true,"types":[]},{"text":"impl Unpin for CheckLeaderResponse","synthetic":true,"types":[]},{"text":"impl Unpin for VerOp","synthetic":true,"types":[]},{"text":"impl Unpin for CommandPri","synthetic":true,"types":[]},{"text":"impl Unpin for IsolationLevel","synthetic":true,"types":[]},{"text":"impl Unpin for Op","synthetic":true,"types":[]},{"text":"impl Unpin for Assertion","synthetic":true,"types":[]},{"text":"impl Unpin for Action","synthetic":true,"types":[]},{"text":"impl Unpin for ExtraOp","synthetic":true,"types":[]},{"text":"impl Unpin for BackupClient","synthetic":true,"types":[]},{"text":"impl Unpin for NotLeader","synthetic":true,"types":[]},{"text":"impl Unpin for StoreNotMatch","synthetic":true,"types":[]},{"text":"impl Unpin for RegionNotFound","synthetic":true,"types":[]},{"text":"impl Unpin for KeyNotInRegion","synthetic":true,"types":[]},{"text":"impl Unpin for EpochNotMatch","synthetic":true,"types":[]},{"text":"impl Unpin for ServerIsBusy","synthetic":true,"types":[]},{"text":"impl Unpin for StaleCommand","synthetic":true,"types":[]},{"text":"impl Unpin for RaftEntryTooLarge","synthetic":true,"types":[]},{"text":"impl Unpin for MaxTimestampNotSynced","synthetic":true,"types":[]},{"text":"impl Unpin for ReadIndexNotReady","synthetic":true,"types":[]},{"text":"impl Unpin for ProposalInMergingMode","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for GetRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GetResponse","synthetic":true,"types":[]},{"text":"impl Unpin for RaftLogRequest","synthetic":true,"types":[]},{"text":"impl Unpin for RaftLogResponse","synthetic":true,"types":[]},{"text":"impl Unpin for RegionInfoRequest","synthetic":true,"types":[]},{"text":"impl Unpin for RegionInfoResponse","synthetic":true,"types":[]},{"text":"impl Unpin for RegionSizeRequest","synthetic":true,"types":[]},{"text":"impl Unpin for RegionSizeResponse","synthetic":true,"types":[]},{"text":"impl Unpin for RegionSizeResponseEntry","synthetic":true,"types":[]},{"text":"impl Unpin for ScanMvccRequest","synthetic":true,"types":[]},{"text":"impl Unpin for ScanMvccResponse","synthetic":true,"types":[]},{"text":"impl Unpin for CompactRequest","synthetic":true,"types":[]},{"text":"impl Unpin for CompactResponse","synthetic":true,"types":[]},{"text":"impl Unpin for InjectFailPointRequest","synthetic":true,"types":[]},{"text":"impl Unpin for InjectFailPointResponse","synthetic":true,"types":[]},{"text":"impl Unpin for RecoverFailPointRequest","synthetic":true,"types":[]},{"text":"impl Unpin for RecoverFailPointResponse","synthetic":true,"types":[]},{"text":"impl Unpin for ListFailPointsRequest","synthetic":true,"types":[]},{"text":"impl Unpin for ListFailPointsResponse","synthetic":true,"types":[]},{"text":"impl Unpin for ListFailPointsResponseEntry","synthetic":true,"types":[]},{"text":"impl Unpin for GetMetricsRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GetMetricsResponse","synthetic":true,"types":[]},{"text":"impl Unpin for RegionConsistencyCheckRequest","synthetic":true,"types":[]},{"text":"impl Unpin for RegionConsistencyCheckResponse","synthetic":true,"types":[]},{"text":"impl Unpin for ModifyTikvConfigRequest","synthetic":true,"types":[]},{"text":"impl Unpin for ModifyTikvConfigResponse","synthetic":true,"types":[]},{"text":"impl Unpin for Property","synthetic":true,"types":[]},{"text":"impl Unpin for GetRegionPropertiesRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GetRegionPropertiesResponse","synthetic":true,"types":[]},{"text":"impl Unpin for GetStoreInfoRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GetStoreInfoResponse","synthetic":true,"types":[]},{"text":"impl Unpin for GetClusterInfoRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GetClusterInfoResponse","synthetic":true,"types":[]},{"text":"impl Unpin for Db","synthetic":true,"types":[]},{"text":"impl Unpin for Module","synthetic":true,"types":[]},{"text":"impl Unpin for BottommostLevelCompaction","synthetic":true,"types":[]},{"text":"impl Unpin for ImportSstClient","synthetic":true,"types":[]},{"text":"impl Unpin for WaitForEntriesRequest","synthetic":true,"types":[]},{"text":"impl Unpin for WaitForEntriesResponse","synthetic":true,"types":[]},{"text":"impl Unpin for WaitForEntry","synthetic":true,"types":[]},{"text":"impl Unpin for DeadlockRequest","synthetic":true,"types":[]},{"text":"impl Unpin for DeadlockResponse","synthetic":true,"types":[]},{"text":"impl Unpin for DeadlockRequestType","synthetic":true,"types":[]}];
implementors["libc"] = [{"text":"impl Unpin for statvfs","synthetic":true,"types":[]},{"text":"impl Unpin for max_align_t","synthetic":true,"types":[]},{"text":"impl Unpin for sigaction","synthetic":true,"types":[]},{"text":"impl Unpin for statfs","synthetic":true,"types":[]},{"text":"impl Unpin for flock","synthetic":true,"types":[]},{"text":"impl Unpin for flock64","synthetic":true,"types":[]},{"text":"impl Unpin for siginfo_t","synthetic":true,"types":[]},{"text":"impl Unpin for stack_t","synthetic":true,"types":[]},{"text":"impl Unpin for stat","synthetic":true,"types":[]},{"text":"impl Unpin for stat64","synthetic":true,"types":[]},{"text":"impl Unpin for statfs64","synthetic":true,"types":[]},{"text":"impl Unpin for statvfs64","synthetic":true,"types":[]},{"text":"impl Unpin for pthread_attr_t","synthetic":true,"types":[]},{"text":"impl Unpin for _libc_fpxreg","synthetic":true,"types":[]},{"text":"impl Unpin for _libc_xmmreg","synthetic":true,"types":[]},{"text":"impl Unpin for _libc_fpstate","synthetic":true,"types":[]},{"text":"impl Unpin for user_regs_struct","synthetic":true,"types":[]},{"text":"impl Unpin for user","synthetic":true,"types":[]},{"text":"impl Unpin for mcontext_t","synthetic":true,"types":[]},{"text":"impl Unpin for ipc_perm","synthetic":true,"types":[]},{"text":"impl Unpin for shmid_ds","synthetic":true,"types":[]},{"text":"impl Unpin for termios2","synthetic":true,"types":[]},{"text":"impl Unpin for ip_mreqn","synthetic":true,"types":[]},{"text":"impl Unpin for user_fpregs_struct","synthetic":true,"types":[]},{"text":"impl Unpin for ucontext_t","synthetic":true,"types":[]},{"text":"impl Unpin for sigset_t","synthetic":true,"types":[]},{"text":"impl Unpin for sysinfo","synthetic":true,"types":[]},{"text":"impl Unpin for msqid_ds","synthetic":true,"types":[]},{"text":"impl Unpin for sem_t","synthetic":true,"types":[]},{"text":"impl Unpin for statx","synthetic":true,"types":[]},{"text":"impl Unpin for statx_timestamp","synthetic":true,"types":[]},{"text":"impl Unpin for aiocb","synthetic":true,"types":[]},{"text":"impl Unpin for __exit_status","synthetic":true,"types":[]},{"text":"impl Unpin for __timeval","synthetic":true,"types":[]},{"text":"impl Unpin for glob64_t","synthetic":true,"types":[]},{"text":"impl Unpin for msghdr","synthetic":true,"types":[]},{"text":"impl Unpin for cmsghdr","synthetic":true,"types":[]},{"text":"impl Unpin for termios","synthetic":true,"types":[]},{"text":"impl Unpin for mallinfo","synthetic":true,"types":[]},{"text":"impl Unpin for nlmsghdr","synthetic":true,"types":[]},{"text":"impl Unpin for nlmsgerr","synthetic":true,"types":[]},{"text":"impl Unpin for nl_pktinfo","synthetic":true,"types":[]},{"text":"impl Unpin for nl_mmap_req","synthetic":true,"types":[]},{"text":"impl Unpin for nl_mmap_hdr","synthetic":true,"types":[]},{"text":"impl Unpin for nlattr","synthetic":true,"types":[]},{"text":"impl Unpin for rtentry","synthetic":true,"types":[]},{"text":"impl Unpin for timex","synthetic":true,"types":[]},{"text":"impl Unpin for ntptimeval","synthetic":true,"types":[]},{"text":"impl Unpin for regex_t","synthetic":true,"types":[]},{"text":"impl Unpin for utmpx","synthetic":true,"types":[]},{"text":"impl Unpin for fpos64_t","synthetic":true,"types":[]},{"text":"impl Unpin for rlimit64","synthetic":true,"types":[]},{"text":"impl Unpin for glob_t","synthetic":true,"types":[]},{"text":"impl Unpin for passwd","synthetic":true,"types":[]},{"text":"impl Unpin for spwd","synthetic":true,"types":[]},{"text":"impl Unpin for dqblk","synthetic":true,"types":[]},{"text":"impl Unpin for signalfd_siginfo","synthetic":true,"types":[]},{"text":"impl Unpin for itimerspec","synthetic":true,"types":[]},{"text":"impl Unpin for fsid_t","synthetic":true,"types":[]},{"text":"impl Unpin for packet_mreq","synthetic":true,"types":[]},{"text":"impl Unpin for cpu_set_t","synthetic":true,"types":[]},{"text":"impl Unpin for if_nameindex","synthetic":true,"types":[]},{"text":"impl Unpin for msginfo","synthetic":true,"types":[]},{"text":"impl Unpin for sembuf","synthetic":true,"types":[]},{"text":"impl Unpin for input_event","synthetic":true,"types":[]},{"text":"impl Unpin for input_id","synthetic":true,"types":[]},{"text":"impl Unpin for input_absinfo","synthetic":true,"types":[]},{"text":"impl Unpin for input_keymap_entry","synthetic":true,"types":[]},{"text":"impl Unpin for input_mask","synthetic":true,"types":[]},{"text":"impl Unpin for ff_replay","synthetic":true,"types":[]},{"text":"impl Unpin for ff_trigger","synthetic":true,"types":[]},{"text":"impl Unpin for ff_envelope","synthetic":true,"types":[]},{"text":"impl Unpin for ff_constant_effect","synthetic":true,"types":[]},{"text":"impl Unpin for ff_ramp_effect","synthetic":true,"types":[]},{"text":"impl Unpin for ff_condition_effect","synthetic":true,"types":[]},{"text":"impl Unpin for ff_periodic_effect","synthetic":true,"types":[]},{"text":"impl Unpin for ff_rumble_effect","synthetic":true,"types":[]},{"text":"impl Unpin for ff_effect","synthetic":true,"types":[]},{"text":"impl Unpin for dl_phdr_info","synthetic":true,"types":[]},{"text":"impl Unpin for Elf32_Ehdr","synthetic":true,"types":[]},{"text":"impl Unpin for Elf64_Ehdr","synthetic":true,"types":[]},{"text":"impl Unpin for Elf32_Sym","synthetic":true,"types":[]},{"text":"impl Unpin for Elf64_Sym","synthetic":true,"types":[]},{"text":"impl Unpin for Elf32_Phdr","synthetic":true,"types":[]},{"text":"impl Unpin for Elf64_Phdr","synthetic":true,"types":[]},{"text":"impl Unpin for Elf32_Shdr","synthetic":true,"types":[]},{"text":"impl Unpin for Elf64_Shdr","synthetic":true,"types":[]},{"text":"impl Unpin for Elf32_Chdr","synthetic":true,"types":[]},{"text":"impl Unpin for Elf64_Chdr","synthetic":true,"types":[]},{"text":"impl Unpin for ucred","synthetic":true,"types":[]},{"text":"impl Unpin for mntent","synthetic":true,"types":[]},{"text":"impl Unpin for posix_spawn_file_actions_t","synthetic":true,"types":[]},{"text":"impl Unpin for posix_spawnattr_t","synthetic":true,"types":[]},{"text":"impl Unpin for genlmsghdr","synthetic":true,"types":[]},{"text":"impl Unpin for in6_pktinfo","synthetic":true,"types":[]},{"text":"impl Unpin for arpd_request","synthetic":true,"types":[]},{"text":"impl Unpin for inotify_event","synthetic":true,"types":[]},{"text":"impl Unpin for fanotify_response","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_vm","synthetic":true,"types":[]},{"text":"impl Unpin for regmatch_t","synthetic":true,"types":[]},{"text":"impl Unpin for sock_extended_err","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_nl","synthetic":true,"types":[]},{"text":"impl Unpin for dirent","synthetic":true,"types":[]},{"text":"impl Unpin for dirent64","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_alg","synthetic":true,"types":[]},{"text":"impl Unpin for af_alg_iv","synthetic":true,"types":[]},{"text":"impl Unpin for mq_attr","synthetic":true,"types":[]},{"text":"impl Unpin for pthread_mutexattr_t","synthetic":true,"types":[]},{"text":"impl Unpin for pthread_rwlockattr_t","synthetic":true,"types":[]},{"text":"impl Unpin for pthread_condattr_t","synthetic":true,"types":[]},{"text":"impl Unpin for fanotify_event_metadata","synthetic":true,"types":[]},{"text":"impl Unpin for pthread_cond_t","synthetic":true,"types":[]},{"text":"impl Unpin for pthread_mutex_t","synthetic":true,"types":[]},{"text":"impl Unpin for pthread_rwlock_t","synthetic":true,"types":[]},{"text":"impl Unpin for timezone","synthetic":true,"types":[]},{"text":"impl Unpin for in_addr","synthetic":true,"types":[]},{"text":"impl Unpin for ip_mreq","synthetic":true,"types":[]},{"text":"impl Unpin for ip_mreq_source","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_in","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_in6","synthetic":true,"types":[]},{"text":"impl Unpin for addrinfo","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_ll","synthetic":true,"types":[]},{"text":"impl Unpin for fd_set","synthetic":true,"types":[]},{"text":"impl Unpin for tm","synthetic":true,"types":[]},{"text":"impl Unpin for sched_param","synthetic":true,"types":[]},{"text":"impl Unpin for Dl_info","synthetic":true,"types":[]},{"text":"impl Unpin for lconv","synthetic":true,"types":[]},{"text":"impl Unpin for in_pktinfo","synthetic":true,"types":[]},{"text":"impl Unpin for ifaddrs","synthetic":true,"types":[]},{"text":"impl Unpin for in6_rtmsg","synthetic":true,"types":[]},{"text":"impl Unpin for arpreq","synthetic":true,"types":[]},{"text":"impl Unpin for arpreq_old","synthetic":true,"types":[]},{"text":"impl Unpin for arphdr","synthetic":true,"types":[]},{"text":"impl Unpin for mmsghdr","synthetic":true,"types":[]},{"text":"impl Unpin for epoll_event","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_un","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_storage","synthetic":true,"types":[]},{"text":"impl Unpin for utsname","synthetic":true,"types":[]},{"text":"impl Unpin for sigevent","synthetic":true,"types":[]},{"text":"impl Unpin for in6_addr","synthetic":true,"types":[]},{"text":"impl Unpin for DIR","synthetic":true,"types":[]},{"text":"impl Unpin for group","synthetic":true,"types":[]},{"text":"impl Unpin for utimbuf","synthetic":true,"types":[]},{"text":"impl Unpin for timeval","synthetic":true,"types":[]},{"text":"impl Unpin for timespec","synthetic":true,"types":[]},{"text":"impl Unpin for rlimit","synthetic":true,"types":[]},{"text":"impl Unpin for rusage","synthetic":true,"types":[]},{"text":"impl Unpin for ipv6_mreq","synthetic":true,"types":[]},{"text":"impl Unpin for hostent","synthetic":true,"types":[]},{"text":"impl Unpin for iovec","synthetic":true,"types":[]},{"text":"impl Unpin for pollfd","synthetic":true,"types":[]},{"text":"impl Unpin for winsize","synthetic":true,"types":[]},{"text":"impl Unpin for linger","synthetic":true,"types":[]},{"text":"impl Unpin for sigval","synthetic":true,"types":[]},{"text":"impl Unpin for itimerval","synthetic":true,"types":[]},{"text":"impl Unpin for tms","synthetic":true,"types":[]},{"text":"impl Unpin for servent","synthetic":true,"types":[]},{"text":"impl Unpin for protoent","synthetic":true,"types":[]},{"text":"impl Unpin for FILE","synthetic":true,"types":[]},{"text":"impl Unpin for fpos_t","synthetic":true,"types":[]}];
implementors["libflate"] = [{"text":"impl&lt;R&gt; Unpin for Decoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for EncodeOptions&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W, E&gt; Unpin for Encoder&lt;W, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, E&gt; Unpin for Finish&lt;T, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for AutoFinish&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for AutoFinishUnchecked&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for CompressionLevel","synthetic":true,"types":[]},{"text":"impl Unpin for HeaderBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for Header","synthetic":true,"types":[]},{"text":"impl Unpin for ExtraField","synthetic":true,"types":[]},{"text":"impl Unpin for ExtraSubField","synthetic":true,"types":[]},{"text":"impl Unpin for Os","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for EncodeOptions&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W, E&gt; Unpin for Encoder&lt;W, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for Decoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for MultiDecoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for Decoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for Decoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for Decoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for CompressionLevel","synthetic":true,"types":[]},{"text":"impl Unpin for Lz77WindowSize","synthetic":true,"types":[]},{"text":"impl Unpin for Header","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for Decoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for EncodeOptions&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W, E&gt; Unpin for Encoder&lt;W, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["libflate_lz77"] = [{"text":"impl Unpin for DefaultLz77Encoder","synthetic":true,"types":[]},{"text":"impl Unpin for DefaultLz77EncoderBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for Code","synthetic":true,"types":[]},{"text":"impl Unpin for CompressionLevel","synthetic":true,"types":[]},{"text":"impl Unpin for NoCompressionLz77Encoder","synthetic":true,"types":[]}];
implementors["librocksdb_sys"] = [{"text":"impl Unpin for DBStatisticsTickerType","synthetic":true,"types":[]},{"text":"impl Unpin for DBStatisticsHistogramType","synthetic":true,"types":[]},{"text":"impl Unpin for Options","synthetic":true,"types":[]},{"text":"impl Unpin for CloudEnvOptions","synthetic":true,"types":[]},{"text":"impl Unpin for ColumnFamilyDescriptor","synthetic":true,"types":[]},{"text":"impl Unpin for DBInstance","synthetic":true,"types":[]},{"text":"impl Unpin for DBWriteOptions","synthetic":true,"types":[]},{"text":"impl Unpin for DBReadOptions","synthetic":true,"types":[]},{"text":"impl Unpin for DBMergeOperator","synthetic":true,"types":[]},{"text":"impl Unpin for DBBlockBasedTableOptions","synthetic":true,"types":[]},{"text":"impl Unpin for DBMemoryAllocator","synthetic":true,"types":[]},{"text":"impl Unpin for DBLRUCacheOptions","synthetic":true,"types":[]},{"text":"impl Unpin for DBCache","synthetic":true,"types":[]},{"text":"impl Unpin for DBFilterPolicy","synthetic":true,"types":[]},{"text":"impl Unpin for DBSnapshot","synthetic":true,"types":[]},{"text":"impl Unpin for DBIterator","synthetic":true,"types":[]},{"text":"impl Unpin for DBCFHandle","synthetic":true,"types":[]},{"text":"impl Unpin for DBWriteBatch","synthetic":true,"types":[]},{"text":"impl Unpin for DBComparator","synthetic":true,"types":[]},{"text":"impl Unpin for DBFlushOptions","synthetic":true,"types":[]},{"text":"impl Unpin for DBCompactionFilter","synthetic":true,"types":[]},{"text":"impl Unpin for DBCompactionFilterFactory","synthetic":true,"types":[]},{"text":"impl Unpin for DBCompactionFilterContext","synthetic":true,"types":[]},{"text":"impl Unpin for EnvOptions","synthetic":true,"types":[]},{"text":"impl Unpin for SstFileReader","synthetic":true,"types":[]},{"text":"impl Unpin for SstFileWriter","synthetic":true,"types":[]},{"text":"impl Unpin for ExternalSstFileInfo","synthetic":true,"types":[]},{"text":"impl Unpin for IngestExternalFileOptions","synthetic":true,"types":[]},{"text":"impl Unpin for DBBackupEngine","synthetic":true,"types":[]},{"text":"impl Unpin for DBRestoreOptions","synthetic":true,"types":[]},{"text":"impl Unpin for DBSliceTransform","synthetic":true,"types":[]},{"text":"impl Unpin for DBRateLimiter","synthetic":true,"types":[]},{"text":"impl Unpin for DBLogger","synthetic":true,"types":[]},{"text":"impl Unpin for DBCompactOptions","synthetic":true,"types":[]},{"text":"impl Unpin for DBFifoCompactionOptions","synthetic":true,"types":[]},{"text":"impl Unpin for DBPinnableSlice","synthetic":true,"types":[]},{"text":"impl Unpin for DBUserCollectedProperties","synthetic":true,"types":[]},{"text":"impl Unpin for DBUserCollectedPropertiesIterator","synthetic":true,"types":[]},{"text":"impl Unpin for DBTableProperties","synthetic":true,"types":[]},{"text":"impl Unpin for DBTablePropertiesCollection","synthetic":true,"types":[]},{"text":"impl Unpin for DBTablePropertiesCollectionIterator","synthetic":true,"types":[]},{"text":"impl Unpin for DBTablePropertiesCollector","synthetic":true,"types":[]},{"text":"impl Unpin for DBTablePropertiesCollectorFactory","synthetic":true,"types":[]},{"text":"impl Unpin for DBFlushJobInfo","synthetic":true,"types":[]},{"text":"impl Unpin for DBCompactionJobInfo","synthetic":true,"types":[]},{"text":"impl Unpin for DBSubcompactionJobInfo","synthetic":true,"types":[]},{"text":"impl Unpin for DBIngestionInfo","synthetic":true,"types":[]},{"text":"impl Unpin for DBEventListener","synthetic":true,"types":[]},{"text":"impl Unpin for DBKeyVersions","synthetic":true,"types":[]},{"text":"impl Unpin for DBEnv","synthetic":true,"types":[]},{"text":"impl Unpin for DBSequentialFile","synthetic":true,"types":[]},{"text":"impl Unpin for DBColumnFamilyMetaData","synthetic":true,"types":[]},{"text":"impl Unpin for DBLevelMetaData","synthetic":true,"types":[]},{"text":"impl Unpin for DBSstFileMetaData","synthetic":true,"types":[]},{"text":"impl Unpin for DBCompactionOptions","synthetic":true,"types":[]},{"text":"impl Unpin for DBPerfContext","synthetic":true,"types":[]},{"text":"impl Unpin for DBIOStatsContext","synthetic":true,"types":[]},{"text":"impl Unpin for DBWriteStallInfo","synthetic":true,"types":[]},{"text":"impl Unpin for DBStatusPtr","synthetic":true,"types":[]},{"text":"impl Unpin for DBMapProperty","synthetic":true,"types":[]},{"text":"impl Unpin for DBFileEncryptionInfo","synthetic":true,"types":[]},{"text":"impl Unpin for DBEncryptionKeyManagerInstance","synthetic":true,"types":[]},{"text":"impl Unpin for DBSstPartitioner","synthetic":true,"types":[]},{"text":"impl Unpin for DBSstPartitionerRequest","synthetic":true,"types":[]},{"text":"impl Unpin for DBSstPartitionerContext","synthetic":true,"types":[]},{"text":"impl Unpin for DBSstPartitionerFactory","synthetic":true,"types":[]},{"text":"impl Unpin for DBWriteBatchIterator","synthetic":true,"types":[]},{"text":"impl Unpin for DBFileSystemInspectorInstance","synthetic":true,"types":[]},{"text":"impl Unpin for WriteStallCondition","synthetic":true,"types":[]},{"text":"impl Unpin for DBTitanDBOptions","synthetic":true,"types":[]},{"text":"impl Unpin for DBTitanReadOptions","synthetic":true,"types":[]},{"text":"impl Unpin for DBTitanBlobIndex","synthetic":true,"types":[]},{"text":"impl Unpin for DBEntryType","synthetic":true,"types":[]},{"text":"impl Unpin for DBCompressionType","synthetic":true,"types":[]},{"text":"impl Unpin for DBCompactionStyle","synthetic":true,"types":[]},{"text":"impl Unpin for DBUniversalCompactionStyle","synthetic":true,"types":[]},{"text":"impl Unpin for DBRecoveryMode","synthetic":true,"types":[]},{"text":"impl Unpin for CompactionPriority","synthetic":true,"types":[]},{"text":"impl Unpin for CompactionReason","synthetic":true,"types":[]},{"text":"impl Unpin for DBInfoLogLevel","synthetic":true,"types":[]},{"text":"impl Unpin for DBTableProperty","synthetic":true,"types":[]},{"text":"impl Unpin for DBBottommostLevelCompaction","synthetic":true,"types":[]},{"text":"impl Unpin for DBRateLimiterMode","synthetic":true,"types":[]},{"text":"impl Unpin for DBTitanDBBlobRunMode","synthetic":true,"types":[]},{"text":"impl Unpin for IndexType","synthetic":true,"types":[]},{"text":"impl Unpin for DBBackgroundErrorReason","synthetic":true,"types":[]},{"text":"impl Unpin for DBEncryptionMethod","synthetic":true,"types":[]},{"text":"impl Unpin for DBValueType","synthetic":true,"types":[]},{"text":"impl Unpin for DBSstPartitionerResult","synthetic":true,"types":[]},{"text":"impl Unpin for CompactionFilterValueType","synthetic":true,"types":[]},{"text":"impl Unpin for CompactionFilterDecision","synthetic":true,"types":[]}];
implementors["libz_sys"] = [{"text":"impl Unpin for gzFile_s","synthetic":true,"types":[]},{"text":"impl Unpin for internal_state","synthetic":true,"types":[]},{"text":"impl Unpin for gz_header","synthetic":true,"types":[]},{"text":"impl Unpin for z_stream","synthetic":true,"types":[]}];
implementors["linked_hash_map"] = [{"text":"impl&lt;K, V, S&gt; Unpin for LinkedHashMap&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Iter&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for IterMut&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Unpin for IntoIter&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Unpin for Entries&lt;'a, K, V, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Keys&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Values&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Unpin for Entry&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Unpin for OccupiedEntry&lt;'a, K, V, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Unpin for VacantEntry&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["linked_hash_set"] = [{"text":"impl&lt;T, S&gt; Unpin for LinkedHashSet&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K&gt; Unpin for Iter&lt;'a, K&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K&gt; Unpin for IntoIter&lt;K&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Unpin for Intersection&lt;'a, T, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Unpin for Difference&lt;'a, T, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Unpin for SymmetricDifference&lt;'a, T, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Unpin for Union&lt;'a, T, S&gt;","synthetic":true,"types":[]}];
implementors["lock_api"] = [{"text":"impl&lt;R, T:&nbsp;?Sized&gt; Unpin for Mutex&lt;R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Unpin for MutexGuard&lt;'a, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as RawMutex&gt;::GuardMarker: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Unpin for MappedMutexGuard&lt;'a, R, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R, G&gt; Unpin for RawReentrantMutex&lt;R, G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, G, T:&nbsp;?Sized&gt; Unpin for ReentrantMutex&lt;R, G, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, G, T:&nbsp;?Sized&gt; Unpin for ReentrantMutexGuard&lt;'a, R, G, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, G, T:&nbsp;?Sized&gt; Unpin for MappedReentrantMutexGuard&lt;'a, R, G, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R, T:&nbsp;?Sized&gt; Unpin for RwLock&lt;R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Unpin for RwLockReadGuard&lt;'a, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as RawRwLock&gt;::GuardMarker: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Unpin for RwLockWriteGuard&lt;'a, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as RawRwLock&gt;::GuardMarker: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Unpin for RwLockUpgradableReadGuard&lt;'a, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as RawRwLock&gt;::GuardMarker: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Unpin for MappedRwLockReadGuard&lt;'a, R, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Unpin for MappedRwLockWriteGuard&lt;'a, R, T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for GuardSend","synthetic":true,"types":[]},{"text":"impl Unpin for GuardNoSend","synthetic":true,"types":[]}];
implementors["log"] = [{"text":"impl Unpin for Level","synthetic":true,"types":[]},{"text":"impl Unpin for LevelFilter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Record&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for RecordBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Metadata&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for MetadataBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for SetLoggerError","synthetic":true,"types":[]},{"text":"impl Unpin for ParseLevelError","synthetic":true,"types":[]}];
implementors["log_wrappers"] = [{"text":"impl Unpin for SyncLoggerBuffer","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for DisplayValue&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for DebugValue&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Value&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["lz4_sys"] = [{"text":"impl Unpin for LZ4FCompressionContext","synthetic":true,"types":[]},{"text":"impl Unpin for LZ4FDecompressionContext","synthetic":true,"types":[]},{"text":"impl Unpin for BlockSize","synthetic":true,"types":[]},{"text":"impl Unpin for BlockMode","synthetic":true,"types":[]},{"text":"impl Unpin for ContentChecksum","synthetic":true,"types":[]},{"text":"impl Unpin for LZ4FFrameInfo","synthetic":true,"types":[]},{"text":"impl Unpin for LZ4FPreferences","synthetic":true,"types":[]},{"text":"impl Unpin for LZ4FCompressOptions","synthetic":true,"types":[]},{"text":"impl Unpin for LZ4FDecompressOptions","synthetic":true,"types":[]},{"text":"impl Unpin for LZ4StreamEncode","synthetic":true,"types":[]},{"text":"impl Unpin for LZ4StreamDecode","synthetic":true,"types":[]}];
implementors["match_template"] = [{"text":"impl Unpin for MatchTemplate","synthetic":true,"types":[]},{"text":"impl Unpin for Substitution","synthetic":true,"types":[]}];
implementors["md5"] = [{"text":"impl Unpin for Digest","synthetic":true,"types":[]},{"text":"impl Unpin for Context","synthetic":true,"types":[]}];
implementors["memchr"] = [{"text":"impl&lt;'a&gt; Unpin for Memchr&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Memchr2&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Memchr3&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["memmap"] = [{"text":"impl Unpin for MmapOptions","synthetic":true,"types":[]},{"text":"impl Unpin for Mmap","synthetic":true,"types":[]},{"text":"impl Unpin for MmapMut","synthetic":true,"types":[]}];
implementors["mime"] = [{"text":"impl Unpin for Mime","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Name&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for FromStrError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Params&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["mime_guess"] = [{"text":"impl Unpin for MimeGuess","synthetic":true,"types":[]},{"text":"impl Unpin for Iter","synthetic":true,"types":[]},{"text":"impl Unpin for IterRaw","synthetic":true,"types":[]}];
implementors["minitrace"] = [{"text":"impl Unpin for Collector","synthetic":true,"types":[]},{"text":"impl Unpin for CrossthreadTrace","synthetic":true,"types":[]},{"text":"impl Unpin for SpanGuard","synthetic":true,"types":[]},{"text":"impl Unpin for Span","synthetic":true,"types":[]},{"text":"impl Unpin for Link","synthetic":true,"types":[]},{"text":"impl Unpin for SpanSet","synthetic":true,"types":[]},{"text":"impl&lt;'pin, T&gt; Unpin for TraceSpawned&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__TraceSpawned&lt;'pin, T&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, T&gt; Unpin for TraceWrapped&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__TraceWrapped&lt;'pin, T&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, T&gt; Unpin for MayTraceRootFuture&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__MayTraceRootFuture&lt;'pin, T&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, T&gt; Unpin for TraceRootFuture&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__TraceRootFuture&lt;'pin, T&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["mio"] = [{"text":"impl Unpin for PollOpt","synthetic":true,"types":[]},{"text":"impl Unpin for Ready","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for Poll","synthetic":true,"types":[]},{"text":"impl Unpin for Registration","synthetic":true,"types":[]},{"text":"impl Unpin for SetReadiness","synthetic":true,"types":[]},{"text":"impl Unpin for Events","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for EventedFd&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for UnixReady","synthetic":true,"types":[]},{"text":"impl Unpin for Token","synthetic":true,"types":[]},{"text":"impl Unpin for TcpStream","synthetic":true,"types":[]},{"text":"impl Unpin for TcpListener","synthetic":true,"types":[]},{"text":"impl Unpin for UdpSocket","synthetic":true,"types":[]}];
implementors["mio_uds"] = [{"text":"impl Unpin for UnixDatagram","synthetic":true,"types":[]},{"text":"impl Unpin for UnixListener","synthetic":true,"types":[]},{"text":"impl Unpin for UnixStream","synthetic":true,"types":[]}];
implementors["native_tls"] = [{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Identity","synthetic":true,"types":[]},{"text":"impl Unpin for Certificate","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for MidHandshakeTlsStream&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for HandshakeError&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Protocol","synthetic":true,"types":[]},{"text":"impl Unpin for TlsConnectorBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for TlsConnector","synthetic":true,"types":[]},{"text":"impl Unpin for TlsAcceptorBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for TlsAcceptor","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for TlsStream&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["net2"] = [{"text":"impl Unpin for TcpBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for UdpBuilder","synthetic":true,"types":[]}];
implementors["nix"] = [{"text":"impl Unpin for Dir","synthetic":true,"types":[]},{"text":"impl&lt;'d&gt; Unpin for Iter&lt;'d&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Entry","synthetic":true,"types":[]},{"text":"impl Unpin for Type","synthetic":true,"types":[]},{"text":"impl Unpin for Errno","synthetic":true,"types":[]},{"text":"impl Unpin for PosixFadviseAdvice","synthetic":true,"types":[]},{"text":"impl Unpin for AtFlags","synthetic":true,"types":[]},{"text":"impl Unpin for OFlag","synthetic":true,"types":[]},{"text":"impl Unpin for SealFlag","synthetic":true,"types":[]},{"text":"impl Unpin for FdFlag","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for FcntlArg&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for FlockArg","synthetic":true,"types":[]},{"text":"impl Unpin for SpliceFFlags","synthetic":true,"types":[]},{"text":"impl Unpin for FallocateFlags","synthetic":true,"types":[]},{"text":"impl Unpin for InterfaceAddress","synthetic":true,"types":[]},{"text":"impl Unpin for InterfaceAddressIterator","synthetic":true,"types":[]},{"text":"impl Unpin for ModuleInitFlags","synthetic":true,"types":[]},{"text":"impl Unpin for DeleteModuleFlags","synthetic":true,"types":[]},{"text":"impl Unpin for MsFlags","synthetic":true,"types":[]},{"text":"impl Unpin for MntFlags","synthetic":true,"types":[]},{"text":"impl Unpin for MQ_OFlag","synthetic":true,"types":[]},{"text":"impl Unpin for FdFlag","synthetic":true,"types":[]},{"text":"impl Unpin for MqAttr","synthetic":true,"types":[]},{"text":"impl Unpin for InterfaceFlags","synthetic":true,"types":[]},{"text":"impl Unpin for PollFd","synthetic":true,"types":[]},{"text":"impl Unpin for PollFlags","synthetic":true,"types":[]},{"text":"impl Unpin for OpenptyResult","synthetic":true,"types":[]},{"text":"impl Unpin for ForkptyResult","synthetic":true,"types":[]},{"text":"impl Unpin for PtyMaster","synthetic":true,"types":[]},{"text":"impl Unpin for CloneFlags","synthetic":true,"types":[]},{"text":"impl Unpin for CpuSet","synthetic":true,"types":[]},{"text":"impl Unpin for AioFsyncMode","synthetic":true,"types":[]},{"text":"impl Unpin for LioOpcode","synthetic":true,"types":[]},{"text":"impl Unpin for LioMode","synthetic":true,"types":[]},{"text":"impl Unpin for AioCancelStat","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Buffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for AioCb&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for LioCb&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for EpollFlags","synthetic":true,"types":[]},{"text":"impl Unpin for EpollOp","synthetic":true,"types":[]},{"text":"impl Unpin for EpollCreateFlags","synthetic":true,"types":[]},{"text":"impl Unpin for EpollEvent","synthetic":true,"types":[]},{"text":"impl Unpin for EfdFlags","synthetic":true,"types":[]},{"text":"impl Unpin for MemFdCreateFlag","synthetic":true,"types":[]},{"text":"impl Unpin for ProtFlags","synthetic":true,"types":[]},{"text":"impl Unpin for MapFlags","synthetic":true,"types":[]},{"text":"impl Unpin for MmapAdvise","synthetic":true,"types":[]},{"text":"impl Unpin for MsFlags","synthetic":true,"types":[]},{"text":"impl Unpin for MlockAllFlags","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for Options","synthetic":true,"types":[]},{"text":"impl Unpin for QuotaType","synthetic":true,"types":[]},{"text":"impl Unpin for QuotaFmt","synthetic":true,"types":[]},{"text":"impl Unpin for QuotaValidFlags","synthetic":true,"types":[]},{"text":"impl Unpin for Dqblk","synthetic":true,"types":[]},{"text":"impl Unpin for RebootMode","synthetic":true,"types":[]},{"text":"impl Unpin for FdSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Fds&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for SigEvent","synthetic":true,"types":[]},{"text":"impl Unpin for Signal","synthetic":true,"types":[]},{"text":"impl Unpin for SignalIterator","synthetic":true,"types":[]},{"text":"impl Unpin for SaFlags","synthetic":true,"types":[]},{"text":"impl Unpin for SigmaskHow","synthetic":true,"types":[]},{"text":"impl Unpin for SigSet","synthetic":true,"types":[]},{"text":"impl Unpin for SigHandler","synthetic":true,"types":[]},{"text":"impl Unpin for SigAction","synthetic":true,"types":[]},{"text":"impl Unpin for SigevNotify","synthetic":true,"types":[]},{"text":"impl Unpin for SfdFlags","synthetic":true,"types":[]},{"text":"impl Unpin for SignalFd","synthetic":true,"types":[]},{"text":"impl Unpin for NetlinkAddr","synthetic":true,"types":[]},{"text":"impl Unpin for AlgAddr","synthetic":true,"types":[]},{"text":"impl Unpin for LinkAddr","synthetic":true,"types":[]},{"text":"impl Unpin for VsockAddr","synthetic":true,"types":[]},{"text":"impl Unpin for AddressFamily","synthetic":true,"types":[]},{"text":"impl Unpin for InetAddr","synthetic":true,"types":[]},{"text":"impl Unpin for IpAddr","synthetic":true,"types":[]},{"text":"impl Unpin for Ipv4Addr","synthetic":true,"types":[]},{"text":"impl Unpin for Ipv6Addr","synthetic":true,"types":[]},{"text":"impl Unpin for UnixAddr","synthetic":true,"types":[]},{"text":"impl Unpin for SockAddr","synthetic":true,"types":[]},{"text":"impl Unpin for ReuseAddr","synthetic":true,"types":[]},{"text":"impl Unpin for ReusePort","synthetic":true,"types":[]},{"text":"impl Unpin for TcpNoDelay","synthetic":true,"types":[]},{"text":"impl Unpin for Linger","synthetic":true,"types":[]},{"text":"impl Unpin for IpAddMembership","synthetic":true,"types":[]},{"text":"impl Unpin for IpDropMembership","synthetic":true,"types":[]},{"text":"impl Unpin for Ipv6AddMembership","synthetic":true,"types":[]},{"text":"impl Unpin for Ipv6DropMembership","synthetic":true,"types":[]},{"text":"impl Unpin for IpMulticastTtl","synthetic":true,"types":[]},{"text":"impl Unpin for IpMulticastLoop","synthetic":true,"types":[]},{"text":"impl Unpin for ReceiveTimeout","synthetic":true,"types":[]},{"text":"impl Unpin for SendTimeout","synthetic":true,"types":[]},{"text":"impl Unpin for Broadcast","synthetic":true,"types":[]},{"text":"impl Unpin for OobInline","synthetic":true,"types":[]},{"text":"impl Unpin for SocketError","synthetic":true,"types":[]},{"text":"impl Unpin for KeepAlive","synthetic":true,"types":[]},{"text":"impl Unpin for PeerCredentials","synthetic":true,"types":[]},{"text":"impl Unpin for TcpKeepIdle","synthetic":true,"types":[]},{"text":"impl Unpin for TcpKeepCount","synthetic":true,"types":[]},{"text":"impl Unpin for TcpKeepInterval","synthetic":true,"types":[]},{"text":"impl Unpin for RcvBuf","synthetic":true,"types":[]},{"text":"impl Unpin for SndBuf","synthetic":true,"types":[]},{"text":"impl Unpin for RcvBufForce","synthetic":true,"types":[]},{"text":"impl Unpin for SndBufForce","synthetic":true,"types":[]},{"text":"impl Unpin for SockType","synthetic":true,"types":[]},{"text":"impl Unpin for AcceptConn","synthetic":true,"types":[]},{"text":"impl Unpin for BindToDevice","synthetic":true,"types":[]},{"text":"impl Unpin for OriginalDst","synthetic":true,"types":[]},{"text":"impl Unpin for ReceiveTimestamp","synthetic":true,"types":[]},{"text":"impl Unpin for IpTransparent","synthetic":true,"types":[]},{"text":"impl Unpin for Mark","synthetic":true,"types":[]},{"text":"impl Unpin for PassCred","synthetic":true,"types":[]},{"text":"impl Unpin for TcpCongestion","synthetic":true,"types":[]},{"text":"impl Unpin for Ipv4PacketInfo","synthetic":true,"types":[]},{"text":"impl Unpin for Ipv6RecvPacketInfo","synthetic":true,"types":[]},{"text":"impl Unpin for UdpGsoSegment","synthetic":true,"types":[]},{"text":"impl Unpin for UdpGroSegment","synthetic":true,"types":[]},{"text":"impl Unpin for AlgSetAeadAuthSize","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for AlgSetKey&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for SockType","synthetic":true,"types":[]},{"text":"impl Unpin for SockProtocol","synthetic":true,"types":[]},{"text":"impl Unpin for SockFlag","synthetic":true,"types":[]},{"text":"impl Unpin for MsgFlags","synthetic":true,"types":[]},{"text":"impl Unpin for UnixCredentials","synthetic":true,"types":[]},{"text":"impl Unpin for IpMembershipRequest","synthetic":true,"types":[]},{"text":"impl Unpin for Ipv6MembershipRequest","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for RecvMsg&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for CmsgIterator&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ControlMessageOwned","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ControlMessage&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, I, C&gt; Unpin for SendMmsgData&lt;'a, I, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; Unpin for RecvMmsgData&lt;'a, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for SockLevel","synthetic":true,"types":[]},{"text":"impl Unpin for Shutdown","synthetic":true,"types":[]},{"text":"impl Unpin for SFlag","synthetic":true,"types":[]},{"text":"impl Unpin for Mode","synthetic":true,"types":[]},{"text":"impl Unpin for FchmodatFlags","synthetic":true,"types":[]},{"text":"impl Unpin for UtimensatFlags","synthetic":true,"types":[]},{"text":"impl Unpin for Statfs","synthetic":true,"types":[]},{"text":"impl Unpin for FsType","synthetic":true,"types":[]},{"text":"impl Unpin for FsFlags","synthetic":true,"types":[]},{"text":"impl Unpin for Statvfs","synthetic":true,"types":[]},{"text":"impl Unpin for SysInfo","synthetic":true,"types":[]},{"text":"impl Unpin for Termios","synthetic":true,"types":[]},{"text":"impl Unpin for BaudRate","synthetic":true,"types":[]},{"text":"impl Unpin for SetArg","synthetic":true,"types":[]},{"text":"impl Unpin for FlushArg","synthetic":true,"types":[]},{"text":"impl Unpin for FlowArg","synthetic":true,"types":[]},{"text":"impl Unpin for SpecialCharacterIndices","synthetic":true,"types":[]},{"text":"impl Unpin for InputFlags","synthetic":true,"types":[]},{"text":"impl Unpin for OutputFlags","synthetic":true,"types":[]},{"text":"impl Unpin for ControlFlags","synthetic":true,"types":[]},{"text":"impl Unpin for LocalFlags","synthetic":true,"types":[]},{"text":"impl Unpin for TimeSpec","synthetic":true,"types":[]},{"text":"impl Unpin for TimeVal","synthetic":true,"types":[]},{"text":"impl Unpin for RemoteIoVec","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for IoVec&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for UtsName","synthetic":true,"types":[]},{"text":"impl Unpin for WaitPidFlag","synthetic":true,"types":[]},{"text":"impl Unpin for WaitStatus","synthetic":true,"types":[]},{"text":"impl Unpin for AddWatchFlags","synthetic":true,"types":[]},{"text":"impl Unpin for InitFlags","synthetic":true,"types":[]},{"text":"impl Unpin for Inotify","synthetic":true,"types":[]},{"text":"impl Unpin for WatchDescriptor","synthetic":true,"types":[]},{"text":"impl Unpin for InotifyEvent","synthetic":true,"types":[]},{"text":"impl Unpin for TimerFd","synthetic":true,"types":[]},{"text":"impl Unpin for ClockId","synthetic":true,"types":[]},{"text":"impl Unpin for TimerFlags","synthetic":true,"types":[]},{"text":"impl Unpin for TimerSetTimeFlags","synthetic":true,"types":[]},{"text":"impl Unpin for Expiration","synthetic":true,"types":[]},{"text":"impl Unpin for ClockId","synthetic":true,"types":[]},{"text":"impl Unpin for UContext","synthetic":true,"types":[]},{"text":"impl Unpin for Uid","synthetic":true,"types":[]},{"text":"impl Unpin for Gid","synthetic":true,"types":[]},{"text":"impl Unpin for Pid","synthetic":true,"types":[]},{"text":"impl Unpin for ForkResult","synthetic":true,"types":[]},{"text":"impl Unpin for FchownatFlags","synthetic":true,"types":[]},{"text":"impl Unpin for Whence","synthetic":true,"types":[]},{"text":"impl Unpin for LinkatFlags","synthetic":true,"types":[]},{"text":"impl Unpin for UnlinkatFlags","synthetic":true,"types":[]},{"text":"impl Unpin for PathconfVar","synthetic":true,"types":[]},{"text":"impl Unpin for SysconfVar","synthetic":true,"types":[]},{"text":"impl Unpin for AccessFlags","synthetic":true,"types":[]},{"text":"impl Unpin for User","synthetic":true,"types":[]},{"text":"impl Unpin for Group","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]}];
implementors["nodrop"] = [{"text":"impl&lt;T&gt; Unpin for NoDrop&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["num_complex"] = [{"text":"impl&lt;T&gt; Unpin for Complex&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for ParseComplexError&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["num_format"] = [{"text":"impl Unpin for Buffer","synthetic":true,"types":[]},{"text":"impl Unpin for CustomFormat","synthetic":true,"types":[]},{"text":"impl Unpin for CustomFormatBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for ErrorKind","synthetic":true,"types":[]},{"text":"impl Unpin for Grouping","synthetic":true,"types":[]},{"text":"impl Unpin for Locale","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for DecimalStr&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for InfinityStr&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for MinusSignStr&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for NanStr&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for PlusSignStr&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SeparatorStr&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["num_integer"] = [{"text":"impl&lt;A&gt; Unpin for ExtendedGcd&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for IterBinomial&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["num_iter"] = [{"text":"impl&lt;A&gt; Unpin for Range&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for RangeInclusive&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for RangeStep&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for RangeStepInclusive&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for RangeFrom&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for RangeStepFrom&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["num_rational"] = [{"text":"impl&lt;T&gt; Unpin for Ratio&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ParseRatioError","synthetic":true,"types":[]}];
implementors["num_traits"] = [{"text":"impl Unpin for FloatErrorKind","synthetic":true,"types":[]},{"text":"impl Unpin for ParseFloatError","synthetic":true,"types":[]}];
implementors["once_cell"] = [{"text":"impl&lt;T&gt; Unpin for OnceCell&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, F&gt; Unpin for Lazy&lt;T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for OnceCell&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, F&gt; Unpin for Lazy&lt;T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["openssl"] = [{"text":"impl Unpin for KeyError","synthetic":true,"types":[]},{"text":"impl Unpin for AesKey","synthetic":true,"types":[]},{"text":"impl Unpin for Asn1GeneralizedTime","synthetic":true,"types":[]},{"text":"impl Unpin for Asn1GeneralizedTimeRef","synthetic":true,"types":[]},{"text":"impl Unpin for TimeDiff","synthetic":true,"types":[]},{"text":"impl Unpin for Asn1Time","synthetic":true,"types":[]},{"text":"impl Unpin for Asn1TimeRef","synthetic":true,"types":[]},{"text":"impl Unpin for Asn1String","synthetic":true,"types":[]},{"text":"impl Unpin for Asn1StringRef","synthetic":true,"types":[]},{"text":"impl Unpin for Asn1Integer","synthetic":true,"types":[]},{"text":"impl Unpin for Asn1IntegerRef","synthetic":true,"types":[]},{"text":"impl Unpin for Asn1BitString","synthetic":true,"types":[]},{"text":"impl Unpin for Asn1BitStringRef","synthetic":true,"types":[]},{"text":"impl Unpin for Asn1Object","synthetic":true,"types":[]},{"text":"impl Unpin for Asn1ObjectRef","synthetic":true,"types":[]},{"text":"impl Unpin for MsbOption","synthetic":true,"types":[]},{"text":"impl Unpin for BigNumContext","synthetic":true,"types":[]},{"text":"impl Unpin for BigNumContextRef","synthetic":true,"types":[]},{"text":"impl Unpin for BigNum","synthetic":true,"types":[]},{"text":"impl Unpin for BigNumRef","synthetic":true,"types":[]},{"text":"impl Unpin for CMSOptions","synthetic":true,"types":[]},{"text":"impl Unpin for CmsContentInfo","synthetic":true,"types":[]},{"text":"impl Unpin for CmsContentInfoRef","synthetic":true,"types":[]},{"text":"impl Unpin for ConfMethod","synthetic":true,"types":[]},{"text":"impl Unpin for Conf","synthetic":true,"types":[]},{"text":"impl Unpin for ConfRef","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Deriver&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Dh&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for DhRef&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Dsa&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for DsaRef&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for PointConversionForm","synthetic":true,"types":[]},{"text":"impl Unpin for Asn1Flag","synthetic":true,"types":[]},{"text":"impl Unpin for EcGroup","synthetic":true,"types":[]},{"text":"impl Unpin for EcGroupRef","synthetic":true,"types":[]},{"text":"impl Unpin for EcPoint","synthetic":true,"types":[]},{"text":"impl Unpin for EcPointRef","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for EcKey&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for EcKeyRef&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for EcdsaSig","synthetic":true,"types":[]},{"text":"impl Unpin for EcdsaSigRef","synthetic":true,"types":[]},{"text":"impl Unpin for Seal","synthetic":true,"types":[]},{"text":"impl Unpin for Open","synthetic":true,"types":[]},{"text":"impl Unpin for ErrorStack","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Unpin for Index&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for MessageDigest","synthetic":true,"types":[]},{"text":"impl Unpin for Hasher","synthetic":true,"types":[]},{"text":"impl Unpin for DigestBytes","synthetic":true,"types":[]},{"text":"impl Unpin for SignatureAlgorithms","synthetic":true,"types":[]},{"text":"impl Unpin for Nid","synthetic":true,"types":[]},{"text":"impl Unpin for OcspFlag","synthetic":true,"types":[]},{"text":"impl Unpin for OcspResponseStatus","synthetic":true,"types":[]},{"text":"impl Unpin for OcspCertStatus","synthetic":true,"types":[]},{"text":"impl Unpin for OcspRevokedStatus","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for OcspStatus&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for OcspBasicResponse","synthetic":true,"types":[]},{"text":"impl Unpin for OcspBasicResponseRef","synthetic":true,"types":[]},{"text":"impl Unpin for OcspCertId","synthetic":true,"types":[]},{"text":"impl Unpin for OcspCertIdRef","synthetic":true,"types":[]},{"text":"impl Unpin for OcspResponse","synthetic":true,"types":[]},{"text":"impl Unpin for OcspResponseRef","synthetic":true,"types":[]},{"text":"impl Unpin for OcspRequest","synthetic":true,"types":[]},{"text":"impl Unpin for OcspRequestRef","synthetic":true,"types":[]},{"text":"impl Unpin for OcspOneReq","synthetic":true,"types":[]},{"text":"impl Unpin for OcspOneReqRef","synthetic":true,"types":[]},{"text":"impl Unpin for Pkcs12","synthetic":true,"types":[]},{"text":"impl Unpin for Pkcs12Ref","synthetic":true,"types":[]},{"text":"impl Unpin for ParsedPkcs12","synthetic":true,"types":[]},{"text":"impl Unpin for Pkcs12Builder","synthetic":true,"types":[]},{"text":"impl Unpin for KeyIvPair","synthetic":true,"types":[]},{"text":"impl Unpin for Pkcs7","synthetic":true,"types":[]},{"text":"impl Unpin for Pkcs7Ref","synthetic":true,"types":[]},{"text":"impl Unpin for Pkcs7Flags","synthetic":true,"types":[]},{"text":"impl Unpin for Params","synthetic":true,"types":[]},{"text":"impl Unpin for Public","synthetic":true,"types":[]},{"text":"impl Unpin for Private","synthetic":true,"types":[]},{"text":"impl Unpin for Id","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for PKey&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for PKeyRef&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Padding","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Rsa&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for RsaRef&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for RsaPrivateKeyBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for Sha1","synthetic":true,"types":[]},{"text":"impl Unpin for Sha224","synthetic":true,"types":[]},{"text":"impl Unpin for Sha256","synthetic":true,"types":[]},{"text":"impl Unpin for Sha384","synthetic":true,"types":[]},{"text":"impl Unpin for Sha512","synthetic":true,"types":[]},{"text":"impl Unpin for RsaPssSaltlen","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Signer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Verifier&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for SrtpProtectionProfile","synthetic":true,"types":[]},{"text":"impl Unpin for SrtpProtectionProfileRef","synthetic":true,"types":[]},{"text":"impl Unpin for SrtpProfileId","synthetic":true,"types":[]},{"text":"impl Unpin for SslConnector","synthetic":true,"types":[]},{"text":"impl Unpin for SslConnectorBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for ConnectConfiguration","synthetic":true,"types":[]},{"text":"impl Unpin for SslAcceptor","synthetic":true,"types":[]},{"text":"impl Unpin for SslAcceptorBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for ErrorCode","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for HandshakeError&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for SslOptions","synthetic":true,"types":[]},{"text":"impl Unpin for SslMode","synthetic":true,"types":[]},{"text":"impl Unpin for SslMethod","synthetic":true,"types":[]},{"text":"impl Unpin for SslVerifyMode","synthetic":true,"types":[]},{"text":"impl Unpin for SslSessionCacheMode","synthetic":true,"types":[]},{"text":"impl Unpin for ExtensionContext","synthetic":true,"types":[]},{"text":"impl Unpin for SslFiletype","synthetic":true,"types":[]},{"text":"impl Unpin for StatusType","synthetic":true,"types":[]},{"text":"impl Unpin for NameType","synthetic":true,"types":[]},{"text":"impl Unpin for SniError","synthetic":true,"types":[]},{"text":"impl Unpin for SslAlert","synthetic":true,"types":[]},{"text":"impl Unpin for AlpnError","synthetic":true,"types":[]},{"text":"impl Unpin for ClientHelloResponse","synthetic":true,"types":[]},{"text":"impl Unpin for SslVersion","synthetic":true,"types":[]},{"text":"impl Unpin for SslContextBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for SslContext","synthetic":true,"types":[]},{"text":"impl Unpin for SslContextRef","synthetic":true,"types":[]},{"text":"impl Unpin for CipherBits","synthetic":true,"types":[]},{"text":"impl Unpin for SslCipher","synthetic":true,"types":[]},{"text":"impl Unpin for SslCipherRef","synthetic":true,"types":[]},{"text":"impl Unpin for SslSession","synthetic":true,"types":[]},{"text":"impl Unpin for SslSessionRef","synthetic":true,"types":[]},{"text":"impl Unpin for Ssl","synthetic":true,"types":[]},{"text":"impl Unpin for SslRef","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for MidHandshakeSslStream&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for SslStream&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for SslStreamBuilder&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ShutdownResult","synthetic":true,"types":[]},{"text":"impl Unpin for ShutdownState","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Stack&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for IntoIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for StackRef&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for OpensslString","synthetic":true,"types":[]},{"text":"impl Unpin for OpensslStringRef","synthetic":true,"types":[]},{"text":"impl Unpin for Mode","synthetic":true,"types":[]},{"text":"impl Unpin for Cipher","synthetic":true,"types":[]},{"text":"impl Unpin for Crypter","synthetic":true,"types":[]},{"text":"impl Unpin for X509CheckFlags","synthetic":true,"types":[]},{"text":"impl Unpin for X509VerifyParam","synthetic":true,"types":[]},{"text":"impl Unpin for X509VerifyParamRef","synthetic":true,"types":[]},{"text":"impl Unpin for BasicConstraints","synthetic":true,"types":[]},{"text":"impl Unpin for KeyUsage","synthetic":true,"types":[]},{"text":"impl Unpin for ExtendedKeyUsage","synthetic":true,"types":[]},{"text":"impl Unpin for SubjectKeyIdentifier","synthetic":true,"types":[]},{"text":"impl Unpin for AuthorityKeyIdentifier","synthetic":true,"types":[]},{"text":"impl Unpin for SubjectAlternativeName","synthetic":true,"types":[]},{"text":"impl Unpin for X509StoreBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for X509StoreBuilderRef","synthetic":true,"types":[]},{"text":"impl Unpin for X509Store","synthetic":true,"types":[]},{"text":"impl Unpin for X509StoreRef","synthetic":true,"types":[]},{"text":"impl Unpin for X509StoreContext","synthetic":true,"types":[]},{"text":"impl Unpin for X509StoreContextRef","synthetic":true,"types":[]},{"text":"impl Unpin for X509Builder","synthetic":true,"types":[]},{"text":"impl Unpin for X509","synthetic":true,"types":[]},{"text":"impl Unpin for X509Ref","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for X509v3Context&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for X509Extension","synthetic":true,"types":[]},{"text":"impl Unpin for X509ExtensionRef","synthetic":true,"types":[]},{"text":"impl Unpin for X509NameBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for X509Name","synthetic":true,"types":[]},{"text":"impl Unpin for X509NameRef","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for X509NameEntries&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for X509NameEntry","synthetic":true,"types":[]},{"text":"impl Unpin for X509NameEntryRef","synthetic":true,"types":[]},{"text":"impl Unpin for X509ReqBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for X509Req","synthetic":true,"types":[]},{"text":"impl Unpin for X509ReqRef","synthetic":true,"types":[]},{"text":"impl Unpin for X509VerifyResult","synthetic":true,"types":[]},{"text":"impl Unpin for GeneralName","synthetic":true,"types":[]},{"text":"impl Unpin for GeneralNameRef","synthetic":true,"types":[]},{"text":"impl Unpin for X509Algorithm","synthetic":true,"types":[]},{"text":"impl Unpin for X509AlgorithmRef","synthetic":true,"types":[]}];
implementors["openssl_probe"] = [{"text":"impl Unpin for ProbeResult","synthetic":true,"types":[]}];
implementors["openssl_sys"] = [{"text":"impl Unpin for AES_KEY","synthetic":true,"types":[]},{"text":"impl Unpin for ASN1_ENCODING","synthetic":true,"types":[]},{"text":"impl Unpin for stack_st_ASN1_OBJECT","synthetic":true,"types":[]},{"text":"impl Unpin for BIO_METHOD","synthetic":true,"types":[]},{"text":"impl Unpin for CMS_ContentInfo","synthetic":true,"types":[]},{"text":"impl Unpin for stack_st_void","synthetic":true,"types":[]},{"text":"impl Unpin for point_conversion_form_t","synthetic":true,"types":[]},{"text":"impl Unpin for EC_METHOD","synthetic":true,"types":[]},{"text":"impl Unpin for EC_GROUP","synthetic":true,"types":[]},{"text":"impl Unpin for EC_POINT","synthetic":true,"types":[]},{"text":"impl Unpin for ECDSA_SIG","synthetic":true,"types":[]},{"text":"impl Unpin for ERR_STRING_DATA","synthetic":true,"types":[]},{"text":"impl Unpin for OCSP_CERTID","synthetic":true,"types":[]},{"text":"impl Unpin for OCSP_ONEREQ","synthetic":true,"types":[]},{"text":"impl Unpin for OCSP_REQUEST","synthetic":true,"types":[]},{"text":"impl Unpin for OCSP_BASICRESP","synthetic":true,"types":[]},{"text":"impl Unpin for ASN1_INTEGER","synthetic":true,"types":[]},{"text":"impl Unpin for ASN1_GENERALIZEDTIME","synthetic":true,"types":[]},{"text":"impl Unpin for ASN1_STRING","synthetic":true,"types":[]},{"text":"impl Unpin for ASN1_BIT_STRING","synthetic":true,"types":[]},{"text":"impl Unpin for ASN1_TIME","synthetic":true,"types":[]},{"text":"impl Unpin for ASN1_TYPE","synthetic":true,"types":[]},{"text":"impl Unpin for ASN1_OBJECT","synthetic":true,"types":[]},{"text":"impl Unpin for ASN1_OCTET_STRING","synthetic":true,"types":[]},{"text":"impl Unpin for bio_st","synthetic":true,"types":[]},{"text":"impl Unpin for BIO","synthetic":true,"types":[]},{"text":"impl Unpin for BIGNUM","synthetic":true,"types":[]},{"text":"impl Unpin for BN_BLINDING","synthetic":true,"types":[]},{"text":"impl Unpin for BN_MONT_CTX","synthetic":true,"types":[]},{"text":"impl Unpin for BN_CTX","synthetic":true,"types":[]},{"text":"impl Unpin for BN_GENCB","synthetic":true,"types":[]},{"text":"impl Unpin for EVP_CIPHER","synthetic":true,"types":[]},{"text":"impl Unpin for EVP_CIPHER_CTX","synthetic":true,"types":[]},{"text":"impl Unpin for EVP_MD","synthetic":true,"types":[]},{"text":"impl Unpin for EVP_MD_CTX","synthetic":true,"types":[]},{"text":"impl Unpin for EVP_PKEY","synthetic":true,"types":[]},{"text":"impl Unpin for PKCS8_PRIV_KEY_INFO","synthetic":true,"types":[]},{"text":"impl Unpin for EVP_PKEY_ASN1_METHOD","synthetic":true,"types":[]},{"text":"impl Unpin for EVP_PKEY_CTX","synthetic":true,"types":[]},{"text":"impl Unpin for HMAC_CTX","synthetic":true,"types":[]},{"text":"impl Unpin for DH","synthetic":true,"types":[]},{"text":"impl Unpin for DH_METHOD","synthetic":true,"types":[]},{"text":"impl Unpin for DSA","synthetic":true,"types":[]},{"text":"impl Unpin for DSA_METHOD","synthetic":true,"types":[]},{"text":"impl Unpin for RSA","synthetic":true,"types":[]},{"text":"impl Unpin for RSA_METHOD","synthetic":true,"types":[]},{"text":"impl Unpin for EC_KEY","synthetic":true,"types":[]},{"text":"impl Unpin for X509","synthetic":true,"types":[]},{"text":"impl Unpin for X509_ALGOR","synthetic":true,"types":[]},{"text":"impl Unpin for X509_CRL","synthetic":true,"types":[]},{"text":"impl Unpin for X509_NAME","synthetic":true,"types":[]},{"text":"impl Unpin for X509_STORE","synthetic":true,"types":[]},{"text":"impl Unpin for X509_STORE_CTX","synthetic":true,"types":[]},{"text":"impl Unpin for X509_VERIFY_PARAM","synthetic":true,"types":[]},{"text":"impl Unpin for X509V3_CTX","synthetic":true,"types":[]},{"text":"impl Unpin for CONF","synthetic":true,"types":[]},{"text":"impl Unpin for OPENSSL_INIT_SETTINGS","synthetic":true,"types":[]},{"text":"impl Unpin for ENGINE","synthetic":true,"types":[]},{"text":"impl Unpin for SSL","synthetic":true,"types":[]},{"text":"impl Unpin for SSL_CTX","synthetic":true,"types":[]},{"text":"impl Unpin for COMP_METHOD","synthetic":true,"types":[]},{"text":"impl Unpin for CRYPTO_EX_DATA","synthetic":true,"types":[]},{"text":"impl Unpin for OCSP_RESPONSE","synthetic":true,"types":[]},{"text":"impl Unpin for PKCS12","synthetic":true,"types":[]},{"text":"impl Unpin for PKCS7_SIGNED","synthetic":true,"types":[]},{"text":"impl Unpin for PKCS7_ENVELOPE","synthetic":true,"types":[]},{"text":"impl Unpin for PKCS7_SIGN_ENVELOPE","synthetic":true,"types":[]},{"text":"impl Unpin for PKCS7_DIGEST","synthetic":true,"types":[]},{"text":"impl Unpin for PKCS7_ENCRYPT","synthetic":true,"types":[]},{"text":"impl Unpin for PKCS7","synthetic":true,"types":[]},{"text":"impl Unpin for stack_st_OPENSSL_STRING","synthetic":true,"types":[]},{"text":"impl Unpin for SHA_CTX","synthetic":true,"types":[]},{"text":"impl Unpin for SHA256_CTX","synthetic":true,"types":[]},{"text":"impl Unpin for SHA512_CTX","synthetic":true,"types":[]},{"text":"impl Unpin for SSL_METHOD","synthetic":true,"types":[]},{"text":"impl Unpin for SSL_CIPHER","synthetic":true,"types":[]},{"text":"impl Unpin for SSL_SESSION","synthetic":true,"types":[]},{"text":"impl Unpin for stack_st_SSL_CIPHER","synthetic":true,"types":[]},{"text":"impl Unpin for SRTP_PROTECTION_PROFILE","synthetic":true,"types":[]},{"text":"impl Unpin for stack_st_SRTP_PROTECTION_PROFILE","synthetic":true,"types":[]},{"text":"impl Unpin for OPENSSL_STACK","synthetic":true,"types":[]},{"text":"impl Unpin for X509_VAL","synthetic":true,"types":[]},{"text":"impl Unpin for X509_NAME_ENTRY","synthetic":true,"types":[]},{"text":"impl Unpin for stack_st_X509_NAME","synthetic":true,"types":[]},{"text":"impl Unpin for X509_EXTENSION","synthetic":true,"types":[]},{"text":"impl Unpin for stack_st_X509_EXTENSION","synthetic":true,"types":[]},{"text":"impl Unpin for stack_st_X509_ATTRIBUTE","synthetic":true,"types":[]},{"text":"impl Unpin for X509_REQ_INFO","synthetic":true,"types":[]},{"text":"impl Unpin for X509_REQ","synthetic":true,"types":[]},{"text":"impl Unpin for X509_CINF","synthetic":true,"types":[]},{"text":"impl Unpin for stack_st_X509","synthetic":true,"types":[]},{"text":"impl Unpin for CONF_METHOD","synthetic":true,"types":[]},{"text":"impl Unpin for GENERAL_NAME","synthetic":true,"types":[]},{"text":"impl Unpin for stack_st_GENERAL_NAME","synthetic":true,"types":[]}];
implementors["ordered_float"] = [{"text":"impl&lt;T&gt; Unpin for OrderedFloat&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for NotNan&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for FloatIsNan","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for ParseNotNanError&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["parking_lot"] = [{"text":"impl Unpin for WaitTimeoutResult","synthetic":true,"types":[]},{"text":"impl Unpin for Condvar","synthetic":true,"types":[]},{"text":"impl Unpin for OnceState","synthetic":true,"types":[]},{"text":"impl Unpin for Once","synthetic":true,"types":[]},{"text":"impl Unpin for RawFairMutex","synthetic":true,"types":[]},{"text":"impl Unpin for RawMutex","synthetic":true,"types":[]},{"text":"impl Unpin for RawRwLock","synthetic":true,"types":[]},{"text":"impl Unpin for RawThreadId","synthetic":true,"types":[]}];
implementors["parking_lot_core"] = [{"text":"impl Unpin for ParkResult","synthetic":true,"types":[]},{"text":"impl Unpin for UnparkResult","synthetic":true,"types":[]},{"text":"impl Unpin for RequeueOp","synthetic":true,"types":[]},{"text":"impl Unpin for FilterOp","synthetic":true,"types":[]},{"text":"impl Unpin for UnparkToken","synthetic":true,"types":[]},{"text":"impl Unpin for ParkToken","synthetic":true,"types":[]},{"text":"impl Unpin for SpinWait","synthetic":true,"types":[]}];
implementors["pd_client"] = [{"text":"impl Unpin for RpcClient","synthetic":true,"types":[]},{"text":"impl Unpin for DummyPdClient","synthetic":true,"types":[]},{"text":"impl Unpin for FeatureGate","synthetic":true,"types":[]},{"text":"impl Unpin for Feature","synthetic":true,"types":[]},{"text":"impl Unpin for PD_REQUEST_HISTOGRAM_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for PD_HEARTBEAT_COUNTER_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for PD_VALIDATE_PEER_COUNTER_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_SIZE_GAUGE_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for REGION_READ_KEYS_HISTOGRAM","synthetic":true,"types":[]},{"text":"impl Unpin for REGION_READ_BYTES_HISTOGRAM","synthetic":true,"types":[]},{"text":"impl Unpin for REGION_WRITTEN_BYTES_HISTOGRAM","synthetic":true,"types":[]},{"text":"impl Unpin for REGION_WRITTEN_KEYS_HISTOGRAM","synthetic":true,"types":[]},{"text":"impl Unpin for Inner","synthetic":true,"types":[]},{"text":"impl Unpin for HeartbeatReceiver","synthetic":true,"types":[]},{"text":"impl Unpin for LeaderClient","synthetic":true,"types":[]},{"text":"impl&lt;Req, F&gt; Unpin for Request&lt;Req, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Req: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Config","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for RegionStat","synthetic":true,"types":[]},{"text":"impl Unpin for RegionInfo","synthetic":true,"types":[]}];
implementors["percent_encoding"] = [{"text":"impl Unpin for AsciiSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for PercentEncode&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for PercentDecode&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["pnet_base"] = [{"text":"impl Unpin for MacAddr","synthetic":true,"types":[]},{"text":"impl Unpin for ParseMacAddrErr","synthetic":true,"types":[]}];
implementors["pnet_datalink"] = [{"text":"impl Unpin for Config","synthetic":true,"types":[]},{"text":"impl Unpin for Config","synthetic":true,"types":[]},{"text":"impl Unpin for ChannelType","synthetic":true,"types":[]},{"text":"impl Unpin for Channel","synthetic":true,"types":[]},{"text":"impl Unpin for FanoutType","synthetic":true,"types":[]},{"text":"impl Unpin for FanoutOption","synthetic":true,"types":[]},{"text":"impl Unpin for Config","synthetic":true,"types":[]},{"text":"impl Unpin for NetworkInterface","synthetic":true,"types":[]}];
implementors["pnet_sys"] = [{"text":"impl Unpin for FileDesc","synthetic":true,"types":[]}];
implementors["pprof"] = [{"text":"impl&lt;T&gt; Unpin for StackHashCounter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Collector&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Symbol","synthetic":true,"types":[]},{"text":"impl Unpin for Frames","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ProfilerGuard&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Report","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ReportBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Profile","synthetic":true,"types":[]},{"text":"impl Unpin for ValueType","synthetic":true,"types":[]},{"text":"impl Unpin for Sample","synthetic":true,"types":[]},{"text":"impl Unpin for Label","synthetic":true,"types":[]},{"text":"impl Unpin for Mapping","synthetic":true,"types":[]},{"text":"impl Unpin for Location","synthetic":true,"types":[]},{"text":"impl Unpin for Line","synthetic":true,"types":[]},{"text":"impl Unpin for Function","synthetic":true,"types":[]}];
implementors["ppv_lite86"] = [{"text":"impl Unpin for YesS3","synthetic":true,"types":[]},{"text":"impl Unpin for NoS3","synthetic":true,"types":[]},{"text":"impl Unpin for YesS4","synthetic":true,"types":[]},{"text":"impl Unpin for NoS4","synthetic":true,"types":[]},{"text":"impl Unpin for YesA1","synthetic":true,"types":[]},{"text":"impl Unpin for NoA1","synthetic":true,"types":[]},{"text":"impl Unpin for YesA2","synthetic":true,"types":[]},{"text":"impl Unpin for NoA2","synthetic":true,"types":[]},{"text":"impl Unpin for YesNI","synthetic":true,"types":[]},{"text":"impl Unpin for NoNI","synthetic":true,"types":[]},{"text":"impl&lt;S3, S4, NI&gt; Unpin for SseMachine&lt;S3, S4, NI&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;NI: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S3: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S4: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;NI&gt; Unpin for Avx2Machine&lt;NI&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;NI: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for vec128_storage","synthetic":true,"types":[]},{"text":"impl Unpin for vec256_storage","synthetic":true,"types":[]},{"text":"impl Unpin for vec512_storage","synthetic":true,"types":[]}];
implementors["proc_macro_error"] = [{"text":"impl Unpin for Level","synthetic":true,"types":[]},{"text":"impl Unpin for Diagnostic","synthetic":true,"types":[]}];
implementors["procfs"] = [{"text":"impl Unpin for Limits","synthetic":true,"types":[]},{"text":"impl Unpin for Limit","synthetic":true,"types":[]},{"text":"impl Unpin for LimitValue","synthetic":true,"types":[]},{"text":"impl Unpin for Stat","synthetic":true,"types":[]},{"text":"impl Unpin for NFSServerCaps","synthetic":true,"types":[]},{"text":"impl Unpin for MountInfo","synthetic":true,"types":[]},{"text":"impl Unpin for MountOptFields","synthetic":true,"types":[]},{"text":"impl Unpin for MountStat","synthetic":true,"types":[]},{"text":"impl Unpin for MountNFSStatistics","synthetic":true,"types":[]},{"text":"impl Unpin for NFSEventCounter","synthetic":true,"types":[]},{"text":"impl Unpin for NFSByteCounter","synthetic":true,"types":[]},{"text":"impl Unpin for NFSOperationStat","synthetic":true,"types":[]},{"text":"impl Unpin for Status","synthetic":true,"types":[]},{"text":"impl Unpin for StatFlags","synthetic":true,"types":[]},{"text":"impl Unpin for CoredumpFlags","synthetic":true,"types":[]},{"text":"impl Unpin for FDPermissions","synthetic":true,"types":[]},{"text":"impl Unpin for ProcState","synthetic":true,"types":[]},{"text":"impl Unpin for Io","synthetic":true,"types":[]},{"text":"impl Unpin for MMapPath","synthetic":true,"types":[]},{"text":"impl Unpin for MemoryMap","synthetic":true,"types":[]},{"text":"impl Unpin for FDTarget","synthetic":true,"types":[]},{"text":"impl Unpin for FDInfo","synthetic":true,"types":[]},{"text":"impl Unpin for Process","synthetic":true,"types":[]},{"text":"impl Unpin for StatM","synthetic":true,"types":[]},{"text":"impl Unpin for Meminfo","synthetic":true,"types":[]},{"text":"impl Unpin for TcpState","synthetic":true,"types":[]},{"text":"impl Unpin for UdpState","synthetic":true,"types":[]},{"text":"impl Unpin for UnixState","synthetic":true,"types":[]},{"text":"impl Unpin for TcpNetEntry","synthetic":true,"types":[]},{"text":"impl Unpin for UdpNetEntry","synthetic":true,"types":[]},{"text":"impl Unpin for UnixNetEntry","synthetic":true,"types":[]},{"text":"impl Unpin for DeviceStatus","synthetic":true,"types":[]},{"text":"impl Unpin for CpuInfo","synthetic":true,"types":[]},{"text":"impl Unpin for CGroupController","synthetic":true,"types":[]},{"text":"impl Unpin for ProcessCgroup","synthetic":true,"types":[]},{"text":"impl Unpin for Version","synthetic":true,"types":[]},{"text":"impl Unpin for DropCache","synthetic":true,"types":[]},{"text":"impl Unpin for PressureRecord","synthetic":true,"types":[]},{"text":"impl Unpin for CpuPressure","synthetic":true,"types":[]},{"text":"impl Unpin for MemoryPressure","synthetic":true,"types":[]},{"text":"impl Unpin for IoPressure","synthetic":true,"types":[]},{"text":"impl Unpin for DiskStat","synthetic":true,"types":[]},{"text":"impl Unpin for ProcError","synthetic":true,"types":[]},{"text":"impl Unpin for InternalError","synthetic":true,"types":[]},{"text":"impl Unpin for LoadAverage","synthetic":true,"types":[]},{"text":"impl Unpin for ConfigSetting","synthetic":true,"types":[]},{"text":"impl Unpin for CpuTime","synthetic":true,"types":[]},{"text":"impl Unpin for KernelStats","synthetic":true,"types":[]},{"text":"impl Unpin for KernelModule","synthetic":true,"types":[]}];
implementors["procinfo"] = [{"text":"impl Unpin for LoadAvg","synthetic":true,"types":[]},{"text":"impl Unpin for Io","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Limit&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Limits","synthetic":true,"types":[]},{"text":"impl Unpin for Mountinfo","synthetic":true,"types":[]},{"text":"impl Unpin for Stat","synthetic":true,"types":[]},{"text":"impl Unpin for Statm","synthetic":true,"types":[]},{"text":"impl Unpin for SeccompMode","synthetic":true,"types":[]},{"text":"impl Unpin for Status","synthetic":true,"types":[]},{"text":"impl Unpin for Cpu","synthetic":true,"types":[]},{"text":"impl Unpin for State","synthetic":true,"types":[]},{"text":"impl Unpin for DeviceStatus","synthetic":true,"types":[]}];
implementors["prometheus"] = [{"text":"impl Unpin for LabelPair","synthetic":true,"types":[]},{"text":"impl Unpin for Gauge","synthetic":true,"types":[]},{"text":"impl Unpin for Counter","synthetic":true,"types":[]},{"text":"impl Unpin for Quantile","synthetic":true,"types":[]},{"text":"impl Unpin for Summary","synthetic":true,"types":[]},{"text":"impl Unpin for Untyped","synthetic":true,"types":[]},{"text":"impl Unpin for Histogram","synthetic":true,"types":[]},{"text":"impl Unpin for Bucket","synthetic":true,"types":[]},{"text":"impl Unpin for Metric","synthetic":true,"types":[]},{"text":"impl Unpin for MetricFamily","synthetic":true,"types":[]},{"text":"impl Unpin for MetricType","synthetic":true,"types":[]},{"text":"impl Unpin for AtomicF64","synthetic":true,"types":[]},{"text":"impl Unpin for AtomicI64","synthetic":true,"types":[]},{"text":"impl Unpin for AtomicU64","synthetic":true,"types":[]},{"text":"impl&lt;T, V, D&gt; Unpin for AFLocalCounter&lt;T, V, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, D&gt; Unpin for AFLocalHistogram&lt;T, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; Unpin for GenericCounter&lt;P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; Unpin for GenericLocalCounter&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;P as Atomic&gt;::T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; Unpin for GenericLocalCounterVec&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;P as Atomic&gt;::T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Desc","synthetic":true,"types":[]},{"text":"impl Unpin for ProtobufEncoder","synthetic":true,"types":[]},{"text":"impl Unpin for TextEncoder","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; Unpin for GenericGauge&lt;P&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for HistogramOpts","synthetic":true,"types":[]},{"text":"impl Unpin for HistogramTimer","synthetic":true,"types":[]},{"text":"impl Unpin for Histogram","synthetic":true,"types":[]},{"text":"impl Unpin for LocalHistogram","synthetic":true,"types":[]},{"text":"impl Unpin for LocalHistogramTimer","synthetic":true,"types":[]},{"text":"impl Unpin for LocalHistogramVec","synthetic":true,"types":[]},{"text":"impl Unpin for Opts","synthetic":true,"types":[]},{"text":"impl Unpin for BasicAuthentication","synthetic":true,"types":[]},{"text":"impl Unpin for Registry","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for MetricVec&lt;T&gt;","synthetic":true,"types":[]}];
implementors["prost"] = [{"text":"impl Unpin for DecodeError","synthetic":true,"types":[]},{"text":"impl Unpin for EncodeError","synthetic":true,"types":[]}];
implementors["protobuf"] = [{"text":"impl Unpin for WireType","synthetic":true,"types":[]},{"text":"impl Unpin for Tag","synthetic":true,"types":[]},{"text":"impl Unpin for FileDescriptorSet","synthetic":true,"types":[]},{"text":"impl Unpin for FileDescriptorProto","synthetic":true,"types":[]},{"text":"impl Unpin for DescriptorProto","synthetic":true,"types":[]},{"text":"impl Unpin for DescriptorProto_ExtensionRange","synthetic":true,"types":[]},{"text":"impl Unpin for DescriptorProto_ReservedRange","synthetic":true,"types":[]},{"text":"impl Unpin for FieldDescriptorProto","synthetic":true,"types":[]},{"text":"impl Unpin for FieldDescriptorProto_Type","synthetic":true,"types":[]},{"text":"impl Unpin for FieldDescriptorProto_Label","synthetic":true,"types":[]},{"text":"impl Unpin for OneofDescriptorProto","synthetic":true,"types":[]},{"text":"impl Unpin for EnumDescriptorProto","synthetic":true,"types":[]},{"text":"impl Unpin for EnumValueDescriptorProto","synthetic":true,"types":[]},{"text":"impl Unpin for ServiceDescriptorProto","synthetic":true,"types":[]},{"text":"impl Unpin for MethodDescriptorProto","synthetic":true,"types":[]},{"text":"impl Unpin for FileOptions","synthetic":true,"types":[]},{"text":"impl Unpin for FileOptions_OptimizeMode","synthetic":true,"types":[]},{"text":"impl Unpin for MessageOptions","synthetic":true,"types":[]},{"text":"impl Unpin for FieldOptions","synthetic":true,"types":[]},{"text":"impl Unpin for FieldOptions_CType","synthetic":true,"types":[]},{"text":"impl Unpin for FieldOptions_JSType","synthetic":true,"types":[]},{"text":"impl Unpin for OneofOptions","synthetic":true,"types":[]},{"text":"impl Unpin for EnumOptions","synthetic":true,"types":[]},{"text":"impl Unpin for EnumValueOptions","synthetic":true,"types":[]},{"text":"impl Unpin for ServiceOptions","synthetic":true,"types":[]},{"text":"impl Unpin for MethodOptions","synthetic":true,"types":[]},{"text":"impl Unpin for UninterpretedOption","synthetic":true,"types":[]},{"text":"impl Unpin for UninterpretedOption_NamePart","synthetic":true,"types":[]},{"text":"impl Unpin for SourceCodeInfo","synthetic":true,"types":[]},{"text":"impl Unpin for SourceCodeInfo_Location","synthetic":true,"types":[]},{"text":"impl Unpin for GeneratedCodeInfo","synthetic":true,"types":[]},{"text":"impl Unpin for GeneratedCodeInfo_Annotation","synthetic":true,"types":[]},{"text":"impl Unpin for CodeGeneratorRequest","synthetic":true,"types":[]},{"text":"impl Unpin for CodeGeneratorResponse","synthetic":true,"types":[]},{"text":"impl Unpin for CodeGeneratorResponse_File","synthetic":true,"types":[]},{"text":"impl Unpin for WireError","synthetic":true,"types":[]},{"text":"impl Unpin for ProtobufError","synthetic":true,"types":[]},{"text":"impl&lt;M, T&gt; Unpin for ExtFieldOptional&lt;M, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;M, T&gt; Unpin for ExtFieldRepeated&lt;M, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Lazy&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ProtobufValueRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for FieldDescriptor","synthetic":true,"types":[]},{"text":"impl Unpin for MessageDescriptor","synthetic":true,"types":[]},{"text":"impl Unpin for EnumValueDescriptor","synthetic":true,"types":[]},{"text":"impl Unpin for EnumDescriptor","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ReflectFieldRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for RepeatedField&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for SingularField&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for SingularPtrField&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for CodedInputStream&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for CodedOutputStream&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ProtobufTypeFloat","synthetic":true,"types":[]},{"text":"impl Unpin for ProtobufTypeDouble","synthetic":true,"types":[]},{"text":"impl Unpin for ProtobufTypeInt32","synthetic":true,"types":[]},{"text":"impl Unpin for ProtobufTypeInt64","synthetic":true,"types":[]},{"text":"impl Unpin for ProtobufTypeUint32","synthetic":true,"types":[]},{"text":"impl Unpin for ProtobufTypeUint64","synthetic":true,"types":[]},{"text":"impl Unpin for ProtobufTypeSint32","synthetic":true,"types":[]},{"text":"impl Unpin for ProtobufTypeSint64","synthetic":true,"types":[]},{"text":"impl Unpin for ProtobufTypeFixed32","synthetic":true,"types":[]},{"text":"impl Unpin for ProtobufTypeFixed64","synthetic":true,"types":[]},{"text":"impl Unpin for ProtobufTypeSfixed32","synthetic":true,"types":[]},{"text":"impl Unpin for ProtobufTypeSfixed64","synthetic":true,"types":[]},{"text":"impl Unpin for ProtobufTypeBool","synthetic":true,"types":[]},{"text":"impl Unpin for ProtobufTypeString","synthetic":true,"types":[]},{"text":"impl Unpin for ProtobufTypeBytes","synthetic":true,"types":[]},{"text":"impl Unpin for ProtobufTypeChars","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for ProtobufTypeEnum&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;M&gt; Unpin for ProtobufTypeMessage&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Any","synthetic":true,"types":[]},{"text":"impl Unpin for Api","synthetic":true,"types":[]},{"text":"impl Unpin for Method","synthetic":true,"types":[]},{"text":"impl Unpin for Mixin","synthetic":true,"types":[]},{"text":"impl Unpin for Duration","synthetic":true,"types":[]},{"text":"impl Unpin for Empty","synthetic":true,"types":[]},{"text":"impl Unpin for FieldMask","synthetic":true,"types":[]},{"text":"impl Unpin for SourceContext","synthetic":true,"types":[]},{"text":"impl Unpin for Struct","synthetic":true,"types":[]},{"text":"impl Unpin for Value","synthetic":true,"types":[]},{"text":"impl Unpin for Value_oneof_kind","synthetic":true,"types":[]},{"text":"impl Unpin for ListValue","synthetic":true,"types":[]},{"text":"impl Unpin for NullValue","synthetic":true,"types":[]},{"text":"impl Unpin for Timestamp","synthetic":true,"types":[]},{"text":"impl Unpin for Type","synthetic":true,"types":[]},{"text":"impl Unpin for Field","synthetic":true,"types":[]},{"text":"impl Unpin for Field_Kind","synthetic":true,"types":[]},{"text":"impl Unpin for Field_Cardinality","synthetic":true,"types":[]},{"text":"impl Unpin for Enum","synthetic":true,"types":[]},{"text":"impl Unpin for EnumValue","synthetic":true,"types":[]},{"text":"impl Unpin for Option","synthetic":true,"types":[]},{"text":"impl Unpin for Syntax","synthetic":true,"types":[]},{"text":"impl Unpin for DoubleValue","synthetic":true,"types":[]},{"text":"impl Unpin for FloatValue","synthetic":true,"types":[]},{"text":"impl Unpin for Int64Value","synthetic":true,"types":[]},{"text":"impl Unpin for UInt64Value","synthetic":true,"types":[]},{"text":"impl Unpin for Int32Value","synthetic":true,"types":[]},{"text":"impl Unpin for UInt32Value","synthetic":true,"types":[]},{"text":"impl Unpin for BoolValue","synthetic":true,"types":[]},{"text":"impl Unpin for StringValue","synthetic":true,"types":[]},{"text":"impl Unpin for BytesValue","synthetic":true,"types":[]},{"text":"impl Unpin for CachedSize","synthetic":true,"types":[]},{"text":"impl Unpin for UnknownValue","synthetic":true,"types":[]},{"text":"impl&lt;'o&gt; Unpin for UnknownValueRef&lt;'o&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for UnknownValues","synthetic":true,"types":[]},{"text":"impl&lt;'o&gt; Unpin for UnknownValuesIter&lt;'o&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for UnknownFields","synthetic":true,"types":[]},{"text":"impl&lt;'s&gt; Unpin for UnknownFieldsIter&lt;'s&gt;","synthetic":true,"types":[]}];
implementors["quick_error"] = [{"text":"impl&lt;X, E&gt; Unpin for Context&lt;X, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["quick_xml"] = [{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Attributes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Attribute&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for BytesStart&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for BytesDecl&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for BytesEnd&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for BytesText&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Event&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for Reader&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Unpin for Writer&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["raft"] = [{"text":"impl&lt;'a&gt; Unpin for Changer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Config","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for StorageError","synthetic":true,"types":[]},{"text":"impl Unpin for Unstable","synthetic":true,"types":[]},{"text":"impl Unpin for Configuration","synthetic":true,"types":[]},{"text":"impl Unpin for Configuration","synthetic":true,"types":[]},{"text":"impl Unpin for StateRole","synthetic":true,"types":[]},{"text":"impl Unpin for SoftState","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Raft&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for RaftLog&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Peer","synthetic":true,"types":[]},{"text":"impl Unpin for SnapshotStatus","synthetic":true,"types":[]},{"text":"impl Unpin for Ready","synthetic":true,"types":[]},{"text":"impl Unpin for LightReady","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for RawNode&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ReadOnlyOption","synthetic":true,"types":[]},{"text":"impl Unpin for ReadState","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Status&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for RaftState","synthetic":true,"types":[]},{"text":"impl Unpin for MemStorageCore","synthetic":true,"types":[]},{"text":"impl Unpin for MemStorage","synthetic":true,"types":[]},{"text":"impl Unpin for Inflights","synthetic":true,"types":[]},{"text":"impl Unpin for Progress","synthetic":true,"types":[]},{"text":"impl Unpin for ProgressState","synthetic":true,"types":[]},{"text":"impl Unpin for ProgressTracker","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Union&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["raft_engine"] = [{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for RecoveryMode","synthetic":true,"types":[]},{"text":"impl Unpin for Config","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl&lt;E, W&gt; Unpin for LogBatch&lt;E, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for CacheStats","synthetic":true,"types":[]},{"text":"impl Unpin for GlobalStats","synthetic":true,"types":[]}];
implementors["raft_log_engine"] = [{"text":"impl Unpin for EntryExtTyped","synthetic":true,"types":[]},{"text":"impl Unpin for RaftLogEngine","synthetic":true,"types":[]},{"text":"impl Unpin for RaftLogBatch","synthetic":true,"types":[]}];
implementors["raft_proto"] = [{"text":"impl Unpin for Entry","synthetic":true,"types":[]},{"text":"impl Unpin for SnapshotMetadata","synthetic":true,"types":[]},{"text":"impl Unpin for Snapshot","synthetic":true,"types":[]},{"text":"impl Unpin for Message","synthetic":true,"types":[]},{"text":"impl Unpin for HardState","synthetic":true,"types":[]},{"text":"impl Unpin for ConfState","synthetic":true,"types":[]},{"text":"impl Unpin for ConfChange","synthetic":true,"types":[]},{"text":"impl Unpin for ConfChangeSingle","synthetic":true,"types":[]},{"text":"impl Unpin for ConfChangeV2","synthetic":true,"types":[]},{"text":"impl Unpin for EntryType","synthetic":true,"types":[]},{"text":"impl Unpin for MessageType","synthetic":true,"types":[]},{"text":"impl Unpin for ConfChangeTransition","synthetic":true,"types":[]},{"text":"impl Unpin for ConfChangeType","synthetic":true,"types":[]}];
implementors["raftstore"] = [{"text":"impl Unpin for Config","synthetic":true,"types":[]},{"text":"impl Unpin for ConsistencyCheckMethod","synthetic":true,"types":[]},{"text":"impl Unpin for SplitCheckConfigManager","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for Raw&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Entry&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for BoxAdminObserver","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for WrappedAdminObserver&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for BoxQueryObserver","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for WrappedQueryObserver&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for BoxApplySnapshotObserver","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for WrappedApplySnapshotObserver&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for BoxSplitCheckObserver&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E, T&gt; Unpin for WrappedSplitCheckObserver&lt;E, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for BoxRoleObserver","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for WrappedRoleObserver&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for BoxRegionChangeObserver","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for WrappedRegionChangeObserver&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for BoxReadIndexObserver","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for WrappedReadIndexObserver&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for BoxCmdObserver&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E, T&gt; Unpin for WrappedCmdObserver&lt;E, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for BoxConsistencyCheckObserver&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E, T&gt; Unpin for WrappedConsistencyCheckObserver&lt;E, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for Registry&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for CoprocessorHost&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for REGION_SIZE_HISTOGRAM","synthetic":true,"types":[]},{"text":"impl Unpin for REGION_KEYS_HISTOGRAM","synthetic":true,"types":[]},{"text":"impl Unpin for REGION_COUNT_GAUGE_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for RaftStoreEvent","synthetic":true,"types":[]},{"text":"impl Unpin for RegionInfo","synthetic":true,"types":[]},{"text":"impl Unpin for RegionInfoQuery","synthetic":true,"types":[]},{"text":"impl Unpin for RegionEventListener","synthetic":true,"types":[]},{"text":"impl Unpin for RegionCollector","synthetic":true,"types":[]},{"text":"impl Unpin for RegionInfoAccessor","synthetic":true,"types":[]},{"text":"impl Unpin for MockRegionInfoProvider","synthetic":true,"types":[]},{"text":"impl Unpin for Checker","synthetic":true,"types":[]},{"text":"impl Unpin for HalfCheckObserver","synthetic":true,"types":[]},{"text":"impl Unpin for Checker","synthetic":true,"types":[]},{"text":"impl&lt;C, E&gt; Unpin for KeysCheckObserver&lt;C, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Checker","synthetic":true,"types":[]},{"text":"impl&lt;C, E&gt; Unpin for SizeCheckObserver&lt;C, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Checker","synthetic":true,"types":[]},{"text":"impl Unpin for TableCheckObserver","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; Unpin for Host&lt;'a, E&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for SplitObserver","synthetic":true,"types":[]},{"text":"impl Unpin for KeyEntry","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ObserverContext&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for RegionChangeEvent","synthetic":true,"types":[]},{"text":"impl Unpin for Cmd","synthetic":true,"types":[]},{"text":"impl Unpin for CmdBatch","synthetic":true,"types":[]},{"text":"impl Unpin for DiscardReason","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for RaftStoreBlackHole","synthetic":true,"types":[]},{"text":"impl&lt;EK, ER&gt; Unpin for ServerRaftStoreRouter&lt;EK, ER&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;EK: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for CONFIG_RAFTSTORE_GAUGE","synthetic":true,"types":[]},{"text":"impl Unpin for Config","synthetic":true,"types":[]},{"text":"impl Unpin for RaftstoreConfigManager","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for PendingCmd&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for PendingCmdQueue&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ChangePeer","synthetic":true,"types":[]},{"text":"impl Unpin for Range","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for ExecResult&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for ApplyResult&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ExecContext","synthetic":true,"types":[]},{"text":"impl&lt;EK&gt; Unpin for ApplyCallback&lt;EK&gt;","synthetic":true,"types":[]},{"text":"impl&lt;EK, W&gt; Unpin for ApplyContext&lt;EK, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;EK: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;EK as PerfContextExt&gt;::PerfContext: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;EK as KvEngine&gt;::Snapshot: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for WaitSourceMergeState","synthetic":true,"types":[]},{"text":"impl&lt;EK&gt; Unpin for YieldState&lt;EK&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for NewSplitPeer","synthetic":true,"types":[]},{"text":"impl&lt;EK&gt; Unpin for ApplyDelegate&lt;EK&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Apply&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Registration","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Proposal&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Destroy","synthetic":true,"types":[]},{"text":"impl Unpin for CatchUpLogs","synthetic":true,"types":[]},{"text":"impl Unpin for GenSnapTask","synthetic":true,"types":[]},{"text":"impl Unpin for ObserveID","synthetic":true,"types":[]},{"text":"impl Unpin for ObserveCmd","synthetic":true,"types":[]},{"text":"impl Unpin for ChangeCmd","synthetic":true,"types":[]},{"text":"impl&lt;EK&gt; Unpin for Msg&lt;EK&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ApplyMetrics","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for ApplyRes&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for TaskRes&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;EK&gt; Unpin for ApplyFsm&lt;EK&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ControlMsg","synthetic":true,"types":[]},{"text":"impl Unpin for ControlFsm","synthetic":true,"types":[]},{"text":"impl&lt;EK, W&gt; Unpin for ApplyPoller&lt;EK, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;EK: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;EK as PerfContextExt&gt;::PerfContext: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;EK as KvEngine&gt;::Snapshot: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;EK, W&gt; Unpin for Builder&lt;EK, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;EK: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;EK&gt; Unpin for ApplyRouter&lt;EK&gt;","synthetic":true,"types":[]},{"text":"impl&lt;EK&gt; Unpin for ApplyBatchSystem&lt;EK&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for APPLY_PROPOSAL","synthetic":true,"types":[]},{"text":"impl Unpin for StoreStat","synthetic":true,"types":[]},{"text":"impl Unpin for GlobalStoreStat","synthetic":true,"types":[]},{"text":"impl Unpin for LocalStoreStat","synthetic":true,"types":[]},{"text":"impl Unpin for DestroyPeerJob","synthetic":true,"types":[]},{"text":"impl Unpin for CollectedReady","synthetic":true,"types":[]},{"text":"impl&lt;EK, ER&gt; Unpin for PeerFsm&lt;EK, ER&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;EK: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;ER: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;EK as KvEngine&gt;::Snapshot: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for BatchRaftCmdRequestBuilder&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, EK, ER, T&gt; Unpin for PeerFsmDelegate&lt;'a, EK, ER, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for StoreInfo&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for StoreMeta","synthetic":true,"types":[]},{"text":"impl&lt;EK, ER&gt; Unpin for RaftRouter&lt;EK, ER&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for PeerTickBatch","synthetic":true,"types":[]},{"text":"impl&lt;EK, ER, T&gt; Unpin for PollContext&lt;EK, ER, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;EK: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;ER: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;ER as RaftEngine&gt;::LogBatch: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;EK as PerfContextExt&gt;::PerfContext: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;EK as WriteBatchExt&gt;::WriteBatch: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Store","synthetic":true,"types":[]},{"text":"impl&lt;EK&gt; Unpin for StoreFsm&lt;EK&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;EK as CompactExt&gt;::CompactedEvent: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, EK, ER, T&gt; Unpin for StoreFsmDelegate&lt;'a, EK, ER, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;EK, ER, T&gt; Unpin for RaftPoller&lt;EK, ER, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;EK: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;ER: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;EK as CompactExt&gt;::CompactedEvent: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;ER as RaftEngine&gt;::LogBatch: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;EK as PerfContextExt&gt;::PerfContext: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;EK as KvEngine&gt;::Snapshot: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;EK as WriteBatchExt&gt;::WriteBatch: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;EK, ER, T&gt; Unpin for RaftPollerBuilder&lt;EK, ER, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;EK: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;ER: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;EK&gt; Unpin for Workers&lt;EK&gt;","synthetic":true,"types":[]},{"text":"impl&lt;EK, ER&gt; Unpin for RaftBatchSystem&lt;EK, ER&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for CheckMsgStatus","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for ReadResponse&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for WriteResponse","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Callback&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for PeerTicks","synthetic":true,"types":[]},{"text":"impl Unpin for StoreTick","synthetic":true,"types":[]},{"text":"impl Unpin for MergeResultKind","synthetic":true,"types":[]},{"text":"impl&lt;SK&gt; Unpin for SignificantMsg&lt;SK&gt;","synthetic":true,"types":[]},{"text":"impl&lt;EK&gt; Unpin for CasualMessage&lt;EK&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for RaftCommand&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;EK&gt; Unpin for PeerMsg&lt;EK&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;EK as KvEngine&gt;::Snapshot: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;EK&gt; Unpin for StoreMsg&lt;EK&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;EK as CompactExt&gt;::CompactedEvent: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for AdminCmdEpochState","synthetic":true,"types":[]},{"text":"impl Unpin for ADMIN_CMD_EPOCH_MAP","synthetic":true,"types":[]},{"text":"impl Unpin for Lease","synthetic":true,"types":[]},{"text":"impl Unpin for LeaseState","synthetic":true,"types":[]},{"text":"impl Unpin for RemoteLease","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; Unpin for KeysInfoFormatter&lt;'a, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ConfChangeKind","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for MsgType&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for COMPACTION_GUARD","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; Unpin for CompactionGuardGeneratorFactory&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; Unpin for CompactionGuardGenerator&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for GroupState","synthetic":true,"types":[]},{"text":"impl Unpin for LeaderState","synthetic":true,"types":[]},{"text":"impl Unpin for HibernateState","synthetic":true,"types":[]},{"text":"impl Unpin for RaftReadyMetrics","synthetic":true,"types":[]},{"text":"impl Unpin for RaftMessageMetrics","synthetic":true,"types":[]},{"text":"impl Unpin for RaftMessageDropMetrics","synthetic":true,"types":[]},{"text":"impl Unpin for RaftProposeMetrics","synthetic":true,"types":[]},{"text":"impl Unpin for RaftInvalidProposeMetrics","synthetic":true,"types":[]},{"text":"impl Unpin for RaftMetrics","synthetic":true,"types":[]},{"text":"impl Unpin for RaftEventDurationInner","synthetic":true,"types":[]},{"text":"impl Unpin for RaftEventDurationDelegator","synthetic":true,"types":[]},{"text":"impl Unpin for RaftEventDuration","synthetic":true,"types":[]},{"text":"impl Unpin for RaftInvalidProposalCountInner","synthetic":true,"types":[]},{"text":"impl Unpin for RaftInvalidProposalCountDelegator","synthetic":true,"types":[]},{"text":"impl Unpin for RaftInvalidProposalCount","synthetic":true,"types":[]},{"text":"impl Unpin for RaftEntryFetchesInner","synthetic":true,"types":[]},{"text":"impl Unpin for RaftEntryFetchesDelegator","synthetic":true,"types":[]},{"text":"impl Unpin for RaftEntryFetches","synthetic":true,"types":[]},{"text":"impl Unpin for SnapCfInner","synthetic":true,"types":[]},{"text":"impl Unpin for SnapCfDelegator","synthetic":true,"types":[]},{"text":"impl Unpin for SnapCf","synthetic":true,"types":[]},{"text":"impl Unpin for SnapCfSizeInner","synthetic":true,"types":[]},{"text":"impl Unpin for SnapCfSizeDelegator","synthetic":true,"types":[]},{"text":"impl Unpin for SnapCfSize","synthetic":true,"types":[]},{"text":"impl Unpin for RegionHashCounterInner","synthetic":true,"types":[]},{"text":"impl Unpin for RegionHashCounterDelegator","synthetic":true,"types":[]},{"text":"impl Unpin for RegionHashCounter2Inner","synthetic":true,"types":[]},{"text":"impl Unpin for RegionHashCounter2Delegator","synthetic":true,"types":[]},{"text":"impl Unpin for RegionHashCounter","synthetic":true,"types":[]},{"text":"impl Unpin for ProposalVecInner","synthetic":true,"types":[]},{"text":"impl Unpin for ProposalVecDelegator","synthetic":true,"types":[]},{"text":"impl Unpin for ProposalVec","synthetic":true,"types":[]},{"text":"impl Unpin for AdminCmdVecInner","synthetic":true,"types":[]},{"text":"impl Unpin for AdminCmdVecDelegator","synthetic":true,"types":[]},{"text":"impl Unpin for AdminCmdVec2Inner","synthetic":true,"types":[]},{"text":"impl Unpin for AdminCmdVec2Delegator","synthetic":true,"types":[]},{"text":"impl Unpin for AdminCmdVec","synthetic":true,"types":[]},{"text":"impl Unpin for RaftReadyVecInner","synthetic":true,"types":[]},{"text":"impl Unpin for RaftReadyVecDelegator","synthetic":true,"types":[]},{"text":"impl Unpin for RaftReadyVec","synthetic":true,"types":[]},{"text":"impl Unpin for MessageCounterVecInner","synthetic":true,"types":[]},{"text":"impl Unpin for MessageCounterVecDelegator","synthetic":true,"types":[]},{"text":"impl Unpin for MessageCounterVec","synthetic":true,"types":[]},{"text":"impl Unpin for RaftDropedVecInner","synthetic":true,"types":[]},{"text":"impl Unpin for RaftDropedVecDelegator","synthetic":true,"types":[]},{"text":"impl Unpin for RaftDropedVec","synthetic":true,"types":[]},{"text":"impl Unpin for SnapValidVecInner","synthetic":true,"types":[]},{"text":"impl Unpin for SnapValidVecDelegator","synthetic":true,"types":[]},{"text":"impl Unpin for SnapValidVec","synthetic":true,"types":[]},{"text":"impl Unpin for PerfContextTimeDurationInner","synthetic":true,"types":[]},{"text":"impl Unpin for PerfContextTimeDurationDelegator","synthetic":true,"types":[]},{"text":"impl Unpin for PerfContextTimeDuration","synthetic":true,"types":[]},{"text":"impl Unpin for CompactionGuardActionVecInner","synthetic":true,"types":[]},{"text":"impl Unpin for CompactionGuardActionVecDelegator","synthetic":true,"types":[]},{"text":"impl Unpin for CompactionGuardActionVec2Inner","synthetic":true,"types":[]},{"text":"impl Unpin for CompactionGuardActionVec2Delegator","synthetic":true,"types":[]},{"text":"impl Unpin for CompactionGuardActionVec","synthetic":true,"types":[]},{"text":"impl Unpin for PerfContextType","synthetic":true,"types":[]},{"text":"impl Unpin for ProposalType","synthetic":true,"types":[]},{"text":"impl Unpin for AdminCmdType","synthetic":true,"types":[]},{"text":"impl Unpin for AdminCmdStatus","synthetic":true,"types":[]},{"text":"impl Unpin for RaftReadyType","synthetic":true,"types":[]},{"text":"impl Unpin for MessageCounterType","synthetic":true,"types":[]},{"text":"impl Unpin for RaftDroppedMessage","synthetic":true,"types":[]},{"text":"impl Unpin for SnapValidationType","synthetic":true,"types":[]},{"text":"impl Unpin for RegionHashType","synthetic":true,"types":[]},{"text":"impl Unpin for RegionHashResult","synthetic":true,"types":[]},{"text":"impl Unpin for CfNames","synthetic":true,"types":[]},{"text":"impl Unpin for RaftEntryType","synthetic":true,"types":[]},{"text":"impl Unpin for RaftInvalidProposal","synthetic":true,"types":[]},{"text":"impl Unpin for RaftEventDurationType","synthetic":true,"types":[]},{"text":"impl Unpin for CompactionGuardAction","synthetic":true,"types":[]},{"text":"impl Unpin for PEER_PROPOSAL_COUNTER_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for PEER_PROPOSAL_COUNTER","synthetic":true,"types":[]},{"text":"impl Unpin for PEER_ADMIN_CMD_COUNTER_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for PEER_ADMIN_CMD_COUNTER","synthetic":true,"types":[]},{"text":"impl Unpin for PEER_APPEND_LOG_HISTOGRAM","synthetic":true,"types":[]},{"text":"impl Unpin for PEER_COMMIT_LOG_HISTOGRAM","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_APPLY_LOG_HISTOGRAM","synthetic":true,"types":[]},{"text":"impl Unpin for APPLY_TASK_WAIT_TIME_HISTOGRAM","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_RAFT_READY_COUNTER_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_RAFT_READY_COUNTER","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_RAFT_SENT_MESSAGE_COUNTER_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_RAFT_SENT_MESSAGE_COUNTER","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_RAFT_DROPPED_MESSAGE_COUNTER_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_RAFT_DROPPED_MESSAGE_COUNTER","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_SNAPSHOT_TRAFFIC_GAUGE_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_SNAPSHOT_VALIDATION_FAILURE_COUNTER_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_SNAPSHOT_VALIDATION_FAILURE_COUNTER","synthetic":true,"types":[]},{"text":"impl Unpin for PEER_RAFT_PROCESS_DURATION","synthetic":true,"types":[]},{"text":"impl Unpin for PEER_PROPOSE_LOG_SIZE_HISTOGRAM","synthetic":true,"types":[]},{"text":"impl Unpin for REGION_HASH_COUNTER_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for REGION_HASH_COUNTER","synthetic":true,"types":[]},{"text":"impl Unpin for REGION_MAX_LOG_LAG","synthetic":true,"types":[]},{"text":"impl Unpin for REQUEST_WAIT_TIME_HISTOGRAM","synthetic":true,"types":[]},{"text":"impl Unpin for PEER_GC_RAFT_LOG_COUNTER","synthetic":true,"types":[]},{"text":"impl Unpin for UPDATE_REGION_SIZE_BY_COMPACTION_COUNTER","synthetic":true,"types":[]},{"text":"impl Unpin for COMPACTION_RELATED_REGION_COUNT","synthetic":true,"types":[]},{"text":"impl Unpin for COMPACTION_DECLINED_BYTES","synthetic":true,"types":[]},{"text":"impl Unpin for SNAPSHOT_CF_KV_COUNT_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for SNAPSHOT_CF_KV_COUNT","synthetic":true,"types":[]},{"text":"impl Unpin for SNAPSHOT_CF_SIZE_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for SNAPSHOT_CF_SIZE","synthetic":true,"types":[]},{"text":"impl Unpin for SNAPSHOT_BUILD_TIME_HISTOGRAM","synthetic":true,"types":[]},{"text":"impl Unpin for SNAPSHOT_KV_COUNT_HISTOGRAM","synthetic":true,"types":[]},{"text":"impl Unpin for SNAPSHOT_SIZE_HISTOGRAM","synthetic":true,"types":[]},{"text":"impl Unpin for RAFT_ENTRY_FETCHES_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for RAFT_ENTRY_FETCHES","synthetic":true,"types":[]},{"text":"impl Unpin for LEADER_MISSING","synthetic":true,"types":[]},{"text":"impl Unpin for INGEST_SST_DURATION_SECONDS","synthetic":true,"types":[]},{"text":"impl Unpin for RAFT_INVALID_PROPOSAL_COUNTER_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for RAFT_INVALID_PROPOSAL_COUNTER","synthetic":true,"types":[]},{"text":"impl Unpin for RAFT_EVENT_DURATION_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for RAFT_EVENT_DURATION","synthetic":true,"types":[]},{"text":"impl Unpin for RAFT_READ_INDEX_PENDING_DURATION","synthetic":true,"types":[]},{"text":"impl Unpin for RAFT_READ_INDEX_PENDING_COUNT","synthetic":true,"types":[]},{"text":"impl Unpin for APPLY_PERF_CONTEXT_TIME_HISTOGRAM","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_PERF_CONTEXT_TIME_HISTOGRAM","synthetic":true,"types":[]},{"text":"impl Unpin for APPLY_PERF_CONTEXT_TIME_HISTOGRAM_STATIC","synthetic":true,"types":[]},{"text":"impl Unpin for STORE_PERF_CONTEXT_TIME_HISTOGRAM_STATIC","synthetic":true,"types":[]},{"text":"impl Unpin for READ_QPS_TOPN","synthetic":true,"types":[]},{"text":"impl Unpin for RAFT_ENTRIES_CACHES_GAUGE","synthetic":true,"types":[]},{"text":"impl Unpin for APPLY_PENDING_BYTES_GAUGE","synthetic":true,"types":[]},{"text":"impl Unpin for APPLY_PENDING_ENTRIES_GAUGE","synthetic":true,"types":[]},{"text":"impl Unpin for COMPACTION_GUARD_ACTION_COUNTER_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for COMPACTION_GUARD_ACTION_COUNTER","synthetic":true,"types":[]},{"text":"impl Unpin for StaleState","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for ProposalQueue&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ProposalContext","synthetic":true,"types":[]},{"text":"impl Unpin for ConsistencyState","synthetic":true,"types":[]},{"text":"impl Unpin for PeerStat","synthetic":true,"types":[]},{"text":"impl Unpin for CheckTickResult","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for ProposedAdminCmd&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for CmdEpochChecker&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;EK, ER&gt; Unpin for Peer&lt;EK, ER&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;EK: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;ER: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for RequestPolicy","synthetic":true,"types":[]},{"text":"impl Unpin for CheckApplyingSnapStatus","synthetic":true,"types":[]},{"text":"impl Unpin for SnapState","synthetic":true,"types":[]},{"text":"impl Unpin for EntryCache","synthetic":true,"types":[]},{"text":"impl Unpin for ApplySnapResult","synthetic":true,"types":[]},{"text":"impl Unpin for InvokeContext","synthetic":true,"types":[]},{"text":"impl&lt;EK, ER&gt; Unpin for PeerStorage&lt;EK, ER&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;EK: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;ER: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for ReadIndexRequest&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for ReadIndexQueue&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ReadIndexContext","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for RegionSnapshot&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for RegionIterator&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as Iterable&gt;::Iterator: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for StoreGroup","synthetic":true,"types":[]},{"text":"impl Unpin for GlobalReplicationState","synthetic":true,"types":[]},{"text":"impl Unpin for BuildStatistics","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for SnapKey","synthetic":true,"types":[]},{"text":"impl Unpin for SnapshotStatistics","synthetic":true,"types":[]},{"text":"impl&lt;EK&gt; Unpin for ApplyOptions&lt;EK&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;EK: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for CfFileForRecving","synthetic":true,"types":[]},{"text":"impl Unpin for CfFile","synthetic":true,"types":[]},{"text":"impl Unpin for MetaFile","synthetic":true,"types":[]},{"text":"impl Unpin for Snap","synthetic":true,"types":[]},{"text":"impl Unpin for ApplyAbortChecker","synthetic":true,"types":[]},{"text":"impl Unpin for SnapEntry","synthetic":true,"types":[]},{"text":"impl Unpin for SnapStats","synthetic":true,"types":[]},{"text":"impl Unpin for SnapManagerCore","synthetic":true,"types":[]},{"text":"impl Unpin for SnapManager","synthetic":true,"types":[]},{"text":"impl Unpin for SnapManagerBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for Task","synthetic":true,"types":[]},{"text":"impl&lt;E, C, S&gt; Unpin for Runner&lt;E, C, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Task","synthetic":true,"types":[]},{"text":"impl&lt;EK, C, S&gt; Unpin for Runner&lt;EK, C, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;EK: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Task","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for Runner&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Task&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;EK, C&gt; Unpin for Runner&lt;EK, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for SnapCounterInner","synthetic":true,"types":[]},{"text":"impl Unpin for SnapCounterDelegator","synthetic":true,"types":[]},{"text":"impl Unpin for SnapCounter2Inner","synthetic":true,"types":[]},{"text":"impl Unpin for SnapCounter2Delegator","synthetic":true,"types":[]},{"text":"impl Unpin for SnapCounter","synthetic":true,"types":[]},{"text":"impl Unpin for CheckSplitCounterInner","synthetic":true,"types":[]},{"text":"impl Unpin for CheckSplitCounterDelegator","synthetic":true,"types":[]},{"text":"impl Unpin for CheckSplitCounter","synthetic":true,"types":[]},{"text":"impl Unpin for SnapHistogramInner","synthetic":true,"types":[]},{"text":"impl Unpin for SnapHistogramDelegator","synthetic":true,"types":[]},{"text":"impl Unpin for SnapHistogram","synthetic":true,"types":[]},{"text":"impl Unpin for ReadRejectCounter","synthetic":true,"types":[]},{"text":"impl Unpin for SnapType","synthetic":true,"types":[]},{"text":"impl Unpin for SnapStatus","synthetic":true,"types":[]},{"text":"impl Unpin for RejectReason","synthetic":true,"types":[]},{"text":"impl Unpin for SNAP_COUNTER_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for SNAP_COUNTER","synthetic":true,"types":[]},{"text":"impl Unpin for CHECK_SPILT_COUNTER_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for CHECK_SPILT_COUNTER","synthetic":true,"types":[]},{"text":"impl Unpin for SNAP_HISTOGRAM_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for SNAP_HISTOGRAM","synthetic":true,"types":[]},{"text":"impl Unpin for CHECK_SPILT_HISTOGRAM","synthetic":true,"types":[]},{"text":"impl Unpin for COMPACT_RANGE_CF","synthetic":true,"types":[]},{"text":"impl Unpin for REGION_HASH_HISTOGRAM","synthetic":true,"types":[]},{"text":"impl Unpin for STALE_PEER_PENDING_DELETE_RANGE_GAUGE","synthetic":true,"types":[]},{"text":"impl Unpin for LOCAL_READ_REJECT_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for LOCAL_READ_REJECT","synthetic":true,"types":[]},{"text":"impl Unpin for LOCAL_READ_EXECUTED_REQUESTS","synthetic":true,"types":[]},{"text":"impl Unpin for LOCAL_READ_EXECUTED_CACHE_REQUESTS","synthetic":true,"types":[]},{"text":"impl Unpin for FlowStatistics","synthetic":true,"types":[]},{"text":"impl Unpin for HeartbeatTask","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for Task&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for StoreStat","synthetic":true,"types":[]},{"text":"impl Unpin for PeerStat","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for StatsMonitor&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;EK, ER, T&gt; Unpin for Runner&lt;EK, ER, T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Task","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl&lt;EK, ER, R&gt; Unpin for Runner&lt;EK, ER, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;EK: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;ER: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ReadDelegate","synthetic":true,"types":[]},{"text":"impl Unpin for TrackVer","synthetic":true,"types":[]},{"text":"impl Unpin for Progress","synthetic":true,"types":[]},{"text":"impl&lt;C, E&gt; Unpin for LocalReader&lt;C, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'r, 'm&gt; Unpin for Inspector&lt;'r, 'm&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ReadMetrics","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Task&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for StalePeerInfo","synthetic":true,"types":[]},{"text":"impl Unpin for PendingDeleteRanges","synthetic":true,"types":[]},{"text":"impl&lt;EK, R&gt; Unpin for SnapContext&lt;EK, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;EK: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;EK, R&gt; Unpin for Runner&lt;EK, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;EK: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;EK as KvEngine&gt;::Snapshot: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for MergedIterator&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Task","synthetic":true,"types":[]},{"text":"impl&lt;E, S&gt; Unpin for Runner&lt;E, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for SplitConfig","synthetic":true,"types":[]},{"text":"impl Unpin for SplitConfigManager","synthetic":true,"types":[]},{"text":"impl Unpin for SplitInfo","synthetic":true,"types":[]},{"text":"impl Unpin for Sample","synthetic":true,"types":[]},{"text":"impl Unpin for RegionInfo","synthetic":true,"types":[]},{"text":"impl Unpin for Recorder","synthetic":true,"types":[]},{"text":"impl Unpin for ReadStats","synthetic":true,"types":[]},{"text":"impl Unpin for AutoSplitController","synthetic":true,"types":[]}];
implementors["rand"] = [{"text":"impl Unpin for Bernoulli","synthetic":true,"types":[]},{"text":"impl Unpin for BernoulliError","synthetic":true,"types":[]},{"text":"impl Unpin for Binomial","synthetic":true,"types":[]},{"text":"impl Unpin for Cauchy","synthetic":true,"types":[]},{"text":"impl Unpin for Dirichlet","synthetic":true,"types":[]},{"text":"impl Unpin for Exp1","synthetic":true,"types":[]},{"text":"impl Unpin for Exp","synthetic":true,"types":[]},{"text":"impl Unpin for Gamma","synthetic":true,"types":[]},{"text":"impl Unpin for ChiSquared","synthetic":true,"types":[]},{"text":"impl Unpin for FisherF","synthetic":true,"types":[]},{"text":"impl Unpin for StudentT","synthetic":true,"types":[]},{"text":"impl Unpin for Beta","synthetic":true,"types":[]},{"text":"impl Unpin for StandardNormal","synthetic":true,"types":[]},{"text":"impl Unpin for Normal","synthetic":true,"types":[]},{"text":"impl Unpin for LogNormal","synthetic":true,"types":[]},{"text":"impl Unpin for Pareto","synthetic":true,"types":[]},{"text":"impl Unpin for Poisson","synthetic":true,"types":[]},{"text":"impl Unpin for Triangular","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; Unpin for Uniform&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;X as SampleUniform&gt;::Sampler: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; Unpin for UniformInt&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; Unpin for UniformFloat&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for UniformDuration","synthetic":true,"types":[]},{"text":"impl Unpin for UnitCircle","synthetic":true,"types":[]},{"text":"impl Unpin for UnitSphereSurface","synthetic":true,"types":[]},{"text":"impl Unpin for Weibull","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Unpin for WeightedIndex&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;W as SampleUniform&gt;::Sampler: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; Unpin for WeightedIndex&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;X as SampleUniform&gt;::Sampler: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for WeightedError","synthetic":true,"types":[]},{"text":"impl Unpin for OpenClosed01","synthetic":true,"types":[]},{"text":"impl Unpin for Open01","synthetic":true,"types":[]},{"text":"impl Unpin for Alphanumeric","synthetic":true,"types":[]},{"text":"impl&lt;D, R, T&gt; Unpin for DistIter&lt;D, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Standard","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for ReadRng&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ReadError","synthetic":true,"types":[]},{"text":"impl&lt;R, Rsdr&gt; Unpin for ReseedingRng&lt;R, Rsdr&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Rsdr: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as BlockRngCore&gt;::Results: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for EntropyRng","synthetic":true,"types":[]},{"text":"impl Unpin for StepRng","synthetic":true,"types":[]},{"text":"impl Unpin for StdRng","synthetic":true,"types":[]},{"text":"impl Unpin for ThreadRng","synthetic":true,"types":[]},{"text":"impl Unpin for IndexVec","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for IndexVecIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for IndexVecIntoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized, T&gt; Unpin for SliceChooseIter&lt;'a, S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["rand_chacha"] = [{"text":"impl Unpin for ChaCha20Core","synthetic":true,"types":[]},{"text":"impl Unpin for ChaCha20Rng","synthetic":true,"types":[]},{"text":"impl Unpin for ChaCha12Core","synthetic":true,"types":[]},{"text":"impl Unpin for ChaCha12Rng","synthetic":true,"types":[]},{"text":"impl Unpin for ChaCha8Core","synthetic":true,"types":[]},{"text":"impl Unpin for ChaCha8Rng","synthetic":true,"types":[]}];
implementors["rand_core"] = [{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl&lt;R:&nbsp;?Sized&gt; Unpin for BlockRng&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as BlockRngCore&gt;::Results: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R:&nbsp;?Sized&gt; Unpin for BlockRng64&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as BlockRngCore&gt;::Results: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for OsRng","synthetic":true,"types":[]}];
implementors["rand_isaac"] = [{"text":"impl Unpin for IsaacRng","synthetic":true,"types":[]},{"text":"impl Unpin for IsaacCore","synthetic":true,"types":[]},{"text":"impl Unpin for Isaac64Rng","synthetic":true,"types":[]},{"text":"impl Unpin for Isaac64Core","synthetic":true,"types":[]}];
implementors["raw_cpuid"] = [{"text":"impl Unpin for CpuId","synthetic":true,"types":[]},{"text":"impl Unpin for CpuIdResult","synthetic":true,"types":[]},{"text":"impl Unpin for VendorInfo","synthetic":true,"types":[]},{"text":"impl Unpin for CacheInfoIter","synthetic":true,"types":[]},{"text":"impl Unpin for CacheInfoType","synthetic":true,"types":[]},{"text":"impl Unpin for CacheInfo","synthetic":true,"types":[]},{"text":"impl Unpin for ProcessorSerial","synthetic":true,"types":[]},{"text":"impl Unpin for FeatureInfo","synthetic":true,"types":[]},{"text":"impl Unpin for CacheParametersIter","synthetic":true,"types":[]},{"text":"impl Unpin for CacheParameter","synthetic":true,"types":[]},{"text":"impl Unpin for CacheType","synthetic":true,"types":[]},{"text":"impl Unpin for MonitorMwaitInfo","synthetic":true,"types":[]},{"text":"impl Unpin for ThermalPowerInfo","synthetic":true,"types":[]},{"text":"impl Unpin for ExtendedFeatures","synthetic":true,"types":[]},{"text":"impl Unpin for DirectCacheAccessInfo","synthetic":true,"types":[]},{"text":"impl Unpin for PerformanceMonitoringInfo","synthetic":true,"types":[]},{"text":"impl Unpin for ExtendedTopologyIter","synthetic":true,"types":[]},{"text":"impl Unpin for ExtendedTopologyLevel","synthetic":true,"types":[]},{"text":"impl Unpin for TopologyType","synthetic":true,"types":[]},{"text":"impl Unpin for ExtendedStateInfo","synthetic":true,"types":[]},{"text":"impl Unpin for ExtendedStateIter","synthetic":true,"types":[]},{"text":"impl Unpin for ExtendedState","synthetic":true,"types":[]},{"text":"impl Unpin for RdtMonitoringInfo","synthetic":true,"types":[]},{"text":"impl Unpin for L3MonitoringInfo","synthetic":true,"types":[]},{"text":"impl Unpin for RdtAllocationInfo","synthetic":true,"types":[]},{"text":"impl Unpin for L3CatInfo","synthetic":true,"types":[]},{"text":"impl Unpin for L2CatInfo","synthetic":true,"types":[]},{"text":"impl Unpin for MemBwAllocationInfo","synthetic":true,"types":[]},{"text":"impl Unpin for SgxInfo","synthetic":true,"types":[]},{"text":"impl Unpin for SgxSectionIter","synthetic":true,"types":[]},{"text":"impl Unpin for SgxSectionInfo","synthetic":true,"types":[]},{"text":"impl Unpin for EpcSection","synthetic":true,"types":[]},{"text":"impl Unpin for ProcessorTraceInfo","synthetic":true,"types":[]},{"text":"impl Unpin for TscInfo","synthetic":true,"types":[]},{"text":"impl Unpin for ProcessorFrequencyInfo","synthetic":true,"types":[]},{"text":"impl Unpin for DatIter","synthetic":true,"types":[]},{"text":"impl Unpin for DatInfo","synthetic":true,"types":[]},{"text":"impl Unpin for DatType","synthetic":true,"types":[]},{"text":"impl Unpin for SoCVendorInfo","synthetic":true,"types":[]},{"text":"impl Unpin for SoCVendorAttributesIter","synthetic":true,"types":[]},{"text":"impl Unpin for SoCVendorBrand","synthetic":true,"types":[]},{"text":"impl Unpin for HypervisorInfo","synthetic":true,"types":[]},{"text":"impl Unpin for Hypervisor","synthetic":true,"types":[]},{"text":"impl Unpin for ExtendedFunctionInfo","synthetic":true,"types":[]},{"text":"impl Unpin for L2Associativity","synthetic":true,"types":[]},{"text":"impl Unpin for MemoryEncryptionInfo","synthetic":true,"types":[]}];
implementors["rayon"] = [{"text":"impl&lt;T&gt; Unpin for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Unpin for IntoIter&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Iter&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for IterMut&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Unpin for IntoIter&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Iter&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for IterMut&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Iter&gt; Unpin for IterBridge&lt;Iter&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Iter: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Unpin for Chain&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for Chunks&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for Enumerate&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, P&gt; Unpin for Filter&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, P&gt; Unpin for FilterMap&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; Unpin for FlatMap&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for Flatten&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, ID, F&gt; Unpin for Fold&lt;I, ID, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;ID: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, U, F&gt; Unpin for FoldWith&lt;I, U, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, U, ID, F&gt; Unpin for TryFold&lt;I, U, ID, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;ID: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, U, F&gt; Unpin for TryFoldWith&lt;I, U, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as Try&gt;::Ok: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for Skip&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;D, S&gt; Unpin for Split&lt;D, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for Take&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; Unpin for Map&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, T, F&gt; Unpin for MapWith&lt;I, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, INIT, F&gt; Unpin for MapInit&lt;I, INIT, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;INIT: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Unpin for Zip&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Unpin for ZipEq&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for MultiZip&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J&gt; Unpin for Interleave&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J&gt; Unpin for InterleaveShortest&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for Intersperse&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as ParallelIterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; Unpin for Update&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for Rev&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for MinLen&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for MaxLen&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for Cloned&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for Copied&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; Unpin for Inspect&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for PanicFuse&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for WhileSome&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Repeat&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for RepeatN&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Empty&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Once&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Iter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Iter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, T&gt; Unpin for Iter&lt;'data, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, T&gt; Unpin for Chunks&lt;'data, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, T&gt; Unpin for Windows&lt;'data, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, T&gt; Unpin for IterMut&lt;'data, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, T&gt; Unpin for ChunksMut&lt;'data, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, T, P&gt; Unpin for Split&lt;'data, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, T, P&gt; Unpin for SplitMut&lt;'data, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'ch&gt; Unpin for Chars&lt;'ch&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ch&gt; Unpin for CharIndices&lt;'ch&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ch&gt; Unpin for Bytes&lt;'ch&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ch&gt; Unpin for EncodeUtf16&lt;'ch&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ch, P&gt; Unpin for Split&lt;'ch, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'ch, P&gt; Unpin for SplitTerminator&lt;'ch, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'ch&gt; Unpin for Lines&lt;'ch&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ch&gt; Unpin for SplitWhitespace&lt;'ch&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ch, P&gt; Unpin for Matches&lt;'ch, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'ch, P&gt; Unpin for MatchIndices&lt;'ch, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["rayon_core"] = [{"text":"impl Unpin for ThreadBuilder","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Unpin for Scope&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Unpin for ScopeFifo&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ThreadPool","synthetic":true,"types":[]},{"text":"impl Unpin for ThreadPoolBuildError","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for ThreadPoolBuilder&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Configuration","synthetic":true,"types":[]},{"text":"impl Unpin for FnContext","synthetic":true,"types":[]}];
implementors["regex"] = [{"text":"impl Unpin for RegexBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for RegexSetBuilder","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; Unpin for Match&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Regex","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; Unpin for Matches&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; Unpin for CaptureMatches&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; Unpin for Split&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; Unpin for SplitN&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r&gt; Unpin for CaptureNames&lt;'r&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for CaptureLocations","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; Unpin for Captures&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, 't&gt; Unpin for SubCaptureMatches&lt;'c, 't&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'t: 'c,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Unpin for ReplacerRef&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; Unpin for NoExpand&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for RegexSet","synthetic":true,"types":[]},{"text":"impl Unpin for SetMatches","synthetic":true,"types":[]},{"text":"impl Unpin for SetMatchesIntoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SetMatchesIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for RegexBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for RegexSetBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for RegexSet","synthetic":true,"types":[]},{"text":"impl Unpin for SetMatches","synthetic":true,"types":[]},{"text":"impl Unpin for SetMatchesIntoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SetMatchesIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; Unpin for Match&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Regex","synthetic":true,"types":[]},{"text":"impl&lt;'r&gt; Unpin for CaptureNames&lt;'r&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; Unpin for Split&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; Unpin for SplitN&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for CaptureLocations","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; Unpin for Captures&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, 't&gt; Unpin for SubCaptureMatches&lt;'c, 't&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'t: 'c,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; Unpin for CaptureMatches&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; Unpin for Matches&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Unpin for ReplacerRef&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; Unpin for NoExpand&lt;'t&gt;","synthetic":true,"types":[]}];
implementors["regex_automata"] = [{"text":"impl&lt;T, S&gt; Unpin for DenseDFA&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; Unpin for Standard&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; Unpin for ByteClass&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; Unpin for Premultiplied&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; Unpin for PremultipliedByteClass&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; Unpin for Regex&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; Unpin for SparseDFA&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; Unpin for Standard&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; Unpin for ByteClass&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["regex_syntax"] = [{"text":"impl Unpin for ParserBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for Parser","synthetic":true,"types":[]},{"text":"impl Unpin for Printer","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for ErrorKind","synthetic":true,"types":[]},{"text":"impl Unpin for Span","synthetic":true,"types":[]},{"text":"impl Unpin for Position","synthetic":true,"types":[]},{"text":"impl Unpin for WithComments","synthetic":true,"types":[]},{"text":"impl Unpin for Comment","synthetic":true,"types":[]},{"text":"impl Unpin for Ast","synthetic":true,"types":[]},{"text":"impl Unpin for Alternation","synthetic":true,"types":[]},{"text":"impl Unpin for Concat","synthetic":true,"types":[]},{"text":"impl Unpin for Literal","synthetic":true,"types":[]},{"text":"impl Unpin for LiteralKind","synthetic":true,"types":[]},{"text":"impl Unpin for SpecialLiteralKind","synthetic":true,"types":[]},{"text":"impl Unpin for HexLiteralKind","synthetic":true,"types":[]},{"text":"impl Unpin for Class","synthetic":true,"types":[]},{"text":"impl Unpin for ClassPerl","synthetic":true,"types":[]},{"text":"impl Unpin for ClassPerlKind","synthetic":true,"types":[]},{"text":"impl Unpin for ClassAscii","synthetic":true,"types":[]},{"text":"impl Unpin for ClassAsciiKind","synthetic":true,"types":[]},{"text":"impl Unpin for ClassUnicode","synthetic":true,"types":[]},{"text":"impl Unpin for ClassUnicodeKind","synthetic":true,"types":[]},{"text":"impl Unpin for ClassUnicodeOpKind","synthetic":true,"types":[]},{"text":"impl Unpin for ClassBracketed","synthetic":true,"types":[]},{"text":"impl Unpin for ClassSet","synthetic":true,"types":[]},{"text":"impl Unpin for ClassSetItem","synthetic":true,"types":[]},{"text":"impl Unpin for ClassSetRange","synthetic":true,"types":[]},{"text":"impl Unpin for ClassSetUnion","synthetic":true,"types":[]},{"text":"impl Unpin for ClassSetBinaryOp","synthetic":true,"types":[]},{"text":"impl Unpin for ClassSetBinaryOpKind","synthetic":true,"types":[]},{"text":"impl Unpin for Assertion","synthetic":true,"types":[]},{"text":"impl Unpin for AssertionKind","synthetic":true,"types":[]},{"text":"impl Unpin for Repetition","synthetic":true,"types":[]},{"text":"impl Unpin for RepetitionOp","synthetic":true,"types":[]},{"text":"impl Unpin for RepetitionKind","synthetic":true,"types":[]},{"text":"impl Unpin for RepetitionRange","synthetic":true,"types":[]},{"text":"impl Unpin for Group","synthetic":true,"types":[]},{"text":"impl Unpin for GroupKind","synthetic":true,"types":[]},{"text":"impl Unpin for CaptureName","synthetic":true,"types":[]},{"text":"impl Unpin for SetFlags","synthetic":true,"types":[]},{"text":"impl Unpin for Flags","synthetic":true,"types":[]},{"text":"impl Unpin for FlagsItem","synthetic":true,"types":[]},{"text":"impl Unpin for FlagsItemKind","synthetic":true,"types":[]},{"text":"impl Unpin for Flag","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Literals","synthetic":true,"types":[]},{"text":"impl Unpin for Literal","synthetic":true,"types":[]},{"text":"impl Unpin for Printer","synthetic":true,"types":[]},{"text":"impl Unpin for TranslatorBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for Translator","synthetic":true,"types":[]},{"text":"impl Unpin for CaseFoldError","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for ErrorKind","synthetic":true,"types":[]},{"text":"impl Unpin for Hir","synthetic":true,"types":[]},{"text":"impl Unpin for HirKind","synthetic":true,"types":[]},{"text":"impl Unpin for Literal","synthetic":true,"types":[]},{"text":"impl Unpin for Class","synthetic":true,"types":[]},{"text":"impl Unpin for ClassUnicode","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ClassUnicodeIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ClassUnicodeRange","synthetic":true,"types":[]},{"text":"impl Unpin for ClassBytes","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ClassBytesIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ClassBytesRange","synthetic":true,"types":[]},{"text":"impl Unpin for Anchor","synthetic":true,"types":[]},{"text":"impl Unpin for WordBoundary","synthetic":true,"types":[]},{"text":"impl Unpin for Group","synthetic":true,"types":[]},{"text":"impl Unpin for GroupKind","synthetic":true,"types":[]},{"text":"impl Unpin for Repetition","synthetic":true,"types":[]},{"text":"impl Unpin for RepetitionKind","synthetic":true,"types":[]},{"text":"impl Unpin for RepetitionRange","synthetic":true,"types":[]},{"text":"impl Unpin for ParserBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for Parser","synthetic":true,"types":[]},{"text":"impl Unpin for UnicodeWordError","synthetic":true,"types":[]},{"text":"impl Unpin for Utf8Sequence","synthetic":true,"types":[]},{"text":"impl Unpin for Utf8Range","synthetic":true,"types":[]},{"text":"impl Unpin for Utf8Sequences","synthetic":true,"types":[]}];
implementors["reqwest"] = [{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Form","synthetic":true,"types":[]},{"text":"impl Unpin for Part","synthetic":true,"types":[]},{"text":"impl Unpin for Body","synthetic":true,"types":[]},{"text":"impl Unpin for Client","synthetic":true,"types":[]},{"text":"impl Unpin for ClientBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for RequestBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for Response","synthetic":true,"types":[]},{"text":"impl Unpin for Body","synthetic":true,"types":[]},{"text":"impl Unpin for Client","synthetic":true,"types":[]},{"text":"impl Unpin for ClientBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for Form","synthetic":true,"types":[]},{"text":"impl Unpin for Part","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for RequestBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for Response","synthetic":true,"types":[]},{"text":"impl Unpin for Proxy","synthetic":true,"types":[]},{"text":"impl Unpin for Policy","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Attempt&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Action","synthetic":true,"types":[]},{"text":"impl Unpin for Certificate","synthetic":true,"types":[]},{"text":"impl Unpin for Identity","synthetic":true,"types":[]}];
implementors["resolved_ts"] = [{"text":"impl Unpin for Resolver","synthetic":true,"types":[]}];
implementors["rev_lines"] = [{"text":"impl&lt;R&gt; Unpin for RevLines&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["rgb"] = [{"text":"impl&lt;ComponentType&gt; Unpin for BGR&lt;ComponentType&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ComponentType: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;ComponentType, AlphaComponentType&gt; Unpin for BGRA&lt;ComponentType, AlphaComponentType&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;AlphaComponentType: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;ComponentType: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;ComponentType&gt; Unpin for Gray&lt;ComponentType&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ComponentType: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;ComponentType, AlphaComponentType&gt; Unpin for GrayAlpha&lt;ComponentType, AlphaComponentType&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;AlphaComponentType: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;ComponentType: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;ComponentType&gt; Unpin for RGB&lt;ComponentType&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ComponentType: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;ComponentType, AlphaComponentType&gt; Unpin for RGBA&lt;ComponentType, AlphaComponentType&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;AlphaComponentType: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;ComponentType: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["ring"] = [{"text":"impl Unpin for TestCase","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for File&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for SealingKey","synthetic":true,"types":[]},{"text":"impl Unpin for OpeningKey","synthetic":true,"types":[]},{"text":"impl Unpin for Nonce","synthetic":true,"types":[]},{"text":"impl Unpin for HeaderProtectionKey","synthetic":true,"types":[]},{"text":"impl Unpin for Algorithm","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for OpeningKey&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for SealingKey&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for Aad&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for UnboundKey","synthetic":true,"types":[]},{"text":"impl Unpin for LessSafeKey","synthetic":true,"types":[]},{"text":"impl Unpin for Algorithm","synthetic":true,"types":[]},{"text":"impl Unpin for Tag","synthetic":true,"types":[]},{"text":"impl Unpin for Algorithm","synthetic":true,"types":[]},{"text":"impl Unpin for EphemeralPrivateKey","synthetic":true,"types":[]},{"text":"impl Unpin for PublicKey","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for UnparsedPublicKey&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Positive&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Context","synthetic":true,"types":[]},{"text":"impl Unpin for Digest","synthetic":true,"types":[]},{"text":"impl Unpin for Algorithm","synthetic":true,"types":[]},{"text":"impl Unpin for Ed25519KeyPair","synthetic":true,"types":[]},{"text":"impl Unpin for EdDSAParameters","synthetic":true,"types":[]},{"text":"impl Unpin for EcdsaSigningAlgorithm","synthetic":true,"types":[]},{"text":"impl Unpin for EcdsaKeyPair","synthetic":true,"types":[]},{"text":"impl Unpin for EcdsaVerificationAlgorithm","synthetic":true,"types":[]},{"text":"impl Unpin for Unspecified","synthetic":true,"types":[]},{"text":"impl Unpin for KeyRejected","synthetic":true,"types":[]},{"text":"impl Unpin for Algorithm","synthetic":true,"types":[]},{"text":"impl Unpin for Salt","synthetic":true,"types":[]},{"text":"impl Unpin for Prk","synthetic":true,"types":[]},{"text":"impl&lt;'a, L&gt; Unpin for Okm&lt;'a, L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Algorithm","synthetic":true,"types":[]},{"text":"impl Unpin for Tag","synthetic":true,"types":[]},{"text":"impl Unpin for Key","synthetic":true,"types":[]},{"text":"impl Unpin for Context","synthetic":true,"types":[]},{"text":"impl Unpin for Algorithm","synthetic":true,"types":[]},{"text":"impl Unpin for Document","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Random&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for SystemRandom","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for RsaPublicKeyComponents&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for RsaKeyPair","synthetic":true,"types":[]},{"text":"impl Unpin for RsaSubjectPublicKey","synthetic":true,"types":[]},{"text":"impl Unpin for RsaParameters","synthetic":true,"types":[]},{"text":"impl Unpin for Signature","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for UnparsedPublicKey&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["rocksdb"] = [{"text":"impl Unpin for CompactionFilterDecision","synthetic":true,"types":[]},{"text":"impl Unpin for CompactionFilterHandle","synthetic":true,"types":[]},{"text":"impl Unpin for CompactionFilterContext","synthetic":true,"types":[]},{"text":"impl Unpin for CompactionFilterFactoryHandle","synthetic":true,"types":[]},{"text":"impl Unpin for ComparatorCallback","synthetic":true,"types":[]},{"text":"impl Unpin for FileEncryptionInfo","synthetic":true,"types":[]},{"text":"impl Unpin for FlushJobInfo","synthetic":true,"types":[]},{"text":"impl Unpin for CompactionJobInfo","synthetic":true,"types":[]},{"text":"impl Unpin for SubcompactionJobInfo","synthetic":true,"types":[]},{"text":"impl Unpin for IngestionInfo","synthetic":true,"types":[]},{"text":"impl Unpin for WriteStallInfo","synthetic":true,"types":[]},{"text":"impl Unpin for MergeOperatorCallback","synthetic":true,"types":[]},{"text":"impl Unpin for MergeOperands","synthetic":true,"types":[]},{"text":"impl Unpin for ColumnFamilyMetaData","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for LevelMetaData&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SstFileMetaData&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for PerfLevel","synthetic":true,"types":[]},{"text":"impl Unpin for PerfContext","synthetic":true,"types":[]},{"text":"impl Unpin for IOStatsContext","synthetic":true,"types":[]},{"text":"impl Unpin for CFHandle","synthetic":true,"types":[]},{"text":"impl Unpin for MapProperty","synthetic":true,"types":[]},{"text":"impl Unpin for DB","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; Unpin for Snapshot&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; Unpin for DBIterator&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SeekKey&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Range&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for KeyVersion","synthetic":true,"types":[]},{"text":"impl Unpin for DBVector","synthetic":true,"types":[]},{"text":"impl Unpin for BackupEngine","synthetic":true,"types":[]},{"text":"impl Unpin for SstFileReader","synthetic":true,"types":[]},{"text":"impl Unpin for SstFileWriter","synthetic":true,"types":[]},{"text":"impl Unpin for ExternalSstFileInfo","synthetic":true,"types":[]},{"text":"impl Unpin for Env","synthetic":true,"types":[]},{"text":"impl Unpin for SequentialFile","synthetic":true,"types":[]},{"text":"impl Unpin for Cache","synthetic":true,"types":[]},{"text":"impl Unpin for MemoryAllocator","synthetic":true,"types":[]},{"text":"impl Unpin for HistogramData","synthetic":true,"types":[]},{"text":"impl Unpin for BlockBasedOptions","synthetic":true,"types":[]},{"text":"impl Unpin for RateLimiter","synthetic":true,"types":[]},{"text":"impl Unpin for UnsafeSnap","synthetic":true,"types":[]},{"text":"impl Unpin for ReadOptions","synthetic":true,"types":[]},{"text":"impl Unpin for WriteOptions","synthetic":true,"types":[]},{"text":"impl Unpin for CompactOptions","synthetic":true,"types":[]},{"text":"impl Unpin for CompactionOptions","synthetic":true,"types":[]},{"text":"impl Unpin for DBOptions","synthetic":true,"types":[]},{"text":"impl Unpin for ColumnFamilyOptions","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ColumnFamilyDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for CColumnFamilyDescriptor","synthetic":true,"types":[]},{"text":"impl Unpin for FlushOptions","synthetic":true,"types":[]},{"text":"impl Unpin for IngestExternalFileOptions","synthetic":true,"types":[]},{"text":"impl Unpin for EnvOptions","synthetic":true,"types":[]},{"text":"impl Unpin for RestoreOptions","synthetic":true,"types":[]},{"text":"impl Unpin for FifoCompactionOptions","synthetic":true,"types":[]},{"text":"impl Unpin for LRUCacheOptions","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SstPartitionerRequest&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SstPartitionerContext&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for TablePropertiesCollectionView","synthetic":true,"types":[]},{"text":"impl Unpin for TablePropertiesCollection","synthetic":true,"types":[]},{"text":"impl Unpin for TableProperties","synthetic":true,"types":[]},{"text":"impl Unpin for UserCollectedProperties","synthetic":true,"types":[]},{"text":"impl Unpin for TablePropertiesCollection","synthetic":true,"types":[]},{"text":"impl Unpin for TablePropertiesCollectionIter","synthetic":true,"types":[]},{"text":"impl Unpin for TablePropertiesKey","synthetic":true,"types":[]},{"text":"impl Unpin for TableProperties","synthetic":true,"types":[]},{"text":"impl Unpin for UserCollectedProperties","synthetic":true,"types":[]},{"text":"impl Unpin for TitanDBOptions","synthetic":true,"types":[]},{"text":"impl Unpin for TitanBlobIndex","synthetic":true,"types":[]},{"text":"impl Unpin for WriteBatch","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for WriteBatchIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for WriteBatchRef&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["rusoto_core"] = [{"text":"impl&lt;E&gt; Unpin for RusotoError&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for EventStream&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for HttpResponse","synthetic":true,"types":[]},{"text":"impl Unpin for BufferedHttpResponse","synthetic":true,"types":[]},{"text":"impl Unpin for HttpDispatchError","synthetic":true,"types":[]},{"text":"impl&lt;C&gt; Unpin for HttpClient&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for HttpConfig","synthetic":true,"types":[]},{"text":"impl Unpin for TlsError","synthetic":true,"types":[]}];
implementors["rusoto_credential"] = [{"text":"impl Unpin for ContainerProvider","synthetic":true,"types":[]},{"text":"impl Unpin for EnvironmentProvider","synthetic":true,"types":[]},{"text":"impl Unpin for InstanceMetadataProvider","synthetic":true,"types":[]},{"text":"impl Unpin for ProfileProvider","synthetic":true,"types":[]},{"text":"impl Unpin for Secret","synthetic":true,"types":[]},{"text":"impl Unpin for StaticProvider","synthetic":true,"types":[]},{"text":"impl&lt;T, E&gt; Unpin for Variable&lt;T, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for AwsCredentials","synthetic":true,"types":[]},{"text":"impl Unpin for CredentialsError","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; Unpin for AutoRefreshingProvider&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for DefaultCredentialsProvider","synthetic":true,"types":[]},{"text":"impl Unpin for ChainProvider","synthetic":true,"types":[]}];
implementors["rusoto_kms"] = [{"text":"impl Unpin for AliasListEntry","synthetic":true,"types":[]},{"text":"impl Unpin for CancelKeyDeletionRequest","synthetic":true,"types":[]},{"text":"impl Unpin for CancelKeyDeletionResponse","synthetic":true,"types":[]},{"text":"impl Unpin for ConnectCustomKeyStoreRequest","synthetic":true,"types":[]},{"text":"impl Unpin for ConnectCustomKeyStoreResponse","synthetic":true,"types":[]},{"text":"impl Unpin for CreateAliasRequest","synthetic":true,"types":[]},{"text":"impl Unpin for CreateCustomKeyStoreRequest","synthetic":true,"types":[]},{"text":"impl Unpin for CreateCustomKeyStoreResponse","synthetic":true,"types":[]},{"text":"impl Unpin for CreateGrantRequest","synthetic":true,"types":[]},{"text":"impl Unpin for CreateGrantResponse","synthetic":true,"types":[]},{"text":"impl Unpin for CreateKeyRequest","synthetic":true,"types":[]},{"text":"impl Unpin for CreateKeyResponse","synthetic":true,"types":[]},{"text":"impl Unpin for CustomKeyStoresListEntry","synthetic":true,"types":[]},{"text":"impl Unpin for DecryptRequest","synthetic":true,"types":[]},{"text":"impl Unpin for DecryptResponse","synthetic":true,"types":[]},{"text":"impl Unpin for DeleteAliasRequest","synthetic":true,"types":[]},{"text":"impl Unpin for DeleteCustomKeyStoreRequest","synthetic":true,"types":[]},{"text":"impl Unpin for DeleteCustomKeyStoreResponse","synthetic":true,"types":[]},{"text":"impl Unpin for DeleteImportedKeyMaterialRequest","synthetic":true,"types":[]},{"text":"impl Unpin for DescribeCustomKeyStoresRequest","synthetic":true,"types":[]},{"text":"impl Unpin for DescribeCustomKeyStoresResponse","synthetic":true,"types":[]},{"text":"impl Unpin for DescribeKeyRequest","synthetic":true,"types":[]},{"text":"impl Unpin for DescribeKeyResponse","synthetic":true,"types":[]},{"text":"impl Unpin for DisableKeyRequest","synthetic":true,"types":[]},{"text":"impl Unpin for DisableKeyRotationRequest","synthetic":true,"types":[]},{"text":"impl Unpin for DisconnectCustomKeyStoreRequest","synthetic":true,"types":[]},{"text":"impl Unpin for DisconnectCustomKeyStoreResponse","synthetic":true,"types":[]},{"text":"impl Unpin for EnableKeyRequest","synthetic":true,"types":[]},{"text":"impl Unpin for EnableKeyRotationRequest","synthetic":true,"types":[]},{"text":"impl Unpin for EncryptRequest","synthetic":true,"types":[]},{"text":"impl Unpin for EncryptResponse","synthetic":true,"types":[]},{"text":"impl Unpin for GenerateDataKeyPairRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GenerateDataKeyPairResponse","synthetic":true,"types":[]},{"text":"impl Unpin for GenerateDataKeyPairWithoutPlaintextRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GenerateDataKeyPairWithoutPlaintextResponse","synthetic":true,"types":[]},{"text":"impl Unpin for GenerateDataKeyRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GenerateDataKeyResponse","synthetic":true,"types":[]},{"text":"impl Unpin for GenerateDataKeyWithoutPlaintextRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GenerateDataKeyWithoutPlaintextResponse","synthetic":true,"types":[]},{"text":"impl Unpin for GenerateRandomRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GenerateRandomResponse","synthetic":true,"types":[]},{"text":"impl Unpin for GetKeyPolicyRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GetKeyPolicyResponse","synthetic":true,"types":[]},{"text":"impl Unpin for GetKeyRotationStatusRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GetKeyRotationStatusResponse","synthetic":true,"types":[]},{"text":"impl Unpin for GetParametersForImportRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GetParametersForImportResponse","synthetic":true,"types":[]},{"text":"impl Unpin for GetPublicKeyRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GetPublicKeyResponse","synthetic":true,"types":[]},{"text":"impl Unpin for GrantConstraints","synthetic":true,"types":[]},{"text":"impl Unpin for GrantListEntry","synthetic":true,"types":[]},{"text":"impl Unpin for ImportKeyMaterialRequest","synthetic":true,"types":[]},{"text":"impl Unpin for ImportKeyMaterialResponse","synthetic":true,"types":[]},{"text":"impl Unpin for KeyListEntry","synthetic":true,"types":[]},{"text":"impl Unpin for KeyMetadata","synthetic":true,"types":[]},{"text":"impl Unpin for ListAliasesRequest","synthetic":true,"types":[]},{"text":"impl Unpin for ListAliasesResponse","synthetic":true,"types":[]},{"text":"impl Unpin for ListGrantsRequest","synthetic":true,"types":[]},{"text":"impl Unpin for ListGrantsResponse","synthetic":true,"types":[]},{"text":"impl Unpin for ListKeyPoliciesRequest","synthetic":true,"types":[]},{"text":"impl Unpin for ListKeyPoliciesResponse","synthetic":true,"types":[]},{"text":"impl Unpin for ListKeysRequest","synthetic":true,"types":[]},{"text":"impl Unpin for ListKeysResponse","synthetic":true,"types":[]},{"text":"impl Unpin for ListResourceTagsRequest","synthetic":true,"types":[]},{"text":"impl Unpin for ListResourceTagsResponse","synthetic":true,"types":[]},{"text":"impl Unpin for ListRetirableGrantsRequest","synthetic":true,"types":[]},{"text":"impl Unpin for PutKeyPolicyRequest","synthetic":true,"types":[]},{"text":"impl Unpin for ReEncryptRequest","synthetic":true,"types":[]},{"text":"impl Unpin for ReEncryptResponse","synthetic":true,"types":[]},{"text":"impl Unpin for RetireGrantRequest","synthetic":true,"types":[]},{"text":"impl Unpin for RevokeGrantRequest","synthetic":true,"types":[]},{"text":"impl Unpin for ScheduleKeyDeletionRequest","synthetic":true,"types":[]},{"text":"impl Unpin for ScheduleKeyDeletionResponse","synthetic":true,"types":[]},{"text":"impl Unpin for SignRequest","synthetic":true,"types":[]},{"text":"impl Unpin for SignResponse","synthetic":true,"types":[]},{"text":"impl Unpin for Tag","synthetic":true,"types":[]},{"text":"impl Unpin for TagResourceRequest","synthetic":true,"types":[]},{"text":"impl Unpin for UntagResourceRequest","synthetic":true,"types":[]},{"text":"impl Unpin for UpdateAliasRequest","synthetic":true,"types":[]},{"text":"impl Unpin for UpdateCustomKeyStoreRequest","synthetic":true,"types":[]},{"text":"impl Unpin for UpdateCustomKeyStoreResponse","synthetic":true,"types":[]},{"text":"impl Unpin for UpdateKeyDescriptionRequest","synthetic":true,"types":[]},{"text":"impl Unpin for VerifyRequest","synthetic":true,"types":[]},{"text":"impl Unpin for VerifyResponse","synthetic":true,"types":[]},{"text":"impl Unpin for CancelKeyDeletionError","synthetic":true,"types":[]},{"text":"impl Unpin for ConnectCustomKeyStoreError","synthetic":true,"types":[]},{"text":"impl Unpin for CreateAliasError","synthetic":true,"types":[]},{"text":"impl Unpin for CreateCustomKeyStoreError","synthetic":true,"types":[]},{"text":"impl Unpin for CreateGrantError","synthetic":true,"types":[]},{"text":"impl Unpin for CreateKeyError","synthetic":true,"types":[]},{"text":"impl Unpin for DecryptError","synthetic":true,"types":[]},{"text":"impl Unpin for DeleteAliasError","synthetic":true,"types":[]},{"text":"impl Unpin for DeleteCustomKeyStoreError","synthetic":true,"types":[]},{"text":"impl Unpin for DeleteImportedKeyMaterialError","synthetic":true,"types":[]},{"text":"impl Unpin for DescribeCustomKeyStoresError","synthetic":true,"types":[]},{"text":"impl Unpin for DescribeKeyError","synthetic":true,"types":[]},{"text":"impl Unpin for DisableKeyError","synthetic":true,"types":[]},{"text":"impl Unpin for DisableKeyRotationError","synthetic":true,"types":[]},{"text":"impl Unpin for DisconnectCustomKeyStoreError","synthetic":true,"types":[]},{"text":"impl Unpin for EnableKeyError","synthetic":true,"types":[]},{"text":"impl Unpin for EnableKeyRotationError","synthetic":true,"types":[]},{"text":"impl Unpin for EncryptError","synthetic":true,"types":[]},{"text":"impl Unpin for GenerateDataKeyError","synthetic":true,"types":[]},{"text":"impl Unpin for GenerateDataKeyPairError","synthetic":true,"types":[]},{"text":"impl Unpin for GenerateDataKeyPairWithoutPlaintextError","synthetic":true,"types":[]},{"text":"impl Unpin for GenerateDataKeyWithoutPlaintextError","synthetic":true,"types":[]},{"text":"impl Unpin for GenerateRandomError","synthetic":true,"types":[]},{"text":"impl Unpin for GetKeyPolicyError","synthetic":true,"types":[]},{"text":"impl Unpin for GetKeyRotationStatusError","synthetic":true,"types":[]},{"text":"impl Unpin for GetParametersForImportError","synthetic":true,"types":[]},{"text":"impl Unpin for GetPublicKeyError","synthetic":true,"types":[]},{"text":"impl Unpin for ImportKeyMaterialError","synthetic":true,"types":[]},{"text":"impl Unpin for ListAliasesError","synthetic":true,"types":[]},{"text":"impl Unpin for ListGrantsError","synthetic":true,"types":[]},{"text":"impl Unpin for ListKeyPoliciesError","synthetic":true,"types":[]},{"text":"impl Unpin for ListKeysError","synthetic":true,"types":[]},{"text":"impl Unpin for ListResourceTagsError","synthetic":true,"types":[]},{"text":"impl Unpin for ListRetirableGrantsError","synthetic":true,"types":[]},{"text":"impl Unpin for PutKeyPolicyError","synthetic":true,"types":[]},{"text":"impl Unpin for ReEncryptError","synthetic":true,"types":[]},{"text":"impl Unpin for RetireGrantError","synthetic":true,"types":[]},{"text":"impl Unpin for RevokeGrantError","synthetic":true,"types":[]},{"text":"impl Unpin for ScheduleKeyDeletionError","synthetic":true,"types":[]},{"text":"impl Unpin for SignError","synthetic":true,"types":[]},{"text":"impl Unpin for TagResourceError","synthetic":true,"types":[]},{"text":"impl Unpin for UntagResourceError","synthetic":true,"types":[]},{"text":"impl Unpin for UpdateAliasError","synthetic":true,"types":[]},{"text":"impl Unpin for UpdateCustomKeyStoreError","synthetic":true,"types":[]},{"text":"impl Unpin for UpdateKeyDescriptionError","synthetic":true,"types":[]},{"text":"impl Unpin for VerifyError","synthetic":true,"types":[]},{"text":"impl Unpin for KmsClient","synthetic":true,"types":[]}];
implementors["rusoto_s3"] = [{"text":"impl Unpin for PreSignedRequestOption","synthetic":true,"types":[]},{"text":"impl Unpin for AbortIncompleteMultipartUpload","synthetic":true,"types":[]},{"text":"impl Unpin for AbortIncompleteMultipartUploadSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for AbortMultipartUploadOutput","synthetic":true,"types":[]},{"text":"impl Unpin for AbortMultipartUploadRequest","synthetic":true,"types":[]},{"text":"impl Unpin for AccelerateConfiguration","synthetic":true,"types":[]},{"text":"impl Unpin for AccelerateConfigurationSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for AccessControlPolicy","synthetic":true,"types":[]},{"text":"impl Unpin for AccessControlPolicySerializer","synthetic":true,"types":[]},{"text":"impl Unpin for AccessControlTranslation","synthetic":true,"types":[]},{"text":"impl Unpin for AccessControlTranslationSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for AccountIdSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for AllowQuotedRecordDelimiterSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for AllowedHeaderSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for AllowedHeadersSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for AllowedMethodSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for AllowedMethodsSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for AllowedOriginSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for AllowedOriginsSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for AnalyticsAndOperator","synthetic":true,"types":[]},{"text":"impl Unpin for AnalyticsAndOperatorSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for AnalyticsConfiguration","synthetic":true,"types":[]},{"text":"impl Unpin for AnalyticsConfigurationSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for AnalyticsExportDestination","synthetic":true,"types":[]},{"text":"impl Unpin for AnalyticsExportDestinationSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for AnalyticsFilter","synthetic":true,"types":[]},{"text":"impl Unpin for AnalyticsFilterSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for AnalyticsIdSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for AnalyticsS3BucketDestination","synthetic":true,"types":[]},{"text":"impl Unpin for AnalyticsS3BucketDestinationSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for AnalyticsS3ExportFileFormatSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for BodySerializer","synthetic":true,"types":[]},{"text":"impl Unpin for Bucket","synthetic":true,"types":[]},{"text":"impl Unpin for BucketAccelerateStatusSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for BucketLifecycleConfiguration","synthetic":true,"types":[]},{"text":"impl Unpin for BucketLifecycleConfigurationSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for BucketLocationConstraintSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for BucketLoggingStatus","synthetic":true,"types":[]},{"text":"impl Unpin for BucketLoggingStatusSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for BucketLogsPermissionSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for BucketNameSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for BucketVersioningStatusSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for CORSConfiguration","synthetic":true,"types":[]},{"text":"impl Unpin for CORSConfigurationSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for CORSRule","synthetic":true,"types":[]},{"text":"impl Unpin for CORSRuleSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for CORSRulesSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for CSVInput","synthetic":true,"types":[]},{"text":"impl Unpin for CSVInputSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for CSVOutput","synthetic":true,"types":[]},{"text":"impl Unpin for CSVOutputSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for CloudFunctionSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for CloudFunctionConfiguration","synthetic":true,"types":[]},{"text":"impl Unpin for CloudFunctionConfigurationSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for CloudFunctionInvocationRoleSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for CommentsSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for CommonPrefix","synthetic":true,"types":[]},{"text":"impl Unpin for CompleteMultipartUploadOutput","synthetic":true,"types":[]},{"text":"impl Unpin for CompleteMultipartUploadRequest","synthetic":true,"types":[]},{"text":"impl Unpin for CompletedMultipartUpload","synthetic":true,"types":[]},{"text":"impl Unpin for CompletedMultipartUploadSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for CompletedPart","synthetic":true,"types":[]},{"text":"impl Unpin for CompletedPartSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for CompletedPartListSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for CompressionTypeSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for Condition","synthetic":true,"types":[]},{"text":"impl Unpin for ConditionSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for ContinuationEvent","synthetic":true,"types":[]},{"text":"impl Unpin for CopyObjectOutput","synthetic":true,"types":[]},{"text":"impl Unpin for CopyObjectRequest","synthetic":true,"types":[]},{"text":"impl Unpin for CopyObjectResult","synthetic":true,"types":[]},{"text":"impl Unpin for CopyPartResult","synthetic":true,"types":[]},{"text":"impl Unpin for CreateBucketConfiguration","synthetic":true,"types":[]},{"text":"impl Unpin for CreateBucketConfigurationSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for CreateBucketOutput","synthetic":true,"types":[]},{"text":"impl Unpin for CreateBucketRequest","synthetic":true,"types":[]},{"text":"impl Unpin for CreateMultipartUploadOutput","synthetic":true,"types":[]},{"text":"impl Unpin for CreateMultipartUploadRequest","synthetic":true,"types":[]},{"text":"impl Unpin for DateSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for DaysSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for DaysAfterInitiationSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for DefaultRetention","synthetic":true,"types":[]},{"text":"impl Unpin for DefaultRetentionSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for Delete","synthetic":true,"types":[]},{"text":"impl Unpin for DeleteSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for DeleteBucketAnalyticsConfigurationRequest","synthetic":true,"types":[]},{"text":"impl Unpin for DeleteBucketCorsRequest","synthetic":true,"types":[]},{"text":"impl Unpin for DeleteBucketEncryptionRequest","synthetic":true,"types":[]},{"text":"impl Unpin for DeleteBucketInventoryConfigurationRequest","synthetic":true,"types":[]},{"text":"impl Unpin for DeleteBucketLifecycleRequest","synthetic":true,"types":[]},{"text":"impl Unpin for DeleteBucketMetricsConfigurationRequest","synthetic":true,"types":[]},{"text":"impl Unpin for DeleteBucketPolicyRequest","synthetic":true,"types":[]},{"text":"impl Unpin for DeleteBucketReplicationRequest","synthetic":true,"types":[]},{"text":"impl Unpin for DeleteBucketRequest","synthetic":true,"types":[]},{"text":"impl Unpin for DeleteBucketTaggingRequest","synthetic":true,"types":[]},{"text":"impl Unpin for DeleteBucketWebsiteRequest","synthetic":true,"types":[]},{"text":"impl Unpin for DeleteMarkerEntry","synthetic":true,"types":[]},{"text":"impl Unpin for DeleteMarkerReplication","synthetic":true,"types":[]},{"text":"impl Unpin for DeleteMarkerReplicationSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for DeleteMarkerReplicationStatusSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for DeleteObjectOutput","synthetic":true,"types":[]},{"text":"impl Unpin for DeleteObjectRequest","synthetic":true,"types":[]},{"text":"impl Unpin for DeleteObjectTaggingOutput","synthetic":true,"types":[]},{"text":"impl Unpin for DeleteObjectTaggingRequest","synthetic":true,"types":[]},{"text":"impl Unpin for DeleteObjectsOutput","synthetic":true,"types":[]},{"text":"impl Unpin for DeleteObjectsRequest","synthetic":true,"types":[]},{"text":"impl Unpin for DeletePublicAccessBlockRequest","synthetic":true,"types":[]},{"text":"impl Unpin for DeletedObject","synthetic":true,"types":[]},{"text":"impl Unpin for DelimiterSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for DescriptionSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for Destination","synthetic":true,"types":[]},{"text":"impl Unpin for DestinationSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for DisplayNameSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for ETagSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for EmailAddressSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for EnableRequestProgressSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for EncodingTypeSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for Encryption","synthetic":true,"types":[]},{"text":"impl Unpin for EncryptionSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for EncryptionConfiguration","synthetic":true,"types":[]},{"text":"impl Unpin for EncryptionConfigurationSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for EndSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for EndEvent","synthetic":true,"types":[]},{"text":"impl Unpin for S3Error","synthetic":true,"types":[]},{"text":"impl Unpin for ErrorDocument","synthetic":true,"types":[]},{"text":"impl Unpin for ErrorDocumentSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for EventSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for EventListSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for ExistingObjectReplication","synthetic":true,"types":[]},{"text":"impl Unpin for ExistingObjectReplicationSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for ExistingObjectReplicationStatusSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for ExpirationStatusSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for ExpiredObjectDeleteMarkerSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for ExposeHeaderSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for ExposeHeadersSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for ExpressionSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for ExpressionTypeSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for FetchOwnerSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for FieldDelimiterSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for FileHeaderInfoSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for FilterRule","synthetic":true,"types":[]},{"text":"impl Unpin for FilterRuleSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for FilterRuleListSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for FilterRuleNameSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for FilterRuleValueSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for GetBucketAccelerateConfigurationOutput","synthetic":true,"types":[]},{"text":"impl Unpin for GetBucketAccelerateConfigurationRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GetBucketAclOutput","synthetic":true,"types":[]},{"text":"impl Unpin for GetBucketAclRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GetBucketAnalyticsConfigurationOutput","synthetic":true,"types":[]},{"text":"impl Unpin for GetBucketAnalyticsConfigurationRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GetBucketCorsOutput","synthetic":true,"types":[]},{"text":"impl Unpin for GetBucketCorsRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GetBucketEncryptionOutput","synthetic":true,"types":[]},{"text":"impl Unpin for GetBucketEncryptionRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GetBucketInventoryConfigurationOutput","synthetic":true,"types":[]},{"text":"impl Unpin for GetBucketInventoryConfigurationRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GetBucketLifecycleConfigurationOutput","synthetic":true,"types":[]},{"text":"impl Unpin for GetBucketLifecycleConfigurationRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GetBucketLifecycleOutput","synthetic":true,"types":[]},{"text":"impl Unpin for GetBucketLifecycleRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GetBucketLocationOutput","synthetic":true,"types":[]},{"text":"impl Unpin for GetBucketLocationRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GetBucketLoggingOutput","synthetic":true,"types":[]},{"text":"impl Unpin for GetBucketLoggingRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GetBucketMetricsConfigurationOutput","synthetic":true,"types":[]},{"text":"impl Unpin for GetBucketMetricsConfigurationRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GetBucketNotificationConfigurationRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GetBucketPolicyOutput","synthetic":true,"types":[]},{"text":"impl Unpin for GetBucketPolicyRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GetBucketPolicyStatusOutput","synthetic":true,"types":[]},{"text":"impl Unpin for GetBucketPolicyStatusRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GetBucketReplicationOutput","synthetic":true,"types":[]},{"text":"impl Unpin for GetBucketReplicationRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GetBucketRequestPaymentOutput","synthetic":true,"types":[]},{"text":"impl Unpin for GetBucketRequestPaymentRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GetBucketTaggingOutput","synthetic":true,"types":[]},{"text":"impl Unpin for GetBucketTaggingRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GetBucketVersioningOutput","synthetic":true,"types":[]},{"text":"impl Unpin for GetBucketVersioningRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GetBucketWebsiteOutput","synthetic":true,"types":[]},{"text":"impl Unpin for GetBucketWebsiteRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GetObjectAclOutput","synthetic":true,"types":[]},{"text":"impl Unpin for GetObjectAclRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GetObjectLegalHoldOutput","synthetic":true,"types":[]},{"text":"impl Unpin for GetObjectLegalHoldRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GetObjectLockConfigurationOutput","synthetic":true,"types":[]},{"text":"impl Unpin for GetObjectLockConfigurationRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GetObjectOutput","synthetic":true,"types":[]},{"text":"impl Unpin for GetObjectRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GetObjectRetentionOutput","synthetic":true,"types":[]},{"text":"impl Unpin for GetObjectRetentionRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GetObjectTaggingOutput","synthetic":true,"types":[]},{"text":"impl Unpin for GetObjectTaggingRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GetObjectTorrentOutput","synthetic":true,"types":[]},{"text":"impl Unpin for GetObjectTorrentRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GetPublicAccessBlockOutput","synthetic":true,"types":[]},{"text":"impl Unpin for GetPublicAccessBlockRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GlacierJobParameters","synthetic":true,"types":[]},{"text":"impl Unpin for GlacierJobParametersSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for Grant","synthetic":true,"types":[]},{"text":"impl Unpin for GrantSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for Grantee","synthetic":true,"types":[]},{"text":"impl Unpin for GranteeSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for GrantsSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for HeadBucketRequest","synthetic":true,"types":[]},{"text":"impl Unpin for HeadObjectOutput","synthetic":true,"types":[]},{"text":"impl Unpin for HeadObjectRequest","synthetic":true,"types":[]},{"text":"impl Unpin for HostNameSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for HttpErrorCodeReturnedEqualsSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for HttpRedirectCodeSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for IDSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for IndexDocument","synthetic":true,"types":[]},{"text":"impl Unpin for IndexDocumentSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for Initiator","synthetic":true,"types":[]},{"text":"impl Unpin for InputSerialization","synthetic":true,"types":[]},{"text":"impl Unpin for InputSerializationSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for InventoryConfiguration","synthetic":true,"types":[]},{"text":"impl Unpin for InventoryConfigurationSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for InventoryDestination","synthetic":true,"types":[]},{"text":"impl Unpin for InventoryDestinationSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for InventoryEncryption","synthetic":true,"types":[]},{"text":"impl Unpin for InventoryEncryptionSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for InventoryFilter","synthetic":true,"types":[]},{"text":"impl Unpin for InventoryFilterSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for InventoryFormatSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for InventoryFrequencySerializer","synthetic":true,"types":[]},{"text":"impl Unpin for InventoryIdSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for InventoryIncludedObjectVersionsSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for InventoryOptionalFieldSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for InventoryOptionalFieldsSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for InventoryS3BucketDestination","synthetic":true,"types":[]},{"text":"impl Unpin for InventoryS3BucketDestinationSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for InventorySchedule","synthetic":true,"types":[]},{"text":"impl Unpin for InventoryScheduleSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for IsEnabledSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for JSONInput","synthetic":true,"types":[]},{"text":"impl Unpin for JSONInputSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for JSONOutput","synthetic":true,"types":[]},{"text":"impl Unpin for JSONOutputSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for JSONTypeSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for KMSContextSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for KeyMarkerSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for KeyPrefixEqualsSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for LambdaFunctionArnSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for LambdaFunctionConfiguration","synthetic":true,"types":[]},{"text":"impl Unpin for LambdaFunctionConfigurationSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for LambdaFunctionConfigurationListSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for LifecycleConfiguration","synthetic":true,"types":[]},{"text":"impl Unpin for LifecycleConfigurationSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for LifecycleExpiration","synthetic":true,"types":[]},{"text":"impl Unpin for LifecycleExpirationSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for LifecycleRule","synthetic":true,"types":[]},{"text":"impl Unpin for LifecycleRuleSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for LifecycleRuleAndOperator","synthetic":true,"types":[]},{"text":"impl Unpin for LifecycleRuleAndOperatorSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for LifecycleRuleFilter","synthetic":true,"types":[]},{"text":"impl Unpin for LifecycleRuleFilterSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for LifecycleRulesSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for ListBucketAnalyticsConfigurationsOutput","synthetic":true,"types":[]},{"text":"impl Unpin for ListBucketAnalyticsConfigurationsRequest","synthetic":true,"types":[]},{"text":"impl Unpin for ListBucketInventoryConfigurationsOutput","synthetic":true,"types":[]},{"text":"impl Unpin for ListBucketInventoryConfigurationsRequest","synthetic":true,"types":[]},{"text":"impl Unpin for ListBucketMetricsConfigurationsOutput","synthetic":true,"types":[]},{"text":"impl Unpin for ListBucketMetricsConfigurationsRequest","synthetic":true,"types":[]},{"text":"impl Unpin for ListBucketsOutput","synthetic":true,"types":[]},{"text":"impl Unpin for ListMultipartUploadsOutput","synthetic":true,"types":[]},{"text":"impl Unpin for ListMultipartUploadsRequest","synthetic":true,"types":[]},{"text":"impl Unpin for ListObjectVersionsOutput","synthetic":true,"types":[]},{"text":"impl Unpin for ListObjectVersionsRequest","synthetic":true,"types":[]},{"text":"impl Unpin for ListObjectsOutput","synthetic":true,"types":[]},{"text":"impl Unpin for ListObjectsRequest","synthetic":true,"types":[]},{"text":"impl Unpin for ListObjectsV2Output","synthetic":true,"types":[]},{"text":"impl Unpin for ListObjectsV2Request","synthetic":true,"types":[]},{"text":"impl Unpin for ListPartsOutput","synthetic":true,"types":[]},{"text":"impl Unpin for ListPartsRequest","synthetic":true,"types":[]},{"text":"impl Unpin for LocationPrefixSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for LoggingEnabled","synthetic":true,"types":[]},{"text":"impl Unpin for LoggingEnabledSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for MFADeleteSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for MarkerSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for MaxAgeSecondsSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for MaxKeysSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for MaxPartsSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for MaxUploadsSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for MetadataEntry","synthetic":true,"types":[]},{"text":"impl Unpin for MetadataEntrySerializer","synthetic":true,"types":[]},{"text":"impl Unpin for MetadataKeySerializer","synthetic":true,"types":[]},{"text":"impl Unpin for MetadataValueSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for Metrics","synthetic":true,"types":[]},{"text":"impl Unpin for MetricsSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for MetricsAndOperator","synthetic":true,"types":[]},{"text":"impl Unpin for MetricsAndOperatorSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for MetricsConfiguration","synthetic":true,"types":[]},{"text":"impl Unpin for MetricsConfigurationSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for MetricsFilter","synthetic":true,"types":[]},{"text":"impl Unpin for MetricsFilterSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for MetricsIdSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for MetricsStatusSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for MinutesSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for MultipartUpload","synthetic":true,"types":[]},{"text":"impl Unpin for MultipartUploadIdSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for NoncurrentVersionExpiration","synthetic":true,"types":[]},{"text":"impl Unpin for NoncurrentVersionExpirationSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for NoncurrentVersionTransition","synthetic":true,"types":[]},{"text":"impl Unpin for NoncurrentVersionTransitionSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for NoncurrentVersionTransitionListSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for NotificationConfiguration","synthetic":true,"types":[]},{"text":"impl Unpin for NotificationConfigurationSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for NotificationConfigurationDeprecated","synthetic":true,"types":[]},{"text":"impl Unpin for NotificationConfigurationDeprecatedSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for NotificationConfigurationFilter","synthetic":true,"types":[]},{"text":"impl Unpin for NotificationConfigurationFilterSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for NotificationIdSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for Object","synthetic":true,"types":[]},{"text":"impl Unpin for ObjectCannedACLSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for ObjectIdentifier","synthetic":true,"types":[]},{"text":"impl Unpin for ObjectIdentifierSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for ObjectIdentifierListSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for ObjectKeySerializer","synthetic":true,"types":[]},{"text":"impl Unpin for ObjectLockConfiguration","synthetic":true,"types":[]},{"text":"impl Unpin for ObjectLockConfigurationSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for ObjectLockEnabledSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for ObjectLockLegalHold","synthetic":true,"types":[]},{"text":"impl Unpin for ObjectLockLegalHoldSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for ObjectLockLegalHoldStatusSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for ObjectLockRetention","synthetic":true,"types":[]},{"text":"impl Unpin for ObjectLockRetentionSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for ObjectLockRetentionModeSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for ObjectLockRule","synthetic":true,"types":[]},{"text":"impl Unpin for ObjectLockRuleSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for ObjectVersion","synthetic":true,"types":[]},{"text":"impl Unpin for ObjectVersionIdSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for OutputLocation","synthetic":true,"types":[]},{"text":"impl Unpin for OutputLocationSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for OutputSerialization","synthetic":true,"types":[]},{"text":"impl Unpin for OutputSerializationSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for Owner","synthetic":true,"types":[]},{"text":"impl Unpin for OwnerSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for OwnerOverrideSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for ParquetInput","synthetic":true,"types":[]},{"text":"impl Unpin for ParquetInputSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for Part","synthetic":true,"types":[]},{"text":"impl Unpin for PartNumberSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for PartNumberMarkerSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for PayerSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for PermissionSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for PolicyStatus","synthetic":true,"types":[]},{"text":"impl Unpin for PrefixSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for PrioritySerializer","synthetic":true,"types":[]},{"text":"impl Unpin for Progress","synthetic":true,"types":[]},{"text":"impl Unpin for ProgressEvent","synthetic":true,"types":[]},{"text":"impl Unpin for ProtocolSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for PublicAccessBlockConfiguration","synthetic":true,"types":[]},{"text":"impl Unpin for PublicAccessBlockConfigurationSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for PutBucketAccelerateConfigurationRequest","synthetic":true,"types":[]},{"text":"impl Unpin for PutBucketAclRequest","synthetic":true,"types":[]},{"text":"impl Unpin for PutBucketAnalyticsConfigurationRequest","synthetic":true,"types":[]},{"text":"impl Unpin for PutBucketCorsRequest","synthetic":true,"types":[]},{"text":"impl Unpin for PutBucketEncryptionRequest","synthetic":true,"types":[]},{"text":"impl Unpin for PutBucketInventoryConfigurationRequest","synthetic":true,"types":[]},{"text":"impl Unpin for PutBucketLifecycleConfigurationRequest","synthetic":true,"types":[]},{"text":"impl Unpin for PutBucketLifecycleRequest","synthetic":true,"types":[]},{"text":"impl Unpin for PutBucketLoggingRequest","synthetic":true,"types":[]},{"text":"impl Unpin for PutBucketMetricsConfigurationRequest","synthetic":true,"types":[]},{"text":"impl Unpin for PutBucketNotificationConfigurationRequest","synthetic":true,"types":[]},{"text":"impl Unpin for PutBucketNotificationRequest","synthetic":true,"types":[]},{"text":"impl Unpin for PutBucketPolicyRequest","synthetic":true,"types":[]},{"text":"impl Unpin for PutBucketReplicationRequest","synthetic":true,"types":[]},{"text":"impl Unpin for PutBucketRequestPaymentRequest","synthetic":true,"types":[]},{"text":"impl Unpin for PutBucketTaggingRequest","synthetic":true,"types":[]},{"text":"impl Unpin for PutBucketVersioningRequest","synthetic":true,"types":[]},{"text":"impl Unpin for PutBucketWebsiteRequest","synthetic":true,"types":[]},{"text":"impl Unpin for PutObjectAclOutput","synthetic":true,"types":[]},{"text":"impl Unpin for PutObjectAclRequest","synthetic":true,"types":[]},{"text":"impl Unpin for PutObjectLegalHoldOutput","synthetic":true,"types":[]},{"text":"impl Unpin for PutObjectLegalHoldRequest","synthetic":true,"types":[]},{"text":"impl Unpin for PutObjectLockConfigurationOutput","synthetic":true,"types":[]},{"text":"impl Unpin for PutObjectLockConfigurationRequest","synthetic":true,"types":[]},{"text":"impl Unpin for PutObjectOutput","synthetic":true,"types":[]},{"text":"impl Unpin for PutObjectRequest","synthetic":true,"types":[]},{"text":"impl Unpin for PutObjectRetentionOutput","synthetic":true,"types":[]},{"text":"impl Unpin for PutObjectRetentionRequest","synthetic":true,"types":[]},{"text":"impl Unpin for PutObjectTaggingOutput","synthetic":true,"types":[]},{"text":"impl Unpin for PutObjectTaggingRequest","synthetic":true,"types":[]},{"text":"impl Unpin for PutPublicAccessBlockRequest","synthetic":true,"types":[]},{"text":"impl Unpin for QueueArnSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for QueueConfiguration","synthetic":true,"types":[]},{"text":"impl Unpin for QueueConfigurationSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for QueueConfigurationDeprecated","synthetic":true,"types":[]},{"text":"impl Unpin for QueueConfigurationDeprecatedSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for QueueConfigurationListSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for QuietSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for QuoteCharacterSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for QuoteEscapeCharacterSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for QuoteFieldsSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for RecordDelimiterSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for RecordsEvent","synthetic":true,"types":[]},{"text":"impl Unpin for Redirect","synthetic":true,"types":[]},{"text":"impl Unpin for RedirectSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for RedirectAllRequestsTo","synthetic":true,"types":[]},{"text":"impl Unpin for RedirectAllRequestsToSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for ReplaceKeyPrefixWithSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for ReplaceKeyWithSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for ReplicaKmsKeyIDSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for ReplicationConfiguration","synthetic":true,"types":[]},{"text":"impl Unpin for ReplicationConfigurationSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for ReplicationRule","synthetic":true,"types":[]},{"text":"impl Unpin for ReplicationRuleSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for ReplicationRuleAndOperator","synthetic":true,"types":[]},{"text":"impl Unpin for ReplicationRuleAndOperatorSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for ReplicationRuleFilter","synthetic":true,"types":[]},{"text":"impl Unpin for ReplicationRuleFilterSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for ReplicationRuleStatusSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for ReplicationRulesSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for ReplicationTime","synthetic":true,"types":[]},{"text":"impl Unpin for ReplicationTimeSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for ReplicationTimeStatusSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for ReplicationTimeValue","synthetic":true,"types":[]},{"text":"impl Unpin for ReplicationTimeValueSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for RequestPaymentConfiguration","synthetic":true,"types":[]},{"text":"impl Unpin for RequestPaymentConfigurationSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for RequestProgress","synthetic":true,"types":[]},{"text":"impl Unpin for RequestProgressSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for ResponseCacheControlSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for ResponseContentDispositionSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for ResponseContentEncodingSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for ResponseContentLanguageSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for ResponseContentTypeSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for ResponseExpiresSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for RestoreObjectOutput","synthetic":true,"types":[]},{"text":"impl Unpin for RestoreObjectRequest","synthetic":true,"types":[]},{"text":"impl Unpin for RestoreRequest","synthetic":true,"types":[]},{"text":"impl Unpin for RestoreRequestSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for RestoreRequestTypeSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for RoleSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for RoutingRule","synthetic":true,"types":[]},{"text":"impl Unpin for RoutingRuleSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for RoutingRulesSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for Rule","synthetic":true,"types":[]},{"text":"impl Unpin for RuleSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for RulesSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for S3KeyFilter","synthetic":true,"types":[]},{"text":"impl Unpin for S3KeyFilterSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for S3Location","synthetic":true,"types":[]},{"text":"impl Unpin for S3LocationSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for SSEKMS","synthetic":true,"types":[]},{"text":"impl Unpin for SSEKMSSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for SSEKMSKeyIdSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for SSES3","synthetic":true,"types":[]},{"text":"impl Unpin for SSES3Serializer","synthetic":true,"types":[]},{"text":"impl Unpin for ScanRange","synthetic":true,"types":[]},{"text":"impl Unpin for ScanRangeSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for SelectObjectContentEventStreamItem","synthetic":true,"types":[]},{"text":"impl Unpin for SelectObjectContentOutput","synthetic":true,"types":[]},{"text":"impl Unpin for SelectObjectContentRequest","synthetic":true,"types":[]},{"text":"impl Unpin for SelectObjectContentRequestSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for SelectParameters","synthetic":true,"types":[]},{"text":"impl Unpin for SelectParametersSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for ServerSideEncryptionSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for ServerSideEncryptionByDefault","synthetic":true,"types":[]},{"text":"impl Unpin for ServerSideEncryptionByDefaultSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for ServerSideEncryptionConfiguration","synthetic":true,"types":[]},{"text":"impl Unpin for ServerSideEncryptionConfigurationSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for ServerSideEncryptionRule","synthetic":true,"types":[]},{"text":"impl Unpin for ServerSideEncryptionRuleSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for ServerSideEncryptionRulesSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for SettingSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for SourceSelectionCriteria","synthetic":true,"types":[]},{"text":"impl Unpin for SourceSelectionCriteriaSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for SseKmsEncryptedObjects","synthetic":true,"types":[]},{"text":"impl Unpin for SseKmsEncryptedObjectsSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for SseKmsEncryptedObjectsStatusSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for StartSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for StartAfterSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for Stats","synthetic":true,"types":[]},{"text":"impl Unpin for StatsEvent","synthetic":true,"types":[]},{"text":"impl Unpin for StorageClassSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for StorageClassAnalysis","synthetic":true,"types":[]},{"text":"impl Unpin for StorageClassAnalysisSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for StorageClassAnalysisDataExport","synthetic":true,"types":[]},{"text":"impl Unpin for StorageClassAnalysisDataExportSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for StorageClassAnalysisSchemaVersionSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for SuffixSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for Tag","synthetic":true,"types":[]},{"text":"impl Unpin for TagSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for TagSetSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for Tagging","synthetic":true,"types":[]},{"text":"impl Unpin for TaggingSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for TargetBucketSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for TargetGrant","synthetic":true,"types":[]},{"text":"impl Unpin for TargetGrantSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for TargetGrantsSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for TargetPrefixSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for TierSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for TokenSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for TopicArnSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for TopicConfiguration","synthetic":true,"types":[]},{"text":"impl Unpin for TopicConfigurationSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for TopicConfigurationDeprecated","synthetic":true,"types":[]},{"text":"impl Unpin for TopicConfigurationDeprecatedSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for TopicConfigurationListSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for Transition","synthetic":true,"types":[]},{"text":"impl Unpin for TransitionSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for TransitionListSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for TransitionStorageClassSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for TypeSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for URISerializer","synthetic":true,"types":[]},{"text":"impl Unpin for UploadIdMarkerSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for UploadPartCopyOutput","synthetic":true,"types":[]},{"text":"impl Unpin for UploadPartCopyRequest","synthetic":true,"types":[]},{"text":"impl Unpin for UploadPartOutput","synthetic":true,"types":[]},{"text":"impl Unpin for UploadPartRequest","synthetic":true,"types":[]},{"text":"impl Unpin for UserMetadataSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for ValueSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for VersionIdMarkerSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for VersioningConfiguration","synthetic":true,"types":[]},{"text":"impl Unpin for VersioningConfigurationSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for WebsiteConfiguration","synthetic":true,"types":[]},{"text":"impl Unpin for WebsiteConfigurationSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for YearsSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for AbortMultipartUploadError","synthetic":true,"types":[]},{"text":"impl Unpin for CompleteMultipartUploadError","synthetic":true,"types":[]},{"text":"impl Unpin for CopyObjectError","synthetic":true,"types":[]},{"text":"impl Unpin for CreateBucketError","synthetic":true,"types":[]},{"text":"impl Unpin for CreateMultipartUploadError","synthetic":true,"types":[]},{"text":"impl Unpin for DeleteBucketError","synthetic":true,"types":[]},{"text":"impl Unpin for DeleteBucketAnalyticsConfigurationError","synthetic":true,"types":[]},{"text":"impl Unpin for DeleteBucketCorsError","synthetic":true,"types":[]},{"text":"impl Unpin for DeleteBucketEncryptionError","synthetic":true,"types":[]},{"text":"impl Unpin for DeleteBucketInventoryConfigurationError","synthetic":true,"types":[]},{"text":"impl Unpin for DeleteBucketLifecycleError","synthetic":true,"types":[]},{"text":"impl Unpin for DeleteBucketMetricsConfigurationError","synthetic":true,"types":[]},{"text":"impl Unpin for DeleteBucketPolicyError","synthetic":true,"types":[]},{"text":"impl Unpin for DeleteBucketReplicationError","synthetic":true,"types":[]},{"text":"impl Unpin for DeleteBucketTaggingError","synthetic":true,"types":[]},{"text":"impl Unpin for DeleteBucketWebsiteError","synthetic":true,"types":[]},{"text":"impl Unpin for DeleteObjectError","synthetic":true,"types":[]},{"text":"impl Unpin for DeleteObjectTaggingError","synthetic":true,"types":[]},{"text":"impl Unpin for DeleteObjectsError","synthetic":true,"types":[]},{"text":"impl Unpin for DeletePublicAccessBlockError","synthetic":true,"types":[]},{"text":"impl Unpin for GetBucketAccelerateConfigurationError","synthetic":true,"types":[]},{"text":"impl Unpin for GetBucketAclError","synthetic":true,"types":[]},{"text":"impl Unpin for GetBucketAnalyticsConfigurationError","synthetic":true,"types":[]},{"text":"impl Unpin for GetBucketCorsError","synthetic":true,"types":[]},{"text":"impl Unpin for GetBucketEncryptionError","synthetic":true,"types":[]},{"text":"impl Unpin for GetBucketInventoryConfigurationError","synthetic":true,"types":[]},{"text":"impl Unpin for GetBucketLifecycleError","synthetic":true,"types":[]},{"text":"impl Unpin for GetBucketLifecycleConfigurationError","synthetic":true,"types":[]},{"text":"impl Unpin for GetBucketLocationError","synthetic":true,"types":[]},{"text":"impl Unpin for GetBucketLoggingError","synthetic":true,"types":[]},{"text":"impl Unpin for GetBucketMetricsConfigurationError","synthetic":true,"types":[]},{"text":"impl Unpin for GetBucketNotificationError","synthetic":true,"types":[]},{"text":"impl Unpin for GetBucketNotificationConfigurationError","synthetic":true,"types":[]},{"text":"impl Unpin for GetBucketPolicyError","synthetic":true,"types":[]},{"text":"impl Unpin for GetBucketPolicyStatusError","synthetic":true,"types":[]},{"text":"impl Unpin for GetBucketReplicationError","synthetic":true,"types":[]},{"text":"impl Unpin for GetBucketRequestPaymentError","synthetic":true,"types":[]},{"text":"impl Unpin for GetBucketTaggingError","synthetic":true,"types":[]},{"text":"impl Unpin for GetBucketVersioningError","synthetic":true,"types":[]},{"text":"impl Unpin for GetBucketWebsiteError","synthetic":true,"types":[]},{"text":"impl Unpin for GetObjectError","synthetic":true,"types":[]},{"text":"impl Unpin for GetObjectAclError","synthetic":true,"types":[]},{"text":"impl Unpin for GetObjectLegalHoldError","synthetic":true,"types":[]},{"text":"impl Unpin for GetObjectLockConfigurationError","synthetic":true,"types":[]},{"text":"impl Unpin for GetObjectRetentionError","synthetic":true,"types":[]},{"text":"impl Unpin for GetObjectTaggingError","synthetic":true,"types":[]},{"text":"impl Unpin for GetObjectTorrentError","synthetic":true,"types":[]},{"text":"impl Unpin for GetPublicAccessBlockError","synthetic":true,"types":[]},{"text":"impl Unpin for HeadBucketError","synthetic":true,"types":[]},{"text":"impl Unpin for HeadObjectError","synthetic":true,"types":[]},{"text":"impl Unpin for ListBucketAnalyticsConfigurationsError","synthetic":true,"types":[]},{"text":"impl Unpin for ListBucketInventoryConfigurationsError","synthetic":true,"types":[]},{"text":"impl Unpin for ListBucketMetricsConfigurationsError","synthetic":true,"types":[]},{"text":"impl Unpin for ListBucketsError","synthetic":true,"types":[]},{"text":"impl Unpin for ListMultipartUploadsError","synthetic":true,"types":[]},{"text":"impl Unpin for ListObjectVersionsError","synthetic":true,"types":[]},{"text":"impl Unpin for ListObjectsError","synthetic":true,"types":[]},{"text":"impl Unpin for ListObjectsV2Error","synthetic":true,"types":[]},{"text":"impl Unpin for ListPartsError","synthetic":true,"types":[]},{"text":"impl Unpin for PutBucketAccelerateConfigurationError","synthetic":true,"types":[]},{"text":"impl Unpin for PutBucketAclError","synthetic":true,"types":[]},{"text":"impl Unpin for PutBucketAnalyticsConfigurationError","synthetic":true,"types":[]},{"text":"impl Unpin for PutBucketCorsError","synthetic":true,"types":[]},{"text":"impl Unpin for PutBucketEncryptionError","synthetic":true,"types":[]},{"text":"impl Unpin for PutBucketInventoryConfigurationError","synthetic":true,"types":[]},{"text":"impl Unpin for PutBucketLifecycleError","synthetic":true,"types":[]},{"text":"impl Unpin for PutBucketLifecycleConfigurationError","synthetic":true,"types":[]},{"text":"impl Unpin for PutBucketLoggingError","synthetic":true,"types":[]},{"text":"impl Unpin for PutBucketMetricsConfigurationError","synthetic":true,"types":[]},{"text":"impl Unpin for PutBucketNotificationError","synthetic":true,"types":[]},{"text":"impl Unpin for PutBucketNotificationConfigurationError","synthetic":true,"types":[]},{"text":"impl Unpin for PutBucketPolicyError","synthetic":true,"types":[]},{"text":"impl Unpin for PutBucketReplicationError","synthetic":true,"types":[]},{"text":"impl Unpin for PutBucketRequestPaymentError","synthetic":true,"types":[]},{"text":"impl Unpin for PutBucketTaggingError","synthetic":true,"types":[]},{"text":"impl Unpin for PutBucketVersioningError","synthetic":true,"types":[]},{"text":"impl Unpin for PutBucketWebsiteError","synthetic":true,"types":[]},{"text":"impl Unpin for PutObjectError","synthetic":true,"types":[]},{"text":"impl Unpin for PutObjectAclError","synthetic":true,"types":[]},{"text":"impl Unpin for PutObjectLegalHoldError","synthetic":true,"types":[]},{"text":"impl Unpin for PutObjectLockConfigurationError","synthetic":true,"types":[]},{"text":"impl Unpin for PutObjectRetentionError","synthetic":true,"types":[]},{"text":"impl Unpin for PutObjectTaggingError","synthetic":true,"types":[]},{"text":"impl Unpin for PutPublicAccessBlockError","synthetic":true,"types":[]},{"text":"impl Unpin for RestoreObjectError","synthetic":true,"types":[]},{"text":"impl Unpin for SelectObjectContentError","synthetic":true,"types":[]},{"text":"impl Unpin for UploadPartError","synthetic":true,"types":[]},{"text":"impl Unpin for UploadPartCopyError","synthetic":true,"types":[]},{"text":"impl Unpin for S3Client","synthetic":true,"types":[]}];
implementors["rusoto_signature"] = [{"text":"impl Unpin for Region","synthetic":true,"types":[]},{"text":"impl Unpin for ParseRegionError","synthetic":true,"types":[]},{"text":"impl Unpin for SignedRequestPayload","synthetic":true,"types":[]},{"text":"impl Unpin for SignedRequest","synthetic":true,"types":[]},{"text":"impl&lt;'pin&gt; Unpin for ByteStream <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__ByteStream&lt;'pin&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["rusoto_sts"] = [{"text":"impl Unpin for StsSessionCredentialsProvider","synthetic":true,"types":[]},{"text":"impl Unpin for StsAssumeRoleSessionCredentialsProvider","synthetic":true,"types":[]},{"text":"impl Unpin for StsWebIdentityFederationSessionCredentialsProvider","synthetic":true,"types":[]},{"text":"impl Unpin for WebIdentityProvider","synthetic":true,"types":[]},{"text":"impl Unpin for AssumeRoleRequest","synthetic":true,"types":[]},{"text":"impl Unpin for AssumeRoleResponse","synthetic":true,"types":[]},{"text":"impl Unpin for AssumeRoleWithSAMLRequest","synthetic":true,"types":[]},{"text":"impl Unpin for AssumeRoleWithSAMLResponse","synthetic":true,"types":[]},{"text":"impl Unpin for AssumeRoleWithWebIdentityRequest","synthetic":true,"types":[]},{"text":"impl Unpin for AssumeRoleWithWebIdentityResponse","synthetic":true,"types":[]},{"text":"impl Unpin for AssumedRoleUser","synthetic":true,"types":[]},{"text":"impl Unpin for Credentials","synthetic":true,"types":[]},{"text":"impl Unpin for DecodeAuthorizationMessageRequest","synthetic":true,"types":[]},{"text":"impl Unpin for DecodeAuthorizationMessageResponse","synthetic":true,"types":[]},{"text":"impl Unpin for FederatedUser","synthetic":true,"types":[]},{"text":"impl Unpin for GetAccessKeyInfoRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GetAccessKeyInfoResponse","synthetic":true,"types":[]},{"text":"impl Unpin for GetCallerIdentityRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GetCallerIdentityResponse","synthetic":true,"types":[]},{"text":"impl Unpin for GetFederationTokenRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GetFederationTokenResponse","synthetic":true,"types":[]},{"text":"impl Unpin for GetSessionTokenRequest","synthetic":true,"types":[]},{"text":"impl Unpin for GetSessionTokenResponse","synthetic":true,"types":[]},{"text":"impl Unpin for PolicyDescriptorType","synthetic":true,"types":[]},{"text":"impl Unpin for Tag","synthetic":true,"types":[]},{"text":"impl Unpin for AssumeRoleError","synthetic":true,"types":[]},{"text":"impl Unpin for AssumeRoleWithSAMLError","synthetic":true,"types":[]},{"text":"impl Unpin for AssumeRoleWithWebIdentityError","synthetic":true,"types":[]},{"text":"impl Unpin for DecodeAuthorizationMessageError","synthetic":true,"types":[]},{"text":"impl Unpin for GetAccessKeyInfoError","synthetic":true,"types":[]},{"text":"impl Unpin for GetCallerIdentityError","synthetic":true,"types":[]},{"text":"impl Unpin for GetFederationTokenError","synthetic":true,"types":[]},{"text":"impl Unpin for GetSessionTokenError","synthetic":true,"types":[]},{"text":"impl Unpin for StsClient","synthetic":true,"types":[]}];
implementors["rusoto_util"] = [{"text":"impl Unpin for CredentialsProvider","synthetic":true,"types":[]},{"text":"impl Unpin for DefaultCredentialsProvider","synthetic":true,"types":[]}];
implementors["rustc_demangle"] = [{"text":"impl&lt;'a&gt; Unpin for Demangle&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for TryDemangleError","synthetic":true,"types":[]}];
implementors["rustyline"] = [{"text":"impl Unpin for Pair","synthetic":true,"types":[]},{"text":"impl Unpin for FilenameCompleter","synthetic":true,"types":[]},{"text":"impl Unpin for Quote","synthetic":true,"types":[]},{"text":"impl Unpin for Config","synthetic":true,"types":[]},{"text":"impl Unpin for BellStyle","synthetic":true,"types":[]},{"text":"impl Unpin for HistoryDuplicates","synthetic":true,"types":[]},{"text":"impl Unpin for CompletionType","synthetic":true,"types":[]},{"text":"impl Unpin for EditMode","synthetic":true,"types":[]},{"text":"impl Unpin for ColorMode","synthetic":true,"types":[]},{"text":"impl Unpin for OutputStreamType","synthetic":true,"types":[]},{"text":"impl Unpin for Builder","synthetic":true,"types":[]},{"text":"impl Unpin for ReadlineError","synthetic":true,"types":[]},{"text":"impl Unpin for MatchingBracketHighlighter","synthetic":true,"types":[]},{"text":"impl Unpin for HistoryHinter","synthetic":true,"types":[]},{"text":"impl Unpin for Direction","synthetic":true,"types":[]},{"text":"impl Unpin for History","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Cmd","synthetic":true,"types":[]},{"text":"impl Unpin for Word","synthetic":true,"types":[]},{"text":"impl Unpin for At","synthetic":true,"types":[]},{"text":"impl Unpin for Anchor","synthetic":true,"types":[]},{"text":"impl Unpin for CharSearch","synthetic":true,"types":[]},{"text":"impl Unpin for Movement","synthetic":true,"types":[]},{"text":"impl Unpin for KeyPress","synthetic":true,"types":[]},{"text":"impl Unpin for WordAction","synthetic":true,"types":[]},{"text":"impl Unpin for LineBuffer","synthetic":true,"types":[]},{"text":"impl Unpin for ValidationResult","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; Unpin for ValidationContext&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for MatchingBracketValidator","synthetic":true,"types":[]},{"text":"impl&lt;'h&gt; Unpin for Context&lt;'h&gt;","synthetic":true,"types":[]},{"text":"impl&lt;H&gt; Unpin for Editor&lt;H&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, H&gt; Unpin for Iter&lt;'a, H&gt;","synthetic":true,"types":[]}];
implementors["ryu"] = [{"text":"impl Unpin for Buffer","synthetic":true,"types":[]}];
implementors["same_file"] = [{"text":"impl Unpin for Handle","synthetic":true,"types":[]}];
implementors["scopeguard"] = [{"text":"impl Unpin for Always","synthetic":true,"types":[]},{"text":"impl&lt;T, F, S&gt; Unpin for ScopeGuard&lt;T, F, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["security"] = [{"text":"impl Unpin for SecurityConfig","synthetic":true,"types":[]},{"text":"impl Unpin for SecurityManager","synthetic":true,"types":[]},{"text":"impl Unpin for CNChecker","synthetic":true,"types":[]},{"text":"impl Unpin for Fetcher","synthetic":true,"types":[]}];
implementors["semver"] = [{"text":"impl Unpin for Identifier","synthetic":true,"types":[]},{"text":"impl Unpin for Version","synthetic":true,"types":[]},{"text":"impl Unpin for SemVerError","synthetic":true,"types":[]},{"text":"impl Unpin for VersionReq","synthetic":true,"types":[]},{"text":"impl Unpin for ReqParseError","synthetic":true,"types":[]}];
implementors["semver_parser"] = [{"text":"impl Unpin for Version","synthetic":true,"types":[]},{"text":"impl Unpin for Identifier","synthetic":true,"types":[]},{"text":"impl Unpin for VersionReq","synthetic":true,"types":[]},{"text":"impl Unpin for WildcardVersion","synthetic":true,"types":[]},{"text":"impl Unpin for Op","synthetic":true,"types":[]},{"text":"impl Unpin for Predicate","synthetic":true,"types":[]}];
implementors["serde"] = [{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for UnitDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for BoolDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for I8Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for I16Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for I32Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for I64Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for IsizeDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for U8Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for U16Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for U64Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for UsizeDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for F32Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for F64Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for CharDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for I128Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for U128Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for U32Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; Unpin for StrDeserializer&lt;'a, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, E&gt; Unpin for BorrowedStrDeserializer&lt;'de, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for StringDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; Unpin for CowStrDeserializer&lt;'a, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, E&gt; Unpin for BorrowedBytesDeserializer&lt;'de, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, E&gt; Unpin for SeqDeserializer&lt;I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for SeqAccessDeserializer&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, I, E&gt; Unpin for MapDeserializer&lt;'de, I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;I as Iterator&gt;::Item as Pair&gt;::Second: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for MapAccessDeserializer&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for IgnoredAny","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Unexpected&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Ok, Error&gt; Unpin for Impossible&lt;Ok, Error&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Error: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ok: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["serde_ignored"] = [{"text":"impl&lt;'a, 'b, D, F&gt; Unpin for Deserializer&lt;'a, 'b, D, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Path&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["serde_json"] = [{"text":"impl&lt;'a&gt; Unpin for SliceRead&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for StrRead&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for IoRead&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for Deserializer&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, R, T&gt; Unpin for StreamDeserializer&lt;'de, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Category","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Unpin for Map&lt;K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Entry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for VacantEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for OccupiedEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for IterMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for IntoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Keys&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Values&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ValuesMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;W, F&gt; Unpin for Serializer&lt;W, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for CharEscape","synthetic":true,"types":[]},{"text":"impl Unpin for CompactFormatter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for PrettyFormatter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Serializer","synthetic":true,"types":[]},{"text":"impl Unpin for Number","synthetic":true,"types":[]},{"text":"impl Unpin for Value","synthetic":true,"types":[]}];
implementors["serde_urlencoded"] = [{"text":"impl&lt;'de&gt; Unpin for Deserializer&lt;'de&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'input, 'output, Target&gt; Unpin for Serializer&lt;'input, 'output, Target&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'input: 'output,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl&lt;'input, 'output, Target&gt; Unpin for SeqSerializer&lt;'input, 'output, Target&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'input: 'output,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'input, 'output, Target&gt; Unpin for TupleSerializer&lt;'input, 'output, Target&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'input: 'output,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'input, 'output, T&gt; Unpin for TupleStructSerializer&lt;'input, 'output, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'input: 'output,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'input, 'output, T&gt; Unpin for TupleVariantSerializer&lt;'input, 'output, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'input: 'output,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'input, 'output, Target&gt; Unpin for MapSerializer&lt;'input, 'output, Target&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'input: 'output,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'input, 'output, Target&gt; Unpin for StructSerializer&lt;'input, 'output, Target&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'input: 'output,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'input, 'output, T&gt; Unpin for StructVariantSerializer&lt;'input, 'output, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'input: 'output,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["serde_with"] = [{"text":"impl&lt;Sep&gt; Unpin for StringWithSeparator&lt;Sep&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Sep: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for SpaceSeparator","synthetic":true,"types":[]},{"text":"impl Unpin for CommaSeparator","synthetic":true,"types":[]}];
implementors["sha2"] = [{"text":"impl Unpin for Sha256","synthetic":true,"types":[]},{"text":"impl Unpin for Sha224","synthetic":true,"types":[]},{"text":"impl Unpin for Sha512","synthetic":true,"types":[]},{"text":"impl Unpin for Sha384","synthetic":true,"types":[]},{"text":"impl Unpin for Sha512Trunc256","synthetic":true,"types":[]},{"text":"impl Unpin for Sha512Trunc224","synthetic":true,"types":[]}];
implementors["shlex"] = [{"text":"impl&lt;'a&gt; Unpin for Shlex&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["signal"] = [{"text":"impl Unpin for Trap","synthetic":true,"types":[]}];
implementors["signal_hook_registry"] = [{"text":"impl Unpin for SigId","synthetic":true,"types":[]}];
implementors["slab"] = [{"text":"impl&lt;T&gt; Unpin for Slab&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for VacantEntry&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Drain&lt;'a, T&gt;","synthetic":true,"types":[]}];
implementors["slog"] = [{"text":"impl&lt;D&gt; Unpin for Logger&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Discard","synthetic":true,"types":[]},{"text":"impl&lt;D, F&gt; Unpin for Filter&lt;D, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; Unpin for LevelFilter&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;D, E&gt; Unpin for MapError&lt;D, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;D1, D2&gt; Unpin for Duplicate&lt;D1, D2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D1: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;D2: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; Unpin for Fuse&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; Unpin for IgnoreResult&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; Unpin for MutexDrainError&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;D as Drain&gt;::Err: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Level","synthetic":true,"types":[]},{"text":"impl Unpin for FilterLevel","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for RecordStatic&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Record&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;V, F&gt; Unpin for FnValue&lt;V, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for PushFnValueSerializer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Unpin for PushFnValue&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; Unpin for SingleKV&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; Unpin for OwnedKV&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for BorrowedKV&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for OwnedKVList","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]}];
implementors["slog_async"] = [{"text":"impl Unpin for AsyncError","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; Unpin for AsyncCoreBuilder&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for AsyncGuard","synthetic":true,"types":[]},{"text":"impl Unpin for AsyncCore","synthetic":true,"types":[]},{"text":"impl Unpin for OverflowStrategy","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; Unpin for AsyncBuilder&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Async","synthetic":true,"types":[]}];
implementors["slog_json"] = [{"text":"impl&lt;W&gt; Unpin for Json&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Unpin for JsonBuilder&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["slog_term"] = [{"text":"impl&lt;D&gt; Unpin for FullFormat&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; Unpin for FullFormatBuilder&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; Unpin for CompactFormat&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; Unpin for CompactFormatBuilder&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Unpin for PlainDecorator&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, W&gt; Unpin for PlainRecordDecorator&lt;'a, W&gt;","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Unpin for PlainSyncDecorator&lt;W&gt;","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Unpin for PlainSyncRecordDecorator&lt;W&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for TermDecoratorBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for TermDecorator","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for TermRecordDecorator&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for TestStdoutWriter","synthetic":true,"types":[]}];
implementors["smallvec"] = [{"text":"impl Unpin for CollectionAllocErr","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Drain&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for SmallVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for IntoIter&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["spin"] = [{"text":"impl&lt;T:&nbsp;?Sized&gt; Unpin for Mutex&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Unpin for MutexGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; Unpin for RwLock&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Unpin for RwLockReadGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Unpin for RwLockWriteGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Unpin for RwLockUpgradeableGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Once&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["sst_importer"] = [{"text":"impl Unpin for Config","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for IMPORT_RPC_DURATION","synthetic":true,"types":[]},{"text":"impl Unpin for IMPORT_UPLOAD_CHUNK_BYTES","synthetic":true,"types":[]},{"text":"impl Unpin for IMPORT_UPLOAD_CHUNK_DURATION","synthetic":true,"types":[]},{"text":"impl Unpin for IMPORT_WRITE_CHUNK_DURATION","synthetic":true,"types":[]},{"text":"impl Unpin for IMPORTER_DOWNLOAD_DURATION","synthetic":true,"types":[]},{"text":"impl Unpin for IMPORTER_DOWNLOAD_BYTES","synthetic":true,"types":[]},{"text":"impl Unpin for IMPORTER_INGEST_DURATION","synthetic":true,"types":[]},{"text":"impl Unpin for IMPORTER_INGEST_BYTES","synthetic":true,"types":[]},{"text":"impl Unpin for IMPORTER_ERROR_VEC","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for ImportModeSwitcherInner&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for ImportModeSwitcher&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ImportModeDBOptions","synthetic":true,"types":[]},{"text":"impl Unpin for ImportModeCFOptions","synthetic":true,"types":[]},{"text":"impl Unpin for SSTImporter","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for SSTWriter&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;E as SstExt&gt;::SstWriter: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ImportDir","synthetic":true,"types":[]},{"text":"impl Unpin for ImportPath","synthetic":true,"types":[]},{"text":"impl Unpin for ImportFile","synthetic":true,"types":[]}];
implementors["str_stack"] = [{"text":"impl Unpin for StrStack","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Writer&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["strsim"] = [{"text":"impl Unpin for StrSimError","synthetic":true,"types":[]}];
implementors["subtle"] = [{"text":"impl Unpin for Choice","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for CtOption&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["symbolic_common"] = [{"text":"impl&lt;'a&gt; Unpin for ByteView&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;O, D&gt; Unpin for SelfCell&lt;O, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;O: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for InstructionInfo","synthetic":true,"types":[]},{"text":"impl Unpin for CpuFamily","synthetic":true,"types":[]},{"text":"impl Unpin for UnknownArchError","synthetic":true,"types":[]},{"text":"impl Unpin for Arch","synthetic":true,"types":[]},{"text":"impl Unpin for UnknownLanguageError","synthetic":true,"types":[]},{"text":"impl Unpin for Language","synthetic":true,"types":[]},{"text":"impl Unpin for NameMangling","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Name&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["symbolic_demangle"] = [{"text":"impl Unpin for DemangleOptions","synthetic":true,"types":[]}];
implementors["syn_mid"] = [{"text":"impl Unpin for FnArg","synthetic":true,"types":[]},{"text":"impl Unpin for Receiver","synthetic":true,"types":[]},{"text":"impl Unpin for Pat","synthetic":true,"types":[]},{"text":"impl Unpin for PatIdent","synthetic":true,"types":[]},{"text":"impl Unpin for PatPath","synthetic":true,"types":[]},{"text":"impl Unpin for PatReference","synthetic":true,"types":[]},{"text":"impl Unpin for PatStruct","synthetic":true,"types":[]},{"text":"impl Unpin for PatTuple","synthetic":true,"types":[]},{"text":"impl Unpin for PatTupleStruct","synthetic":true,"types":[]},{"text":"impl Unpin for PatType","synthetic":true,"types":[]},{"text":"impl Unpin for PatWild","synthetic":true,"types":[]},{"text":"impl Unpin for FieldPat","synthetic":true,"types":[]},{"text":"impl Unpin for Block","synthetic":true,"types":[]},{"text":"impl Unpin for ItemFn","synthetic":true,"types":[]},{"text":"impl Unpin for Signature","synthetic":true,"types":[]}];
implementors["synstructure"] = [{"text":"impl Unpin for AddBounds","synthetic":true,"types":[]},{"text":"impl Unpin for BindStyle","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for BindingInfo&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for VariantAst&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for VariantInfo&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Structure&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["sysinfo"] = [{"text":"impl Unpin for Component","synthetic":true,"types":[]},{"text":"impl Unpin for Disk","synthetic":true,"types":[]},{"text":"impl Unpin for Networks","synthetic":true,"types":[]},{"text":"impl Unpin for NetworkData","synthetic":true,"types":[]},{"text":"impl Unpin for ProcessStatus","synthetic":true,"types":[]},{"text":"impl Unpin for Process","synthetic":true,"types":[]},{"text":"impl Unpin for Processor","synthetic":true,"types":[]},{"text":"impl Unpin for System","synthetic":true,"types":[]},{"text":"impl Unpin for RefreshKind","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for NetworksIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for DiskType","synthetic":true,"types":[]},{"text":"impl Unpin for Signal","synthetic":true,"types":[]},{"text":"impl Unpin for LoadAvg","synthetic":true,"types":[]},{"text":"impl Unpin for User","synthetic":true,"types":[]},{"text":"impl Unpin for DiskUsage","synthetic":true,"types":[]}];
implementors["take_mut"] = [{"text":"impl&lt;'s&gt; Unpin for Scope&lt;'s&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, 'm, T, F&gt; Unpin for Hole&lt;'c, 'm, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["tame_gcs"] = [{"text":"impl&lt;'a&gt; Unpin for StandardQueryParameters&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Conditionals","synthetic":true,"types":[]},{"text":"impl Unpin for StorageClass","synthetic":true,"types":[]},{"text":"impl Unpin for PredefinedAcl","synthetic":true,"types":[]},{"text":"impl Unpin for Projection","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for DeleteObjectOptional&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for DeleteObjectResponse","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for DownloadObjectOptional&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for DownloadObjectResponse","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for GetObjectOptional&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for GetObjectResponse","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for InsertObjectOptional&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for InsertResponse","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for Multipart&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ListOptional&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ListResponse","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for PatchObjectOptional&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for PatchObjectResponse","synthetic":true,"types":[]},{"text":"impl Unpin for Object","synthetic":true,"types":[]},{"text":"impl Unpin for Metadata","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for HttpError","synthetic":true,"types":[]},{"text":"impl Unpin for HttpStatusError","synthetic":true,"types":[]},{"text":"impl Unpin for IoError","synthetic":true,"types":[]},{"text":"impl Unpin for JsonError","synthetic":true,"types":[]},{"text":"impl Unpin for ApiErrorInner","synthetic":true,"types":[]},{"text":"impl Unpin for ApiError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Response&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;D, S&gt; Unpin for UrlSigner&lt;D, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SignedUrlOptional&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for DigestAlgorithm","synthetic":true,"types":[]},{"text":"impl Unpin for SigningAlgorithm","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Key&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ServiceAccount","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for BucketName&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ObjectName&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ObjectId&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Scopes","synthetic":true,"types":[]}];
implementors["tame_oauth"] = [{"text":"impl Unpin for ServiceAccountInfo","synthetic":true,"types":[]},{"text":"impl Unpin for RequestReason","synthetic":true,"types":[]},{"text":"impl Unpin for TokenOrRequest","synthetic":true,"types":[]},{"text":"impl Unpin for ServiceAccountAccess","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Token","synthetic":true,"types":[]}];
implementors["tempfile"] = [{"text":"impl Unpin for TempDir","synthetic":true,"types":[]},{"text":"impl Unpin for PathPersistError","synthetic":true,"types":[]},{"text":"impl Unpin for TempPath","synthetic":true,"types":[]},{"text":"impl Unpin for NamedTempFile","synthetic":true,"types":[]},{"text":"impl Unpin for PersistError","synthetic":true,"types":[]},{"text":"impl Unpin for SpooledTempFile","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; Unpin for Builder&lt;'a, 'b&gt;","synthetic":true,"types":[]}];
implementors["term"] = [{"text":"impl Unpin for Param","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Variables","synthetic":true,"types":[]},{"text":"impl Unpin for TermInfo","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for TerminfoTerminal&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Attr","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]}];
implementors["test_backup"] = [{"text":"impl Unpin for TestSuite","synthetic":true,"types":[]}];
implementors["test_coprocessor"] = [{"text":"impl Unpin for Column","synthetic":true,"types":[]},{"text":"impl Unpin for ColumnBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for DAGSelect","synthetic":true,"types":[]},{"text":"impl Unpin for DAGChunkSpliter","synthetic":true,"types":[]},{"text":"impl Unpin for ProductTable","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; Unpin for Insert&lt;'a, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; Unpin for Delete&lt;'a, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for Store&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Table","synthetic":true,"types":[]},{"text":"impl Unpin for TableBuilder","synthetic":true,"types":[]}];
implementors["test_pd"] = [{"text":"impl Unpin for AlreadyBootstrapped","synthetic":true,"types":[]},{"text":"impl Unpin for Incompatible","synthetic":true,"types":[]},{"text":"impl Unpin for Roulette","synthetic":true,"types":[]},{"text":"impl Unpin for Inner","synthetic":true,"types":[]},{"text":"impl Unpin for LeaderChange","synthetic":true,"types":[]},{"text":"impl Unpin for Retry","synthetic":true,"types":[]},{"text":"impl Unpin for NotRetry","synthetic":true,"types":[]},{"text":"impl Unpin for Service","synthetic":true,"types":[]},{"text":"impl Unpin for Inner","synthetic":true,"types":[]},{"text":"impl Unpin for Split","synthetic":true,"types":[]},{"text":"impl&lt;C&gt; Unpin for Server&lt;C&gt;","synthetic":true,"types":[]},{"text":"impl&lt;C&gt; Unpin for PdMock&lt;C&gt;","synthetic":true,"types":[]}];
implementors["test_raftstore"] = [{"text":"impl&lt;T&gt; Unpin for Cluster&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ChannelTransportCore","synthetic":true,"types":[]},{"text":"impl Unpin for ChannelTransport","synthetic":true,"types":[]},{"text":"impl Unpin for NodeCluster","synthetic":true,"types":[]},{"text":"impl Unpin for Store","synthetic":true,"types":[]},{"text":"impl Unpin for SchedulePolicy","synthetic":true,"types":[]},{"text":"impl Unpin for Operator","synthetic":true,"types":[]},{"text":"impl Unpin for Cluster","synthetic":true,"types":[]},{"text":"impl Unpin for TestPdClient","synthetic":true,"types":[]},{"text":"impl Unpin for MockRaftStoreRouter","synthetic":true,"types":[]},{"text":"impl Unpin for AddressMap","synthetic":true,"types":[]},{"text":"impl Unpin for ServerMeta","synthetic":true,"types":[]},{"text":"impl Unpin for ServerCluster","synthetic":true,"types":[]},{"text":"impl Unpin for MessageTypeNotifier","synthetic":true,"types":[]},{"text":"impl Unpin for DropPacketFilter","synthetic":true,"types":[]},{"text":"impl Unpin for DelayFilter","synthetic":true,"types":[]},{"text":"impl&lt;C&gt; Unpin for SimulateTransport&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Unpin for DefaultFilterFactory&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Unpin for CloneFilterFactory&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for PartitionFilter","synthetic":true,"types":[]},{"text":"impl Unpin for PartitionFilterFactory","synthetic":true,"types":[]},{"text":"impl Unpin for IsolationFilterFactory","synthetic":true,"types":[]},{"text":"impl Unpin for Direction","synthetic":true,"types":[]},{"text":"impl Unpin for RegionPacketFilter","synthetic":true,"types":[]},{"text":"impl Unpin for SnapshotFilter","synthetic":true,"types":[]},{"text":"impl Unpin for CollectSnapshotFilter","synthetic":true,"types":[]},{"text":"impl Unpin for DropSnapshotFilter","synthetic":true,"types":[]},{"text":"impl Unpin for RecvSnapshotFilter","synthetic":true,"types":[]},{"text":"impl Unpin for LeadingFilter","synthetic":true,"types":[]},{"text":"impl Unpin for LeadingDuplicatedSnapshotFilter","synthetic":true,"types":[]},{"text":"impl Unpin for RandomLatencyFilter","synthetic":true,"types":[]},{"text":"impl Unpin for LeaseReadFilter","synthetic":true,"types":[]},{"text":"impl Unpin for DropMessageFilter","synthetic":true,"types":[]},{"text":"impl Unpin for TEST_CONFIG","synthetic":true,"types":[]}];
implementors["test_sst_importer"] = [{"text":"impl Unpin for TestPropertiesCollectorFactory","synthetic":true,"types":[]},{"text":"impl Unpin for TestPropertiesCollector","synthetic":true,"types":[]}];
implementors["test_storage"] = [{"text":"impl&lt;E&gt; Unpin for AssertionStorage&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for SyncTestStorageBuilder&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for SyncTestStorage&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["test_util"] = [{"text":"impl Unpin for KvGenerator","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Serializer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for CaseTraceLogger","synthetic":true,"types":[]},{"text":"impl Unpin for Never","synthetic":true,"types":[]},{"text":"impl Unpin for Nope","synthetic":true,"types":[]},{"text":"impl&lt;H&gt; Unpin for CaseLifeWatcher&lt;H&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for FailpointHook","synthetic":true,"types":[]}];
implementors["textwrap"] = [{"text":"impl Unpin for NoHyphenation","synthetic":true,"types":[]},{"text":"impl Unpin for HyphenSplitter","synthetic":true,"types":[]},{"text":"impl&lt;'a, S&gt; Unpin for Wrapper&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, S&gt; Unpin for IntoWrapIter&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'w, 'a, S&gt; Unpin for WrapIter&lt;'w, 'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'a: 'w,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["thread_local"] = [{"text":"impl&lt;T&gt; Unpin for CachedThreadLocal&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for CachedIterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for CachedIntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for ThreadLocal&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for IntoIter&lt;T&gt;","synthetic":true,"types":[]}];
implementors["tidb_query_aggr"] = [{"text":"impl Unpin for AggrFnDefinitionParserAvg","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for AggrFnAvg&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for AggrFnStateAvg&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for AggrFnAvgForEnum","synthetic":true,"types":[]},{"text":"impl Unpin for AggrFnStateAvgForEnum","synthetic":true,"types":[]},{"text":"impl Unpin for AggrFnAvgForSet","synthetic":true,"types":[]},{"text":"impl Unpin for AggrFnStateAvgForSet","synthetic":true,"types":[]},{"text":"impl Unpin for BitAnd","synthetic":true,"types":[]},{"text":"impl Unpin for BitOr","synthetic":true,"types":[]},{"text":"impl Unpin for BitXor","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for AggrFnDefinitionParserBitOp&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for AggrFnBitOp&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for AggrFnStateBitOp&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for AggrFnDefinitionParserCount","synthetic":true,"types":[]},{"text":"impl Unpin for AggrFnCount","synthetic":true,"types":[]},{"text":"impl Unpin for AggrFnStateCount","synthetic":true,"types":[]},{"text":"impl Unpin for AggrFnDefinitionParserFirst","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for AggrFnFirst&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for AggrFnStateFirst&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as EvaluableRef&lt;'static&gt;&gt;::EvaluableType: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Max","synthetic":true,"types":[]},{"text":"impl Unpin for Min","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for AggrFnDefinitionParserExtremum&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;C, E&gt; Unpin for AggFnExtremumForBytes&lt;C, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;C, E&gt; Unpin for AggFnStateExtremum4Bytes&lt;C, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for AggFnExtremumForEnum&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for AggFnStateExtremumForEnum&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for AggFnExtremumForSet&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for AggFnStateExtremumForSet&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, E&gt; Unpin for AggFnExtremum&lt;T, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, E&gt; Unpin for AggFnStateExtremum&lt;T, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as EvaluableRef&lt;'static&gt;&gt;::EvaluableType: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for AggrFnDefinitionParserSum","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for AggrFnSum&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for AggrFnStateSum&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for AggrFnSumForEnum","synthetic":true,"types":[]},{"text":"impl Unpin for AggrFnStateSumForEnum","synthetic":true,"types":[]},{"text":"impl Unpin for AggrFnSumForSet","synthetic":true,"types":[]},{"text":"impl Unpin for AggrFnStateSumForSet","synthetic":true,"types":[]},{"text":"impl Unpin for AllAggrDefinitionParser","synthetic":true,"types":[]}];
implementors["tidb_query_codegen"] = [{"text":"impl Unpin for state","synthetic":true,"types":[]},{"text":"impl Unpin for AggrFunctionStateExpr","synthetic":true,"types":[]},{"text":"impl Unpin for AggrFunctionOpts","synthetic":true,"types":[]},{"text":"impl Unpin for Option","synthetic":true,"types":[]},{"text":"impl Unpin for RpnFnAttr","synthetic":true,"types":[]},{"text":"impl Unpin for RpnFnRefEvaluableTypeWithOption","synthetic":true,"types":[]},{"text":"impl Unpin for RpnFnEvaluableType","synthetic":true,"types":[]},{"text":"impl Unpin for RpnFnRefEvaluableType","synthetic":true,"types":[]},{"text":"impl Unpin for RpnFnSignatureParam","synthetic":true,"types":[]},{"text":"impl Unpin for VargsRpnFnSignatureParam","synthetic":true,"types":[]},{"text":"impl Unpin for RpnFnSignatureReturnGuardType","synthetic":true,"types":[]},{"text":"impl Unpin for RpnFnSignatureReturnType","synthetic":true,"types":[]},{"text":"impl Unpin for ValidatorFnGenerator","synthetic":true,"types":[]},{"text":"impl Unpin for VargsRpnFn","synthetic":true,"types":[]},{"text":"impl Unpin for RawVargsRpnFn","synthetic":true,"types":[]},{"text":"impl Unpin for NormalRpnFn","synthetic":true,"types":[]}];
implementors["tidb_query_common"] = [{"text":"impl Unpin for EvaluateError","synthetic":true,"types":[]},{"text":"impl Unpin for StorageError","synthetic":true,"types":[]},{"text":"impl Unpin for ErrorInner","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for ExecSummary","synthetic":true,"types":[]},{"text":"impl Unpin for ExecSummaryCollectorEnabled","synthetic":true,"types":[]},{"text":"impl Unpin for ExecSummaryCollectorDisabled","synthetic":true,"types":[]},{"text":"impl&lt;C, T&gt; Unpin for WithSummaryCollector&lt;C, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ExecuteStats","synthetic":true,"types":[]},{"text":"impl Unpin for LocalCoprExecutorCountInner","synthetic":true,"types":[]},{"text":"impl Unpin for LocalCoprExecutorCountDelegator","synthetic":true,"types":[]},{"text":"impl Unpin for LocalCoprExecutorCount","synthetic":true,"types":[]},{"text":"impl Unpin for ExecutorName","synthetic":true,"types":[]},{"text":"impl Unpin for COPR_EXECUTOR_COUNT","synthetic":true,"types":[]},{"text":"impl Unpin for EXECUTOR_COUNT_METRICS","synthetic":true,"types":[]},{"text":"impl Unpin for Range","synthetic":true,"types":[]},{"text":"impl Unpin for IntervalRange","synthetic":true,"types":[]},{"text":"impl Unpin for PointRange","synthetic":true,"types":[]},{"text":"impl Unpin for IterStatus","synthetic":true,"types":[]},{"text":"impl Unpin for RangesIterator","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for RangesScanner&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for RangesScannerOptions&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for FixtureStorage","synthetic":true,"types":[]}];
implementors["tidb_query_datatype"] = [{"text":"impl Unpin for FieldTypeBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for EvalType","synthetic":true,"types":[]},{"text":"impl Unpin for FieldTypeTp","synthetic":true,"types":[]},{"text":"impl Unpin for Collation","synthetic":true,"types":[]},{"text":"impl Unpin for FieldTypeFlag","synthetic":true,"types":[]},{"text":"impl Unpin for DataTypeError","synthetic":true,"types":[]},{"text":"impl Unpin for LazyBatchColumn","synthetic":true,"types":[]},{"text":"impl Unpin for LazyBatchColumnVec","synthetic":true,"types":[]},{"text":"impl Unpin for Chunk","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Row&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for RowIterator&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Column","synthetic":true,"types":[]},{"text":"impl Unpin for CharsetBinary","synthetic":true,"types":[]},{"text":"impl Unpin for CharsetUtf8mb4","synthetic":true,"types":[]},{"text":"impl Unpin for CollatorBinary","synthetic":true,"types":[]},{"text":"impl Unpin for CollatorLatin1Bin","synthetic":true,"types":[]},{"text":"impl Unpin for CollatorUtf8Mb4Bin","synthetic":true,"types":[]},{"text":"impl Unpin for CollatorUtf8Mb4BinNoPadding","synthetic":true,"types":[]},{"text":"impl Unpin for CollatorUtf8Mb4GeneralCi","synthetic":true,"types":[]},{"text":"impl Unpin for CollatorUtf8Mb4UnicodeCi","synthetic":true,"types":[]},{"text":"impl&lt;T, C&gt; Unpin for SortKey&lt;T, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for BitVec","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for BitAndIterator&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ChunkedVecBytes","synthetic":true,"types":[]},{"text":"impl Unpin for BytesWriter","synthetic":true,"types":[]},{"text":"impl Unpin for PartialBytesWriter","synthetic":true,"types":[]},{"text":"impl Unpin for BytesGuard","synthetic":true,"types":[]},{"text":"impl Unpin for ChunkedVecEnum","synthetic":true,"types":[]},{"text":"impl Unpin for ChunkedVecJson","synthetic":true,"types":[]},{"text":"impl Unpin for ChunkedVecSet","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for ChunkedVecSized&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for LogicalRows&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for LogicalRowsIterator&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ScalarValue","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ScalarValueRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for VectorValue","synthetic":true,"types":[]},{"text":"impl Unpin for Datum","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for BinaryLiteral","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Res&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Decimal","synthetic":true,"types":[]},{"text":"impl Unpin for RoundMode","synthetic":true,"types":[]},{"text":"impl Unpin for Duration","synthetic":true,"types":[]},{"text":"impl Unpin for Enum","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for EnumRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for BinaryModifier&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for PathLeg","synthetic":true,"types":[]},{"text":"impl Unpin for PathExpression","synthetic":true,"types":[]},{"text":"impl Unpin for JsonVisitor","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for MergeUnit&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ModifyType","synthetic":true,"types":[]},{"text":"impl Unpin for JsonType","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for JsonRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Json","synthetic":true,"types":[]},{"text":"impl Unpin for Set","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SetRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Tz","synthetic":true,"types":[]},{"text":"impl Unpin for TzOffset","synthetic":true,"types":[]},{"text":"impl Unpin for WeekMode","synthetic":true,"types":[]},{"text":"impl Unpin for Time","synthetic":true,"types":[]},{"text":"impl Unpin for TimeType","synthetic":true,"types":[]},{"text":"impl Unpin for TimeArgs","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for RowSlice&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for LEBytes&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Column","synthetic":true,"types":[]},{"text":"impl Unpin for Flags","synthetic":true,"types":[]},{"text":"impl Unpin for RowColMeta","synthetic":true,"types":[]},{"text":"impl Unpin for RowColsDict","synthetic":true,"types":[]},{"text":"impl Unpin for SqlMode","synthetic":true,"types":[]},{"text":"impl Unpin for Flag","synthetic":true,"types":[]},{"text":"impl Unpin for EvalConfig","synthetic":true,"types":[]},{"text":"impl Unpin for EvalWarnings","synthetic":true,"types":[]},{"text":"impl Unpin for EvalContext","synthetic":true,"types":[]}];
implementors["tidb_query_executors"] = [{"text":"impl&lt;Src&gt; Unpin for BatchFastHashAggregationExecutor&lt;Src&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Src: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Groups","synthetic":true,"types":[]},{"text":"impl Unpin for FastHashAggregationImpl","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for BatchIndexScanExecutor&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for DecodeHandleStrategy","synthetic":true,"types":[]},{"text":"impl Unpin for IndexScanExecutorImpl","synthetic":true,"types":[]},{"text":"impl Unpin for BatchExecuteResult","synthetic":true,"types":[]},{"text":"impl&lt;Src&gt; Unpin for BatchLimitExecutor&lt;Src&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Src: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;SS&gt; Unpin for BatchExecutorsRunner&lt;SS&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Src&gt; Unpin for BatchSelectionExecutor&lt;Src&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Src: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Src&gt; Unpin for BatchSimpleAggregationExecutor&lt;Src&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Src: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for SimpleAggregationImpl","synthetic":true,"types":[]},{"text":"impl&lt;Src&gt; Unpin for BatchSlowHashAggregationExecutor&lt;Src&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Src: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for SlowHashAggregationImpl","synthetic":true,"types":[]},{"text":"impl Unpin for GroupKeyRefUnsafe","synthetic":true,"types":[]},{"text":"impl&lt;Src&gt; Unpin for BatchStreamAggregationExecutor&lt;Src&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Src: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for BatchStreamAggregationImpl","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for BatchTableScanExecutor&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for TableScanExecutorImpl","synthetic":true,"types":[]},{"text":"impl&lt;Src&gt; Unpin for BatchTopNExecutor&lt;Src&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Src: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for HeapItemSourceData","synthetic":true,"types":[]},{"text":"impl Unpin for HeapItemUnsafe","synthetic":true,"types":[]},{"text":"impl&lt;Src&gt; Unpin for Entities&lt;Src&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Src: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Src, I&gt; Unpin for AggregationExecutor&lt;Src, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Src: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for HashAggregationHelper","synthetic":true,"types":[]},{"text":"impl&lt;S, I&gt; Unpin for ScanExecutor&lt;S, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, I&gt; Unpin for ScanExecutorOptions&lt;S, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["tidb_query_expr"] = [{"text":"impl Unpin for RpnExpressionNode","synthetic":true,"types":[]},{"text":"impl Unpin for RpnExpression","synthetic":true,"types":[]},{"text":"impl Unpin for RpnExpressionBuilder","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for RpnStackNodeVectorValue&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for RpnStackNode&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for RpnFnMeta","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for RpnFnCallExtra&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for ScalarArg&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, C&gt; Unpin for VectorArg&lt;'a, T, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, Rem&gt; Unpin for Arg&lt;A, Rem&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Rem: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Null","synthetic":true,"types":[]},{"text":"impl&lt;'a, A, E&gt; Unpin for ArgConstructor&lt;'a, A, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for Arithmetic_Evaluator&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for ArithmeticWithCtx_Evaluator&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for IntIntPlus","synthetic":true,"types":[]},{"text":"impl Unpin for IntUintPlus","synthetic":true,"types":[]},{"text":"impl Unpin for UintIntPlus","synthetic":true,"types":[]},{"text":"impl Unpin for UintUintPlus","synthetic":true,"types":[]},{"text":"impl Unpin for RealPlus","synthetic":true,"types":[]},{"text":"impl Unpin for DecimalPlus","synthetic":true,"types":[]},{"text":"impl Unpin for IntIntMinus","synthetic":true,"types":[]},{"text":"impl Unpin for IntUintMinus","synthetic":true,"types":[]},{"text":"impl Unpin for UintIntMinus","synthetic":true,"types":[]},{"text":"impl Unpin for UintUintMinus","synthetic":true,"types":[]},{"text":"impl Unpin for RealMinus","synthetic":true,"types":[]},{"text":"impl Unpin for DecimalMinus","synthetic":true,"types":[]},{"text":"impl Unpin for IntIntMod","synthetic":true,"types":[]},{"text":"impl Unpin for IntUintMod","synthetic":true,"types":[]},{"text":"impl Unpin for UintIntMod","synthetic":true,"types":[]},{"text":"impl Unpin for UintUintMod","synthetic":true,"types":[]},{"text":"impl Unpin for RealMod","synthetic":true,"types":[]},{"text":"impl Unpin for DecimalMod","synthetic":true,"types":[]},{"text":"impl Unpin for DecimalMultiply","synthetic":true,"types":[]},{"text":"impl Unpin for RealMultiply","synthetic":true,"types":[]},{"text":"impl Unpin for IntIntMultiply","synthetic":true,"types":[]},{"text":"impl Unpin for IntUintMultiply","synthetic":true,"types":[]},{"text":"impl Unpin for UintIntMultiply","synthetic":true,"types":[]},{"text":"impl Unpin for UintUintMultiply","synthetic":true,"types":[]},{"text":"impl Unpin for IntDivideInt","synthetic":true,"types":[]},{"text":"impl Unpin for IntDivideUint","synthetic":true,"types":[]},{"text":"impl Unpin for UintDivideUint","synthetic":true,"types":[]},{"text":"impl Unpin for UintDivideInt","synthetic":true,"types":[]},{"text":"impl Unpin for IntDivideDecimal_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for DecimalDivide","synthetic":true,"types":[]},{"text":"impl Unpin for RealDivide","synthetic":true,"types":[]},{"text":"impl Unpin for CastSignedIntAsUnsignedInt_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for CastIntAsIntOthers_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for CastRealAsUint_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for CastStringAsInt_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for CastBinaryStringAsInt_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for CastEnumAsInt_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for CastSetAsInt_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for CastDecimalAsUint_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for CastJsonAsUint_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for CastSignedIntAsSignedReal_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for CastSignedIntAsUnsignedReal_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for CastUnsignedIntAsSignedOrUnsignedReal_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for CastRealAsSignedReal_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for CastRealAsUnsignedReal_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for CastStringAsSignedReal_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for CastBinaryStringAsSignedReal_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for CastStringAsUnsignedReal_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for CastBinaryStringAsUnsignedReal_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for CastDecimalAsUnsignedReal_Evaluator","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for CastAnyAsString_Evaluator&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for CastYearAsString_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for CastUintAsString_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for CastFloatRealAsString_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for CastStringAsString_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for CastUnsignedIntAsSignedOrUnsignedDecimal_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for CastSignedIntAsUnsignedDecimal_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for CastRealAsDecimal_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for CastStringAsUnsignedDecimal_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for CastDecimalAsSignedDecimal_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for CastDecimalAsUnsignedDecimal_Evaluator","synthetic":true,"types":[]},{"text":"impl&lt;From&gt; Unpin for CastAnyAsDecimal_Evaluator&lt;From&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;From: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for CastJsonAsDecimal_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for CastBytesAsDecimal_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for CastIntAsDuration_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for CastTimeAsDuration_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for CastDurationAsDuration_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for CastRealAsDuration_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for CastBytesAsDuration_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for CastDecimalAsDuration_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for CastJsonAsDuration_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for CastIntAsTime_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for CastYearAsTime_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for CastRealAsTime_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for CastStringAsTime_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for CastDecimalAsTime_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for CastTimeAsTime_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for CastDurationAsTime_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for CastBoolAsJson_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for CastUintAsJson_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for CastStringAsJson_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for CastJsonAsJson_Evaluator","synthetic":true,"types":[]},{"text":"impl&lt;From, To&gt; Unpin for CastAnyAsAny_Evaluator&lt;From, To&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;From: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;To: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;To&gt; Unpin for CastJsonAsAny_Evaluator&lt;To&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;To: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;From&gt; Unpin for CastAnyAsJson_Evaluator&lt;From&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;From: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;From&gt; Unpin for CastAnyAsBytes_Evaluator&lt;From&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;From: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for CastJsonAsBytes_Evaluator","synthetic":true,"types":[]},{"text":"impl&lt;C&gt; Unpin for Compare_Evaluator&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Unpin for CompareJson_Evaluator&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;C, F&gt; Unpin for CompareBytes_Evaluator&lt;C, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, F&gt; Unpin for BasicComparer&lt;T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Unpin for UintUintComparer&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Unpin for UintIntComparer&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Unpin for IntUintComparer&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for CmpOpLT","synthetic":true,"types":[]},{"text":"impl Unpin for CmpOpLE","synthetic":true,"types":[]},{"text":"impl Unpin for CmpOpGT","synthetic":true,"types":[]},{"text":"impl Unpin for CmpOpGE","synthetic":true,"types":[]},{"text":"impl Unpin for CmpOpNE","synthetic":true,"types":[]},{"text":"impl Unpin for CmpOpEQ","synthetic":true,"types":[]},{"text":"impl Unpin for CmpOpNullEQ","synthetic":true,"types":[]},{"text":"impl&lt;K&gt; Unpin for NormalInByHash&lt;K&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;C&gt; Unpin for CollationAwareBytesInByHash&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for CompareInMeta&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for IfNull_Evaluator&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for IfNullJson_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for IfNullBytes_Evaluator","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for IfCondition_Evaluator&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for IfConditionJson_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for IfConditionBytes_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Md5_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Sha1_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Sha2_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Compress_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Uncompress_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Password_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for UncompressedLength_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for RandomBytes_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for JsonDepth_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for JsonType_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for JsonUnquote_Evaluator","synthetic":true,"types":[]},{"text":"impl&lt;C&gt; Unpin for Like_Evaluator&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Pi_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Crc32_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Log1Arg_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Log2Arg_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Log2_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Log10_Evaluator","synthetic":true,"types":[]},{"text":"impl&lt;C&gt; Unpin for Ceil_Evaluator&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for CeilReal","synthetic":true,"types":[]},{"text":"impl Unpin for CeilDecToDec","synthetic":true,"types":[]},{"text":"impl Unpin for CeilIntToDec","synthetic":true,"types":[]},{"text":"impl Unpin for CeilDecToInt","synthetic":true,"types":[]},{"text":"impl Unpin for CeilIntToInt","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Floor_Evaluator&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for FloorReal","synthetic":true,"types":[]},{"text":"impl Unpin for FloorIntToDec","synthetic":true,"types":[]},{"text":"impl Unpin for FloorDecToInt","synthetic":true,"types":[]},{"text":"impl Unpin for FloorDecToDec","synthetic":true,"types":[]},{"text":"impl Unpin for FloorIntToInt","synthetic":true,"types":[]},{"text":"impl Unpin for AbsInt_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for AbsUint_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for AbsReal_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for AbsDecimal_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Sign_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Sqrt_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Radians_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Exp_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Sin_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Cos_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Tan_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Cot_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Pow_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Rand_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for RandWithSeedFirstGen_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Degrees_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Asin_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Acos_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Atan1Arg_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Atan2Args_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Conv_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for RoundReal_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for RoundInt_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for RoundDec_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for TruncateIntWithInt_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for TruncateIntWithUint_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for TruncateRealWithInt_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for TruncateRealWithUint_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for RoundWithFracInt_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for RoundWithFracDec_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for RoundWithFracReal_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for IntWithSign","synthetic":true,"types":[]},{"text":"impl Unpin for MySQLRng","synthetic":true,"types":[]},{"text":"impl Unpin for InetAton_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for InetNtoa_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Inet6Aton_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Inet6Ntoa_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for IsIpv4_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for IsIpv4Compat_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for IsIpv4Mapped_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for IsIpv6_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Uuid_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for LogicalAnd_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for LogicalOr_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for LogicalXor_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for UnaryNotInt_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for UnaryNotReal_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for UnaryNotDecimal_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for UnaryMinusUint_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for UnaryMinusInt_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for UnaryMinusReal_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for UnaryMinusDecimal_Evaluator","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for IsNull_Evaluator&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for IsNullBytes_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for IsNullJson_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for BitAnd_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for BitOr_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for BitXor_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for BitNeg_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for KeepNullOn","synthetic":true,"types":[]},{"text":"impl Unpin for KeepNullOff","synthetic":true,"types":[]},{"text":"impl&lt;K&gt; Unpin for IntIsTrue_Evaluator&lt;K&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K&gt; Unpin for RealIsTrue_Evaluator&lt;K&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K&gt; Unpin for DecimalIsTrue_Evaluator&lt;K&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K&gt; Unpin for IntIsFalse_Evaluator&lt;K&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K&gt; Unpin for RealIsFalse_Evaluator&lt;K&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K&gt; Unpin for DecimalIsFalse_Evaluator&lt;K&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for LeftShift_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for RightShift_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for BitCount_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Bin_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for OctInt_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for OctString_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Length_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Unhex_Evaluator","synthetic":true,"types":[]},{"text":"impl&lt;C&gt; Unpin for Locate2ArgsUtf8_Evaluator&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;C&gt; Unpin for Locate3ArgsUtf8_Evaluator&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for BitLength_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Ord_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Ascii_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for ReverseUtf8_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for HexIntArg_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Ltrim_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Rtrim_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Lpad_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for LpadUtf8_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Rpad_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Replace_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Left_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for LeftUtf8_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Right_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Insert_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for RightUtf8_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for UpperUtf8_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Upper_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for HexStrArg_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Locate2Args_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Reverse_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Locate3Args_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Space_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for SubstringIndex_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Strcmp_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for InstrUtf8_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for FindInSet_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Trim1Arg_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Trim3Args_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for TrimDirection","synthetic":true,"types":[]},{"text":"impl Unpin for CharLength_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for CharLengthUtf8_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for ToBase64_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for FromBase64_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Quote_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Repeat_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Substring2Args_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Substring3Args_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for DateFormat_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for WeekWithMode_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for WeekWithoutMode_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for WeekDay_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for DayOfWeek_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for DayOfYear_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for WeekOfYear_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for YearWeekWithMode_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for YearWeekWithoutMode_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for ToDays_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for ToSeconds_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for AddStringAndDuration_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for SubStringAndDuration_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for DateDiff_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for AddDatetimeAndDuration_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for SubDurationAndDuration_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for SubDatetimeAndDuration_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for FromDays_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for MakeDate_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for MakeTime_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Month_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for MonthName_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Hour_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Minute_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Second_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for TimeToSec_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for MicroSecond_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for Year_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for DayOfMonth_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for DayName_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for PeriodAdd_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for PeriodDiff_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for LastDay_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for AddDurationAndDuration_Evaluator","synthetic":true,"types":[]},{"text":"impl Unpin for AddDurationAndString_Evaluator","synthetic":true,"types":[]}];
implementors["tikv"] = [{"text":"impl Unpin for TitanCfConfig","synthetic":true,"types":[]},{"text":"impl Unpin for DefaultCfConfig","synthetic":true,"types":[]},{"text":"impl Unpin for WriteCfConfig","synthetic":true,"types":[]},{"text":"impl Unpin for LockCfConfig","synthetic":true,"types":[]},{"text":"impl Unpin for RaftCfConfig","synthetic":true,"types":[]},{"text":"impl Unpin for VersionCfConfig","synthetic":true,"types":[]},{"text":"impl Unpin for TitanDBConfig","synthetic":true,"types":[]},{"text":"impl Unpin for DbConfig","synthetic":true,"types":[]},{"text":"impl Unpin for RaftDefaultCfConfig","synthetic":true,"types":[]},{"text":"impl Unpin for RaftDbConfig","synthetic":true,"types":[]},{"text":"impl Unpin for RaftEngineConfig","synthetic":true,"types":[]},{"text":"impl Unpin for DBType","synthetic":true,"types":[]},{"text":"impl Unpin for DBConfigManger","synthetic":true,"types":[]},{"text":"impl Unpin for MetricConfig","synthetic":true,"types":[]},{"text":"impl Unpin for UnifiedReadPoolConfig","synthetic":true,"types":[]},{"text":"impl Unpin for StorageReadPoolConfig","synthetic":true,"types":[]},{"text":"impl Unpin for CoprReadPoolConfig","synthetic":true,"types":[]},{"text":"impl Unpin for ReadPoolConfig","synthetic":true,"types":[]},{"text":"impl Unpin for BackupConfig","synthetic":true,"types":[]},{"text":"impl Unpin for CdcConfig","synthetic":true,"types":[]},{"text":"impl Unpin for TiKvConfig","synthetic":true,"types":[]},{"text":"impl Unpin for TIKVCONFIG_TYPED","synthetic":true,"types":[]},{"text":"impl Unpin for Module","synthetic":true,"types":[]},{"text":"impl Unpin for ConfigController","synthetic":true,"types":[]},{"text":"impl Unpin for ConfigInner","synthetic":true,"types":[]},{"text":"impl Unpin for CachedRequestHandler","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for ChecksumContext&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as Snapshot&gt;::Iter: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for TiKVStorage&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as Store&gt;::Scanner: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for DagHandlerBuilder&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for BatchDAGHandler","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for Endpoint&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl&lt;'pin, 'a, PF, F&gt; Unpin for __ConcurrencyLimiterProjection&lt;'pin, 'a, PF, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'a: 'pin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'pin, 'a, PF, F&gt; Unpin for __ConcurrencyLimiterProjectionRef&lt;'pin, 'a, PF, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'a: 'pin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for LimitationState&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'pin, 'a, F&gt; Unpin for __TrackerProjection&lt;'pin, 'a, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'a: 'pin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'pin, 'a, F&gt; Unpin for __TrackerProjectionRef&lt;'pin, 'a, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'a: 'pin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for CoprReqHistogramInner","synthetic":true,"types":[]},{"text":"impl Unpin for CoprReqHistogramDelegator","synthetic":true,"types":[]},{"text":"impl Unpin for CoprReqHistogram","synthetic":true,"types":[]},{"text":"impl Unpin for ReqWaitHistogramInner","synthetic":true,"types":[]},{"text":"impl Unpin for ReqWaitHistogramDelegator","synthetic":true,"types":[]},{"text":"impl Unpin for ReqWaitHistogram2Inner","synthetic":true,"types":[]},{"text":"impl Unpin for ReqWaitHistogram2Delegator","synthetic":true,"types":[]},{"text":"impl Unpin for ReqWaitHistogram","synthetic":true,"types":[]},{"text":"impl Unpin for PerfCounterInner","synthetic":true,"types":[]},{"text":"impl Unpin for PerfCounterDelegator","synthetic":true,"types":[]},{"text":"impl Unpin for PerfCounter2Inner","synthetic":true,"types":[]},{"text":"impl Unpin for PerfCounter2Delegator","synthetic":true,"types":[]},{"text":"impl Unpin for PerfCounter","synthetic":true,"types":[]},{"text":"impl Unpin for CoprScanKeysHistogramInner","synthetic":true,"types":[]},{"text":"impl Unpin for CoprScanKeysHistogramDelegator","synthetic":true,"types":[]},{"text":"impl Unpin for CoprScanKeysHistogram2Inner","synthetic":true,"types":[]},{"text":"impl Unpin for CoprScanKeysHistogram2Delegator","synthetic":true,"types":[]},{"text":"impl Unpin for CoprScanKeysHistogram","synthetic":true,"types":[]},{"text":"impl Unpin for CoprScanDetailsInner","synthetic":true,"types":[]},{"text":"impl Unpin for CoprScanDetailsDelegator","synthetic":true,"types":[]},{"text":"impl Unpin for CoprScanDetails2Inner","synthetic":true,"types":[]},{"text":"impl Unpin for CoprScanDetails2Delegator","synthetic":true,"types":[]},{"text":"impl Unpin for CoprScanDetails3Inner","synthetic":true,"types":[]},{"text":"impl Unpin for CoprScanDetails3Delegator","synthetic":true,"types":[]},{"text":"impl Unpin for CoprScanDetails","synthetic":true,"types":[]},{"text":"impl Unpin for CoprAcquireSemaphoreTypeCounterVec","synthetic":true,"types":[]},{"text":"impl Unpin for ReqTag","synthetic":true,"types":[]},{"text":"impl Unpin for CF","synthetic":true,"types":[]},{"text":"impl Unpin for ScanKeysKind","synthetic":true,"types":[]},{"text":"impl Unpin for ScanKind","synthetic":true,"types":[]},{"text":"impl Unpin for WaitType","synthetic":true,"types":[]},{"text":"impl Unpin for PerfMetric","synthetic":true,"types":[]},{"text":"impl Unpin for COPR_REQ_HISTOGRAM_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for COPR_REQ_HISTOGRAM_STATIC","synthetic":true,"types":[]},{"text":"impl Unpin for COPR_REQ_HANDLE_TIME","synthetic":true,"types":[]},{"text":"impl Unpin for COPR_REQ_HANDLE_TIME_STATIC","synthetic":true,"types":[]},{"text":"impl Unpin for COPR_REQ_WAIT_TIME","synthetic":true,"types":[]},{"text":"impl Unpin for COPR_REQ_WAIT_TIME_STATIC","synthetic":true,"types":[]},{"text":"impl Unpin for COPR_REQ_HANDLER_BUILD_TIME","synthetic":true,"types":[]},{"text":"impl Unpin for COPR_REQ_HANDLER_BUILD_TIME_STATIC","synthetic":true,"types":[]},{"text":"impl Unpin for COPR_REQ_ERROR","synthetic":true,"types":[]},{"text":"impl Unpin for COPR_SCAN_KEYS","synthetic":true,"types":[]},{"text":"impl Unpin for COPR_SCAN_KEYS_STATIC","synthetic":true,"types":[]},{"text":"impl Unpin for COPR_SCAN_DETAILS","synthetic":true,"types":[]},{"text":"impl Unpin for COPR_SCAN_DETAILS_STATIC","synthetic":true,"types":[]},{"text":"impl Unpin for COPR_ROCKSDB_PERF_COUNTER","synthetic":true,"types":[]},{"text":"impl Unpin for COPR_ROCKSDB_PERF_COUNTER_STATIC","synthetic":true,"types":[]},{"text":"impl Unpin for COPR_DAG_REQ_COUNT","synthetic":true,"types":[]},{"text":"impl Unpin for COPR_RESP_SIZE","synthetic":true,"types":[]},{"text":"impl Unpin for COPR_ACQUIRE_SEMAPHORE_TYPE","synthetic":true,"types":[]},{"text":"impl Unpin for COPR_WAITING_FOR_SEMAPHORE","synthetic":true,"types":[]},{"text":"impl Unpin for AcquireSemaphoreType","synthetic":true,"types":[]},{"text":"impl Unpin for CopLocalMetrics","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for FuturePoolTicker&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for AnalyzeContext&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as Snapshot&gt;::Iter: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for SampleBuilder&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as Snapshot&gt;::Iter: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for SampleCollector","synthetic":true,"types":[]},{"text":"impl Unpin for CmSketch","synthetic":true,"types":[]},{"text":"impl Unpin for FmSketch","synthetic":true,"types":[]},{"text":"impl Unpin for Bucket","synthetic":true,"types":[]},{"text":"impl Unpin for Histogram","synthetic":true,"types":[]},{"text":"impl Unpin for TrackerState","synthetic":true,"types":[]},{"text":"impl Unpin for Tracker","synthetic":true,"types":[]},{"text":"impl Unpin for ReqContext","synthetic":true,"types":[]},{"text":"impl&lt;E, Router&gt; Unpin for ImportSSTService&lt;E, Router&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Router: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for UNIFIED_READ_POOL_RUNNING_TASKS","synthetic":true,"types":[]},{"text":"impl Unpin for ReadPool","synthetic":true,"types":[]},{"text":"impl Unpin for ReadPoolHandle","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for ReporterTicker&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ReadPoolError","synthetic":true,"types":[]},{"text":"impl Unpin for GcCommandCounterVecInner","synthetic":true,"types":[]},{"text":"impl Unpin for GcCommandCounterVecDelegator","synthetic":true,"types":[]},{"text":"impl Unpin for GcCommandCounterVec","synthetic":true,"types":[]},{"text":"impl Unpin for SnapTaskCounterVecInner","synthetic":true,"types":[]},{"text":"impl Unpin for SnapTaskCounterVecDelegator","synthetic":true,"types":[]},{"text":"impl Unpin for SnapTaskCounterVec","synthetic":true,"types":[]},{"text":"impl Unpin for GcTaskCounterVecInner","synthetic":true,"types":[]},{"text":"impl Unpin for GcTaskCounterVecDelegator","synthetic":true,"types":[]},{"text":"impl Unpin for GcTaskCounterVec","synthetic":true,"types":[]},{"text":"impl Unpin for GcTaskFailCounterVecInner","synthetic":true,"types":[]},{"text":"impl Unpin for GcTaskFailCounterVecDelegator","synthetic":true,"types":[]},{"text":"impl Unpin for GcTaskFailCounterVec","synthetic":true,"types":[]},{"text":"impl Unpin for ResolveStoreCounterVecInner","synthetic":true,"types":[]},{"text":"impl Unpin for ResolveStoreCounterVecDelegator","synthetic":true,"types":[]},{"text":"impl Unpin for ResolveStoreCounterVec","synthetic":true,"types":[]},{"text":"impl Unpin for GrpcMsgFailCounterVecInner","synthetic":true,"types":[]},{"text":"impl Unpin for GrpcMsgFailCounterVecDelegator","synthetic":true,"types":[]},{"text":"impl Unpin for GrpcMsgFailCounterVec","synthetic":true,"types":[]},{"text":"impl Unpin for GcKeysCounterVecInner","synthetic":true,"types":[]},{"text":"impl Unpin for GcKeysCounterVecDelegator","synthetic":true,"types":[]},{"text":"impl Unpin for GcKeysCounterVec2Inner","synthetic":true,"types":[]},{"text":"impl Unpin for GcKeysCounterVec2Delegator","synthetic":true,"types":[]},{"text":"impl Unpin for GcKeysCounterVec","synthetic":true,"types":[]},{"text":"impl Unpin for GrpcMsgHistogramVecInner","synthetic":true,"types":[]},{"text":"impl Unpin for GrpcMsgHistogramVecDelegator","synthetic":true,"types":[]},{"text":"impl Unpin for GrpcMsgHistogramVec","synthetic":true,"types":[]},{"text":"impl Unpin for GrpcMsgHistogramGlobal","synthetic":true,"types":[]},{"text":"impl Unpin for RequestBatchSizeHistogramVec","synthetic":true,"types":[]},{"text":"impl Unpin for RequestBatchRatioHistogramVec","synthetic":true,"types":[]},{"text":"impl Unpin for AsyncRequestsCounterVecInner","synthetic":true,"types":[]},{"text":"impl Unpin for AsyncRequestsCounterVecDelegator","synthetic":true,"types":[]},{"text":"impl Unpin for AsyncRequestsCounterVec2Inner","synthetic":true,"types":[]},{"text":"impl Unpin for AsyncRequestsCounterVec2Delegator","synthetic":true,"types":[]},{"text":"impl Unpin for AsyncRequestsCounterVec","synthetic":true,"types":[]},{"text":"impl Unpin for AsyncRequestsDurationVecInner","synthetic":true,"types":[]},{"text":"impl Unpin for AsyncRequestsDurationVecDelegator","synthetic":true,"types":[]},{"text":"impl Unpin for AsyncRequestsDurationVec","synthetic":true,"types":[]},{"text":"impl Unpin for GrpcTypeKind","synthetic":true,"types":[]},{"text":"impl Unpin for GcCommandKind","synthetic":true,"types":[]},{"text":"impl Unpin for SnapTask","synthetic":true,"types":[]},{"text":"impl Unpin for ResolveStore","synthetic":true,"types":[]},{"text":"impl Unpin for GcKeysCF","synthetic":true,"types":[]},{"text":"impl Unpin for GcKeysDetail","synthetic":true,"types":[]},{"text":"impl Unpin for GlobalGrpcTypeKind","synthetic":true,"types":[]},{"text":"impl Unpin for BatchableRequestKind","synthetic":true,"types":[]},{"text":"impl Unpin for GC_COMMAND_COUNTER_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for SNAP_TASK_COUNTER","synthetic":true,"types":[]},{"text":"impl Unpin for GC_GCTASK_COUNTER_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for GC_GCTASK_FAIL_COUNTER_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for RESOLVE_STORE_COUNTER","synthetic":true,"types":[]},{"text":"impl Unpin for GRPC_MSG_FAIL_COUNTER_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for GC_KEYS_COUNTER_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for GRPC_MSG_HISTOGRAM_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for GRPC_MSG_HISTOGRAM_STATIC","synthetic":true,"types":[]},{"text":"impl Unpin for GRPC_MSG_HISTOGRAM_GLOBAL","synthetic":true,"types":[]},{"text":"impl Unpin for GC_COMMAND_COUNTER_VEC_STATIC","synthetic":true,"types":[]},{"text":"impl Unpin for SNAP_TASK_COUNTER_STATIC","synthetic":true,"types":[]},{"text":"impl Unpin for GC_GCTASK_COUNTER_STATIC","synthetic":true,"types":[]},{"text":"impl Unpin for GC_GCTASK_FAIL_COUNTER_STATIC","synthetic":true,"types":[]},{"text":"impl Unpin for RESOLVE_STORE_COUNTER_STATIC","synthetic":true,"types":[]},{"text":"impl Unpin for GRPC_MSG_FAIL_COUNTER","synthetic":true,"types":[]},{"text":"impl Unpin for GC_KEYS_COUNTER_STATIC","synthetic":true,"types":[]},{"text":"impl Unpin for SEND_SNAP_HISTOGRAM","synthetic":true,"types":[]},{"text":"impl Unpin for GRPC_REQ_BATCH_COMMANDS_SIZE","synthetic":true,"types":[]},{"text":"impl Unpin for GRPC_RESP_BATCH_COMMANDS_SIZE","synthetic":true,"types":[]},{"text":"impl Unpin for GC_EMPTY_RANGE_COUNTER","synthetic":true,"types":[]},{"text":"impl Unpin for GC_SKIPPED_COUNTER","synthetic":true,"types":[]},{"text":"impl Unpin for GC_TASK_DURATION_HISTOGRAM_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for GC_TOO_BUSY_COUNTER","synthetic":true,"types":[]},{"text":"impl Unpin for AUTO_GC_STATUS_GAUGE_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for AUTO_GC_SAFE_POINT_GAUGE","synthetic":true,"types":[]},{"text":"impl Unpin for AUTO_GC_PROCESSED_REGIONS_GAUGE_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for RAFT_MESSAGE_RECV_COUNTER","synthetic":true,"types":[]},{"text":"impl Unpin for RAFT_MESSAGE_BATCH_SIZE","synthetic":true,"types":[]},{"text":"impl Unpin for REPORT_FAILURE_MSG_COUNTER","synthetic":true,"types":[]},{"text":"impl Unpin for RAFT_MESSAGE_FLUSH_COUNTER","synthetic":true,"types":[]},{"text":"impl Unpin for RAFT_MESSAGE_DELAY_FLUSH_COUNTER","synthetic":true,"types":[]},{"text":"impl Unpin for CONFIG_ROCKSDB_GAUGE","synthetic":true,"types":[]},{"text":"impl Unpin for REQUEST_BATCH_SIZE_HISTOGRAM_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for REQUEST_BATCH_RATIO_HISTOGRAM_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for CPU_CORES_QUOTA_GAUGE","synthetic":true,"types":[]},{"text":"impl Unpin for RequestStatusKind","synthetic":true,"types":[]},{"text":"impl Unpin for RequestTypeKind","synthetic":true,"types":[]},{"text":"impl Unpin for ASYNC_REQUESTS_COUNTER","synthetic":true,"types":[]},{"text":"impl Unpin for ASYNC_REQUESTS_DURATIONS","synthetic":true,"types":[]},{"text":"impl Unpin for ASYNC_REQUESTS_COUNTER_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for ASYNC_REQUESTS_DURATIONS_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for Queue","synthetic":true,"types":[]},{"text":"impl Unpin for BatchMessageBuffer","synthetic":true,"types":[]},{"text":"impl Unpin for MessageBuffer","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for SnapshotReporter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, M, B&gt; Unpin for RaftCall&lt;R, M, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, R&gt; Unpin for ConnectionBuilder&lt;S, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, R&gt; Unpin for StreamBackEnd&lt;S, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ConnectionPool","synthetic":true,"types":[]},{"text":"impl Unpin for CachedQueue","synthetic":true,"types":[]},{"text":"impl&lt;S, R&gt; Unpin for RaftClient&lt;S, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for GrpcCompressionType","synthetic":true,"types":[]},{"text":"impl Unpin for Config","synthetic":true,"types":[]},{"text":"impl&lt;Iter&gt; Unpin for MvccInfoIterator&lt;Iter&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Iter: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for RegionInfo","synthetic":true,"types":[]},{"text":"impl Unpin for BottommostLevelCompaction","synthetic":true,"types":[]},{"text":"impl&lt;ER&gt; Unpin for Debugger&lt;ER&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ER: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for MvccChecker","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for LockObserverState","synthetic":true,"types":[]},{"text":"impl Unpin for LockCollectorTask","synthetic":true,"types":[]},{"text":"impl Unpin for LockObserver","synthetic":true,"types":[]},{"text":"impl Unpin for LockCollectorRunner","synthetic":true,"types":[]},{"text":"impl Unpin for AppliedLockCollector","synthetic":true,"types":[]},{"text":"impl Unpin for GcContext","synthetic":true,"types":[]},{"text":"impl Unpin for GC_CONTEXT","synthetic":true,"types":[]},{"text":"impl Unpin for GC_COMPACTION_FILTERED","synthetic":true,"types":[]},{"text":"impl Unpin for GC_COMPACTION_DELETED","synthetic":true,"types":[]},{"text":"impl Unpin for GC_COMPACTION_FAILURE","synthetic":true,"types":[]},{"text":"impl Unpin for GC_COMPACTION_FILTER_SKIP","synthetic":true,"types":[]},{"text":"impl Unpin for GC_COMPACTION_FILTER_SEEK","synthetic":true,"types":[]},{"text":"impl Unpin for GC_COMPACTION_FILTER_NEXT","synthetic":true,"types":[]},{"text":"impl Unpin for GC_COMPACTION_MVCC_DELETE_SKIP_OLDER","synthetic":true,"types":[]},{"text":"impl Unpin for GC_COMPACTION_MVCC_ROLLBACK","synthetic":true,"types":[]},{"text":"impl Unpin for WriteCompactionFilterFactory","synthetic":true,"types":[]},{"text":"impl Unpin for WriteCompactionFilter","synthetic":true,"types":[]},{"text":"impl Unpin for CompactionFilterStats","synthetic":true,"types":[]},{"text":"impl Unpin for GcConfig","synthetic":true,"types":[]},{"text":"impl Unpin for GcWorkerConfigManager","synthetic":true,"types":[]},{"text":"impl&lt;S, R&gt; Unpin for AutoGcConfig&lt;S, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for GcManagerError","synthetic":true,"types":[]},{"text":"impl Unpin for GcManagerContext","synthetic":true,"types":[]},{"text":"impl Unpin for GcManagerState","synthetic":true,"types":[]},{"text":"impl Unpin for GcManagerHandle","synthetic":true,"types":[]},{"text":"impl&lt;S, R&gt; Unpin for GcManager&lt;S, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for GcTask","synthetic":true,"types":[]},{"text":"impl&lt;E, RR&gt; Unpin for GcRunner&lt;E, RR&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;RR: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E, RR&gt; Unpin for GcWorker&lt;E, RR&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;RR: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ThreadLoadStatistics","synthetic":true,"types":[]},{"text":"impl Unpin for ThreadLoad","synthetic":true,"types":[]},{"text":"impl Unpin for Client","synthetic":true,"types":[]},{"text":"impl Unpin for Config","synthetic":true,"types":[]},{"text":"impl Unpin for LockManagerConfigManager","synthetic":true,"types":[]},{"text":"impl Unpin for Locks","synthetic":true,"types":[]},{"text":"impl Unpin for DetectTable","synthetic":true,"types":[]},{"text":"impl Unpin for Role","synthetic":true,"types":[]},{"text":"impl Unpin for DetectType","synthetic":true,"types":[]},{"text":"impl Unpin for Task","synthetic":true,"types":[]},{"text":"impl Unpin for Scheduler","synthetic":true,"types":[]},{"text":"impl Unpin for RoleChangeNotifier","synthetic":true,"types":[]},{"text":"impl Unpin for Inner","synthetic":true,"types":[]},{"text":"impl&lt;S, P&gt; Unpin for Detector&lt;S, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Service","synthetic":true,"types":[]},{"text":"impl Unpin for LocalTaskCounterInner","synthetic":true,"types":[]},{"text":"impl Unpin for LocalTaskCounterDelegator","synthetic":true,"types":[]},{"text":"impl Unpin for LocalTaskCounter","synthetic":true,"types":[]},{"text":"impl Unpin for LocalErrorCounterInner","synthetic":true,"types":[]},{"text":"impl Unpin for LocalErrorCounterDelegator","synthetic":true,"types":[]},{"text":"impl Unpin for LocalErrorCounter","synthetic":true,"types":[]},{"text":"impl Unpin for WaitTableStatusGauge","synthetic":true,"types":[]},{"text":"impl Unpin for TASK_COUNTER_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for ERROR_COUNTER_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for WAITER_LIFETIME_HISTOGRAM","synthetic":true,"types":[]},{"text":"impl Unpin for DETECT_DURATION_HISTOGRAM","synthetic":true,"types":[]},{"text":"impl Unpin for WAIT_TABLE_STATUS_GAUGE","synthetic":true,"types":[]},{"text":"impl Unpin for DETECTOR_LEADER_GAUGE","synthetic":true,"types":[]},{"text":"impl Unpin for TASK_COUNTER_METRICS","synthetic":true,"types":[]},{"text":"impl Unpin for ERROR_COUNTER_METRICS","synthetic":true,"types":[]},{"text":"impl Unpin for DelayInner","synthetic":true,"types":[]},{"text":"impl Unpin for Delay","synthetic":true,"types":[]},{"text":"impl Unpin for Task","synthetic":true,"types":[]},{"text":"impl Unpin for Waiter","synthetic":true,"types":[]},{"text":"impl Unpin for WaitTable","synthetic":true,"types":[]},{"text":"impl Unpin for Scheduler","synthetic":true,"types":[]},{"text":"impl Unpin for WaiterManager","synthetic":true,"types":[]},{"text":"impl Unpin for LockManager","synthetic":true,"types":[]},{"text":"impl&lt;C, ER&gt; Unpin for Node&lt;C, ER&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for RaftKv&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for CmdRes","synthetic":true,"types":[]},{"text":"impl Unpin for ReplicaReadLockChecker","synthetic":true,"types":[]},{"text":"impl Unpin for WriteBatchFlags","synthetic":true,"types":[]},{"text":"impl Unpin for Task","synthetic":true,"types":[]},{"text":"impl Unpin for StoreAddr","synthetic":true,"types":[]},{"text":"impl&lt;T, RR&gt; Unpin for Runner&lt;T, RR&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;RR: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for PdStoreAddrResolver","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; Unpin for Server&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ReqBatcher","synthetic":true,"types":[]},{"text":"impl&lt;ER, T&gt; Unpin for Service&lt;ER, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ER: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for IoLoad","synthetic":true,"types":[]},{"text":"impl Unpin for LogIterator","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for NUM_REGEX","synthetic":true,"types":[]},{"text":"impl Unpin for NicSnapshot","synthetic":true,"types":[]},{"text":"impl Unpin for Service","synthetic":true,"types":[]},{"text":"impl&lt;T, E, L&gt; Unpin for Service&lt;T, E, L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for BatchRespCollector","synthetic":true,"types":[]},{"text":"impl Unpin for Task","synthetic":true,"types":[]},{"text":"impl Unpin for SnapChunk","synthetic":true,"types":[]},{"text":"impl Unpin for SendStat","synthetic":true,"types":[]},{"text":"impl Unpin for RecvSnapContext","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for Runner&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for RaftProgressState","synthetic":true,"types":[]},{"text":"impl Unpin for RaftProgress","synthetic":true,"types":[]},{"text":"impl Unpin for RaftHardState","synthetic":true,"types":[]},{"text":"impl Unpin for RaftStateRole","synthetic":true,"types":[]},{"text":"impl Unpin for RaftSoftState","synthetic":true,"types":[]},{"text":"impl Unpin for RaftStatus","synthetic":true,"types":[]},{"text":"impl Unpin for RaftPeerRole","synthetic":true,"types":[]},{"text":"impl Unpin for Epoch","synthetic":true,"types":[]},{"text":"impl Unpin for RegionPeer","synthetic":true,"types":[]},{"text":"impl Unpin for RegionMergeState","synthetic":true,"types":[]},{"text":"impl Unpin for RaftTruncatedState","synthetic":true,"types":[]},{"text":"impl Unpin for RaftApplyState","synthetic":true,"types":[]},{"text":"impl Unpin for RegionMeta","synthetic":true,"types":[]},{"text":"impl Unpin for PROFILER_MUTEX","synthetic":true,"types":[]},{"text":"impl Unpin for ProfGuard","synthetic":true,"types":[]},{"text":"impl Unpin for LogLevelRequest","synthetic":true,"types":[]},{"text":"impl&lt;E, R&gt; Unpin for StatusServer&lt;E, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'pin, S&gt; Unpin for __TlsIncomingProjection&lt;'pin, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'pin, S&gt; Unpin for __TlsIncomingProjectionRef&lt;'pin, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; Unpin for ServerTransport&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Config","synthetic":true,"types":[]},{"text":"impl Unpin for StorageConfigManger","synthetic":true,"types":[]},{"text":"impl Unpin for BlockCacheConfig","synthetic":true,"types":[]},{"text":"impl Unpin for ErrorInner","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for ErrorHeaderKind","synthetic":true,"types":[]},{"text":"impl Unpin for BTreeEngine","synthetic":true,"types":[]},{"text":"impl Unpin for BTreeEngineIterator","synthetic":true,"types":[]},{"text":"impl Unpin for BTreeEngineSnapshot","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for Cursor&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, S&gt; Unpin for CursorBuilder&lt;'a, S&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for MockEngine","synthetic":true,"types":[]},{"text":"impl Unpin for ExpectedWrite","synthetic":true,"types":[]},{"text":"impl Unpin for ExpectedWriteList","synthetic":true,"types":[]},{"text":"impl Unpin for MockEngineBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for PerfStatisticsFields","synthetic":true,"types":[]},{"text":"impl Unpin for PerfStatisticsInstant","synthetic":true,"types":[]},{"text":"impl Unpin for PerfStatisticsDelta","synthetic":true,"types":[]},{"text":"impl Unpin for Task","synthetic":true,"types":[]},{"text":"impl Unpin for Runner","synthetic":true,"types":[]},{"text":"impl Unpin for RocksEngineCore","synthetic":true,"types":[]},{"text":"impl Unpin for RocksEngine","synthetic":true,"types":[]},{"text":"impl Unpin for TestEngineBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for CfStatistics","synthetic":true,"types":[]},{"text":"impl Unpin for Statistics","synthetic":true,"types":[]},{"text":"impl Unpin for StatisticsSummary","synthetic":true,"types":[]},{"text":"impl Unpin for CbContext","synthetic":true,"types":[]},{"text":"impl Unpin for Modify","synthetic":true,"types":[]},{"text":"impl Unpin for WriteData","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SnapContext&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ScanMode","synthetic":true,"types":[]},{"text":"impl Unpin for ErrorInner","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Lock","synthetic":true,"types":[]},{"text":"impl Unpin for WaitTimeout","synthetic":true,"types":[]},{"text":"impl Unpin for DummyLockManager","synthetic":true,"types":[]},{"text":"impl Unpin for CommandScanDetailsInner","synthetic":true,"types":[]},{"text":"impl Unpin for CommandScanDetailsDelegator","synthetic":true,"types":[]},{"text":"impl Unpin for CommandScanDetails2Inner","synthetic":true,"types":[]},{"text":"impl Unpin for CommandScanDetails2Delegator","synthetic":true,"types":[]},{"text":"impl Unpin for CommandScanDetails3Inner","synthetic":true,"types":[]},{"text":"impl Unpin for CommandScanDetails3Delegator","synthetic":true,"types":[]},{"text":"impl Unpin for CommandScanDetails","synthetic":true,"types":[]},{"text":"impl Unpin for SchedDurationVecInner","synthetic":true,"types":[]},{"text":"impl Unpin for SchedDurationVecDelegator","synthetic":true,"types":[]},{"text":"impl Unpin for SchedDurationVec","synthetic":true,"types":[]},{"text":"impl Unpin for ProcessingReadVecInner","synthetic":true,"types":[]},{"text":"impl Unpin for ProcessingReadVecDelegator","synthetic":true,"types":[]},{"text":"impl Unpin for ProcessingReadVec","synthetic":true,"types":[]},{"text":"impl Unpin for KReadVecInner","synthetic":true,"types":[]},{"text":"impl Unpin for KReadVecDelegator","synthetic":true,"types":[]},{"text":"impl Unpin for KReadVec","synthetic":true,"types":[]},{"text":"impl Unpin for KvCommandCounterVecInner","synthetic":true,"types":[]},{"text":"impl Unpin for KvCommandCounterVecDelegator","synthetic":true,"types":[]},{"text":"impl Unpin for KvCommandCounterVec","synthetic":true,"types":[]},{"text":"impl Unpin for SchedStageCounterVecInner","synthetic":true,"types":[]},{"text":"impl Unpin for SchedStageCounterVecDelegator","synthetic":true,"types":[]},{"text":"impl Unpin for SchedStageCounterVec2Inner","synthetic":true,"types":[]},{"text":"impl Unpin for SchedStageCounterVec2Delegator","synthetic":true,"types":[]},{"text":"impl Unpin for SchedStageCounterVec","synthetic":true,"types":[]},{"text":"impl Unpin for SchedLatchDurationVecInner","synthetic":true,"types":[]},{"text":"impl Unpin for SchedLatchDurationVecDelegator","synthetic":true,"types":[]},{"text":"impl Unpin for SchedLatchDurationVec","synthetic":true,"types":[]},{"text":"impl Unpin for KvCommandKeysWrittenVecInner","synthetic":true,"types":[]},{"text":"impl Unpin for KvCommandKeysWrittenVecDelegator","synthetic":true,"types":[]},{"text":"impl Unpin for KvCommandKeysWrittenVec","synthetic":true,"types":[]},{"text":"impl Unpin for SchedTooBusyVecInner","synthetic":true,"types":[]},{"text":"impl Unpin for SchedTooBusyVecDelegator","synthetic":true,"types":[]},{"text":"impl Unpin for SchedTooBusyVec","synthetic":true,"types":[]},{"text":"impl Unpin for SchedCommandPriCounterVecInner","synthetic":true,"types":[]},{"text":"impl Unpin for SchedCommandPriCounterVecDelegator","synthetic":true,"types":[]},{"text":"impl Unpin for SchedCommandPriCounterVec","synthetic":true,"types":[]},{"text":"impl Unpin for StorageLocalMetrics","synthetic":true,"types":[]},{"text":"impl Unpin for CommandKind","synthetic":true,"types":[]},{"text":"impl Unpin for CommandStageKind","synthetic":true,"types":[]},{"text":"impl Unpin for CommandPriority","synthetic":true,"types":[]},{"text":"impl Unpin for GcKeysCF","synthetic":true,"types":[]},{"text":"impl Unpin for GcKeysDetail","synthetic":true,"types":[]},{"text":"impl Unpin for KV_COMMAND_COUNTER_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for KV_COMMAND_COUNTER_VEC_STATIC","synthetic":true,"types":[]},{"text":"impl Unpin for SCHED_STAGE_COUNTER","synthetic":true,"types":[]},{"text":"impl Unpin for SCHED_STAGE_COUNTER_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for SCHED_WRITING_BYTES_GAUGE","synthetic":true,"types":[]},{"text":"impl Unpin for SCHED_CONTEX_GAUGE","synthetic":true,"types":[]},{"text":"impl Unpin for SCHED_HISTOGRAM_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for SCHED_HISTOGRAM_VEC_STATIC","synthetic":true,"types":[]},{"text":"impl Unpin for SCHED_LATCH_HISTOGRAM","synthetic":true,"types":[]},{"text":"impl Unpin for SCHED_LATCH_HISTOGRAM_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for SCHED_PROCESSING_READ_HISTOGRAM_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for SCHED_PROCESSING_READ_HISTOGRAM_STATIC","synthetic":true,"types":[]},{"text":"impl Unpin for SCHED_PROCESSING_WRITE_HISTOGRAM_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for SCHED_TOO_BUSY_COUNTER","synthetic":true,"types":[]},{"text":"impl Unpin for SCHED_TOO_BUSY_COUNTER_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for SCHED_COMMANDS_PRI_COUNTER_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for SCHED_COMMANDS_PRI_COUNTER_VEC_STATIC","synthetic":true,"types":[]},{"text":"impl Unpin for KV_COMMAND_KEYREAD_HISTOGRAM_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for KV_COMMAND_KEYREAD_HISTOGRAM_STATIC","synthetic":true,"types":[]},{"text":"impl Unpin for KV_COMMAND_SCAN_DETAILS","synthetic":true,"types":[]},{"text":"impl Unpin for KV_COMMAND_SCAN_DETAILS_STATIC","synthetic":true,"types":[]},{"text":"impl Unpin for KV_COMMAND_KEYWRITE_HISTOGRAM","synthetic":true,"types":[]},{"text":"impl Unpin for KV_COMMAND_KEYWRITE_HISTOGRAM_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for REQUEST_EXCEED_BOUND","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for Mvcc&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Iter, Ob&gt; Unpin for MvccInfoScanner&lt;Iter, Ob&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Iter: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ob: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for MvccInfoCollector","synthetic":true,"types":[]},{"text":"impl Unpin for MvccChecksum","synthetic":true,"types":[]},{"text":"impl Unpin for MvccConflictCounterVec","synthetic":true,"types":[]},{"text":"impl Unpin for MvccDuplicateCmdCounterVec","synthetic":true,"types":[]},{"text":"impl Unpin for MvccCheckTxnStatusCounterVec","synthetic":true,"types":[]},{"text":"impl Unpin for MvccConflictKind","synthetic":true,"types":[]},{"text":"impl Unpin for MvccDuplicateCommandKind","synthetic":true,"types":[]},{"text":"impl Unpin for MvccCheckTxnStatusKind","synthetic":true,"types":[]},{"text":"impl Unpin for MVCC_VERSIONS_HISTOGRAM","synthetic":true,"types":[]},{"text":"impl Unpin for GC_DELETE_VERSIONS_HISTOGRAM","synthetic":true,"types":[]},{"text":"impl Unpin for CONCURRENCY_MANAGER_LOCK_DURATION_HISTOGRAM","synthetic":true,"types":[]},{"text":"impl Unpin for MVCC_CONFLICT_COUNTER","synthetic":true,"types":[]},{"text":"impl Unpin for MVCC_DUPLICATE_CMD_COUNTER_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for MVCC_CHECK_TXN_STATUS_COUNTER_VEC","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for PointGetterBuilder&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for PointGetter&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as Snapshot&gt;::Iter: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for TxnCommitRecord","synthetic":true,"types":[]},{"text":"impl Unpin for OverlappedWrite","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for MvccReader&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as Snapshot&gt;::Iter: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for BackwardKvScanner&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as Snapshot&gt;::Iter: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for EntryBuilder","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for HandleRes&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Cursors&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as Snapshot&gt;::Iter: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, P&gt; Unpin for ForwardScanner&lt;S, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as Snapshot&gt;::Iter: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for LatestKvPolicy","synthetic":true,"types":[]},{"text":"impl Unpin for LatestEntryPolicy","synthetic":true,"types":[]},{"text":"impl Unpin for DeltaEntryPolicy","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for ScannerBuilder&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Scanner&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as Snapshot&gt;::Iter: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for ScannerConfig&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for NewerTsCheckState","synthetic":true,"types":[]},{"text":"impl Unpin for GcInfo","synthetic":true,"types":[]},{"text":"impl Unpin for MissingLockAction","synthetic":true,"types":[]},{"text":"impl Unpin for ReleasedLock","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for MvccTxn&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as Snapshot&gt;::Iter: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ErrorInner","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for AcquirePessimisticLock","synthetic":true,"types":[]},{"text":"impl Unpin for CheckSecondaryLocks","synthetic":true,"types":[]},{"text":"impl Unpin for SecondaryLockStatus","synthetic":true,"types":[]},{"text":"impl Unpin for CheckTxnStatus","synthetic":true,"types":[]},{"text":"impl Unpin for Cleanup","synthetic":true,"types":[]},{"text":"impl Unpin for Commit","synthetic":true,"types":[]},{"text":"impl Unpin for MvccByKey","synthetic":true,"types":[]},{"text":"impl Unpin for MvccByStartTs","synthetic":true,"types":[]},{"text":"impl Unpin for Pause","synthetic":true,"types":[]},{"text":"impl Unpin for PessimisticRollback","synthetic":true,"types":[]},{"text":"impl Unpin for Prewrite","synthetic":true,"types":[]},{"text":"impl Unpin for PrewritePessimistic","synthetic":true,"types":[]},{"text":"impl&lt;K&gt; Unpin for Prewriter&lt;K&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;K as PrewriteKind&gt;::Mutation: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Optimistic","synthetic":true,"types":[]},{"text":"impl Unpin for Pessimistic","synthetic":true,"types":[]},{"text":"impl Unpin for ResolveLock","synthetic":true,"types":[]},{"text":"impl Unpin for ResolveLockLite","synthetic":true,"types":[]},{"text":"impl Unpin for ResolveLockReadPhase","synthetic":true,"types":[]},{"text":"impl Unpin for Rollback","synthetic":true,"types":[]},{"text":"impl Unpin for ScanLock","synthetic":true,"types":[]},{"text":"impl Unpin for TxnHeartBeat","synthetic":true,"types":[]},{"text":"impl Unpin for Command","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for TypedCommand&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ReleasedLocks","synthetic":true,"types":[]},{"text":"impl Unpin for ResponsePolicy","synthetic":true,"types":[]},{"text":"impl Unpin for WriteResult","synthetic":true,"types":[]},{"text":"impl&lt;'a, L&gt; Unpin for WriteContext&lt;'a, L&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for SchedLocalMetrics","synthetic":true,"types":[]},{"text":"impl Unpin for SchedPool","synthetic":true,"types":[]},{"text":"impl Unpin for SchedTicker","synthetic":true,"types":[]},{"text":"impl Unpin for Task","synthetic":true,"types":[]},{"text":"impl Unpin for CmdTimer","synthetic":true,"types":[]},{"text":"impl Unpin for TaskContext","synthetic":true,"types":[]},{"text":"impl&lt;L&gt; Unpin for SchedulerInner&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E, L&gt; Unpin for Scheduler&lt;E, L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, S&gt; Unpin for Gc&lt;'a, S&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for State","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for TransactionProperties&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for CommitKind","synthetic":true,"types":[]},{"text":"impl Unpin for TransactionKind","synthetic":true,"types":[]},{"text":"impl Unpin for LockStatus","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for PrewriteMutation&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Latch","synthetic":true,"types":[]},{"text":"impl Unpin for Lock","synthetic":true,"types":[]},{"text":"impl Unpin for Latches","synthetic":true,"types":[]},{"text":"impl Unpin for TxnEntry","synthetic":true,"types":[]},{"text":"impl Unpin for EntryBatch","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for SnapshotStore&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as Snapshot&gt;::Iter: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for FixtureStore","synthetic":true,"types":[]},{"text":"impl Unpin for FixtureStoreScanner","synthetic":true,"types":[]},{"text":"impl Unpin for ProcessResult","synthetic":true,"types":[]},{"text":"impl Unpin for ErrorInner","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for FuturePoolTicker&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for MvccInfo","synthetic":true,"types":[]},{"text":"impl Unpin for TxnStatus","synthetic":true,"types":[]},{"text":"impl Unpin for PrewriteResult","synthetic":true,"types":[]},{"text":"impl Unpin for PessimisticLockRes","synthetic":true,"types":[]},{"text":"impl Unpin for SecondaryLocksStatus","synthetic":true,"types":[]},{"text":"impl Unpin for StorageCallback","synthetic":true,"types":[]},{"text":"impl&lt;E, L&gt; Unpin for Storage&lt;E, L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E, L&gt; Unpin for TestStorageBuilder&lt;E, L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'pin, 'a, PF, F&gt; Unpin for ConcurrencyLimiter&lt;'a, PF, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PF: Future&lt;Output = SemaphorePermit&lt;'a&gt;&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Future,<br>&nbsp;&nbsp;&nbsp;&nbsp;__ConcurrencyLimiter&lt;'pin, 'a, PF, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, 'a, F&gt; Unpin for Tracker&lt;'a, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Future,<br>&nbsp;&nbsp;&nbsp;&nbsp;__Tracker&lt;'pin, 'a, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, S&gt; Unpin for TlsIncoming&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__TlsIncoming&lt;'pin, S&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["tikv_alloc"] = [{"text":"impl Unpin for ProfError","synthetic":true,"types":[]},{"text":"impl Unpin for THREAD_MEMORY_MAP","synthetic":true,"types":[]},{"text":"impl Unpin for MemoryStatsAccessor","synthetic":true,"types":[]}];
implementors["tikv_jemalloc_ctl"] = [{"text":"impl Unpin for narenas","synthetic":true,"types":[]},{"text":"impl Unpin for narenas_mib","synthetic":true,"types":[]},{"text":"impl Unpin for malloc_conf","synthetic":true,"types":[]},{"text":"impl Unpin for malloc_conf_mib","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Name","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Mib&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for MibStr&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for abort","synthetic":true,"types":[]},{"text":"impl Unpin for abort_mib","synthetic":true,"types":[]},{"text":"impl Unpin for dss","synthetic":true,"types":[]},{"text":"impl Unpin for dss_mib","synthetic":true,"types":[]},{"text":"impl Unpin for narenas","synthetic":true,"types":[]},{"text":"impl Unpin for narenas_mib","synthetic":true,"types":[]},{"text":"impl Unpin for junk","synthetic":true,"types":[]},{"text":"impl Unpin for junk_mib","synthetic":true,"types":[]},{"text":"impl Unpin for zero","synthetic":true,"types":[]},{"text":"impl Unpin for zero_mib","synthetic":true,"types":[]},{"text":"impl Unpin for tcache","synthetic":true,"types":[]},{"text":"impl Unpin for tcache_mib","synthetic":true,"types":[]},{"text":"impl Unpin for lg_tcache_max","synthetic":true,"types":[]},{"text":"impl Unpin for lg_tcache_max_mib","synthetic":true,"types":[]},{"text":"impl Unpin for background_thread","synthetic":true,"types":[]},{"text":"impl Unpin for background_thread_mib","synthetic":true,"types":[]},{"text":"impl Unpin for allocated","synthetic":true,"types":[]},{"text":"impl Unpin for allocated_mib","synthetic":true,"types":[]},{"text":"impl Unpin for active","synthetic":true,"types":[]},{"text":"impl Unpin for active_mib","synthetic":true,"types":[]},{"text":"impl Unpin for metadata","synthetic":true,"types":[]},{"text":"impl Unpin for metadata_mib","synthetic":true,"types":[]},{"text":"impl Unpin for resident","synthetic":true,"types":[]},{"text":"impl Unpin for resident_mib","synthetic":true,"types":[]},{"text":"impl Unpin for mapped","synthetic":true,"types":[]},{"text":"impl Unpin for mapped_mib","synthetic":true,"types":[]},{"text":"impl Unpin for retained","synthetic":true,"types":[]},{"text":"impl Unpin for retained_mib","synthetic":true,"types":[]},{"text":"impl Unpin for allocatedp","synthetic":true,"types":[]},{"text":"impl Unpin for allocatedp_mib","synthetic":true,"types":[]},{"text":"impl Unpin for deallocatedp","synthetic":true,"types":[]},{"text":"impl Unpin for deallocatedp_mib","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for ThreadLocal&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for version","synthetic":true,"types":[]},{"text":"impl Unpin for version_mib","synthetic":true,"types":[]},{"text":"impl Unpin for background_thread","synthetic":true,"types":[]},{"text":"impl Unpin for background_thread_mib","synthetic":true,"types":[]},{"text":"impl Unpin for max_background_threads","synthetic":true,"types":[]},{"text":"impl Unpin for max_background_threads_mib","synthetic":true,"types":[]},{"text":"impl Unpin for epoch","synthetic":true,"types":[]},{"text":"impl Unpin for epoch_mib","synthetic":true,"types":[]}];
implementors["tikv_jemallocator"] = [{"text":"impl Unpin for Jemalloc","synthetic":true,"types":[]}];
implementors["tikv_util"] = [{"text":"impl Unpin for BufferVec","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for WithConcatExtend&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for FsInfo","synthetic":true,"types":[]},{"text":"impl Unpin for ConfigError","synthetic":true,"types":[]},{"text":"impl Unpin for LogFormat","synthetic":true,"types":[]},{"text":"impl Unpin for ReadableSize","synthetic":true,"types":[]},{"text":"impl Unpin for OptionReadableSize","synthetic":true,"types":[]},{"text":"impl Unpin for ReadableDuration","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for VersionTrack&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Tracker&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for TomlLine","synthetic":true,"types":[]},{"text":"impl Unpin for TomlWriter","synthetic":true,"types":[]},{"text":"impl Unpin for BatchCommandsWaker","synthetic":true,"types":[]},{"text":"impl&lt;T, C, A&gt; Unpin for MustCall&lt;T, C, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for DeadlineError","synthetic":true,"types":[]},{"text":"impl Unpin for Deadline","synthetic":true,"types":[]},{"text":"impl Unpin for KeyBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for RotatingFileLogger","synthetic":true,"types":[]},{"text":"impl Unpin for RotatingFileLoggerBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for RotateByTime","synthetic":true,"types":[]},{"text":"impl Unpin for RotateBySize","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; Unpin for TikvFormat&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; Unpin for RocksFormat&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; Unpin for LogAndFuse&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; Unpin for SlowLogFilter&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for SlowCostSerializer","synthetic":true,"types":[]},{"text":"impl Unpin for LogCost","synthetic":true,"types":[]},{"text":"impl&lt;N, R, S, T&gt; Unpin for LogDispatcher&lt;N, R, S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Serializer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K&gt; Unpin for Record&lt;K&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Unpin for ValueEntry&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K&gt; Unpin for Trace&lt;K&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Unpin for LruCache&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Iter&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Metrics","synthetic":true,"types":[]},{"text":"impl Unpin for ThreadsCollector","synthetic":true,"types":[]},{"text":"impl Unpin for CLK_TCK","synthetic":true,"types":[]},{"text":"impl Unpin for ThreadMetrics","synthetic":true,"types":[]},{"text":"impl Unpin for ThreadInfoStatistics","synthetic":true,"types":[]},{"text":"impl Unpin for TidRetriever","synthetic":true,"types":[]},{"text":"impl Unpin for ProcessCollector","synthetic":true,"types":[]},{"text":"impl Unpin for CLK_TCK","synthetic":true,"types":[]},{"text":"impl Unpin for PAGESIZE","synthetic":true,"types":[]},{"text":"impl Unpin for BOOT_TIME","synthetic":true,"types":[]},{"text":"impl Unpin for AllocStatsCollector","synthetic":true,"types":[]},{"text":"impl Unpin for HistogramReader","synthetic":true,"types":[]},{"text":"impl Unpin for CRITICAL_ERROR","synthetic":true,"types":[]},{"text":"impl Unpin for State","synthetic":true,"types":[]},{"text":"impl Unpin for Notifier","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Receiver&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for VecCollector","synthetic":true,"types":[]},{"text":"impl&lt;T, E, I, C&gt; Unpin for BatchReceiver&lt;T, E, I, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for State","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Receiver&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for LooseBoundedSender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for LiunxStyleCpuTime","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for MountInfoFieldPart1","synthetic":true,"types":[]},{"text":"impl Unpin for MountInfoFieldPart2","synthetic":true,"types":[]},{"text":"impl Unpin for MountPoint","synthetic":true,"types":[]},{"text":"impl Unpin for SubsysFields","synthetic":true,"types":[]},{"text":"impl Unpin for CGroupSubsys","synthetic":true,"types":[]},{"text":"impl Unpin for CGroup","synthetic":true,"types":[]},{"text":"impl Unpin for CGroupSys","synthetic":true,"types":[]},{"text":"impl Unpin for SysQuota","synthetic":true,"types":[]},{"text":"impl Unpin for SYS_INFO","synthetic":true,"types":[]},{"text":"impl Unpin for UnixSecs","synthetic":true,"types":[]},{"text":"impl Unpin for SlowTimer","synthetic":true,"types":[]},{"text":"impl Unpin for Monitor","synthetic":true,"types":[]},{"text":"impl Unpin for Instant","synthetic":true,"types":[]},{"text":"impl Unpin for CoarseClock","synthetic":true,"types":[]},{"text":"impl Unpin for ThreadReadId","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Timer&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for TimeoutTask&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for GLOBAL_TIMER_HANDLE","synthetic":true,"types":[]},{"text":"impl Unpin for TimeZero","synthetic":true,"types":[]},{"text":"impl Unpin for SteadyClock","synthetic":true,"types":[]},{"text":"impl Unpin for STEADY_CLOCK","synthetic":true,"types":[]},{"text":"impl Unpin for SteadyTimer","synthetic":true,"types":[]},{"text":"impl Unpin for GLOBAL_STEADY_TIMER","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Stopped&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Scheduler&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Worker&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for WORKER_PENDING_TASK_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for WORKER_HANDLED_TASK_VEC","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for ScheduleError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for RunnableWrapper&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Msg&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Scheduler&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for LazyWorker&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for ReceiverWrapper&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Builder&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Worker","synthetic":true,"types":[]},{"text":"impl Unpin for Env","synthetic":true,"types":[]},{"text":"impl Unpin for FuturePool","synthetic":true,"types":[]},{"text":"impl Unpin for Full","synthetic":true,"types":[]},{"text":"impl Unpin for FUTUREPOOL_RUNNING_TASK_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for FUTUREPOOL_HANDLED_TASK_VEC","synthetic":true,"types":[]},{"text":"impl Unpin for FUTUREPOOL_SCHEDULE_DURATION_VEC","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for TickerWrapper&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for DefaultTicker","synthetic":true,"types":[]},{"text":"impl Unpin for Config","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for YatpPoolRunner&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for YatpPoolBuilder&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for DefaultRng","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for DeferContext&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;L, R&gt; Unpin for Either&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for RingQueue&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for MustConsumeVec&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["time"] = [{"text":"impl Unpin for Date","synthetic":true,"types":[]},{"text":"impl Unpin for Duration","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for ConversionRange","synthetic":true,"types":[]},{"text":"impl Unpin for ComponentRange","synthetic":true,"types":[]},{"text":"impl Unpin for IndeterminateOffset","synthetic":true,"types":[]},{"text":"impl Unpin for Format","synthetic":true,"types":[]},{"text":"impl Unpin for Format","synthetic":true,"types":[]},{"text":"impl Unpin for Instant","synthetic":true,"types":[]},{"text":"impl Unpin for OffsetDateTime","synthetic":true,"types":[]},{"text":"impl Unpin for PrimitiveDateTime","synthetic":true,"types":[]},{"text":"impl Unpin for Sign","synthetic":true,"types":[]},{"text":"impl Unpin for Time","synthetic":true,"types":[]},{"text":"impl Unpin for UtcOffset","synthetic":true,"types":[]},{"text":"impl Unpin for Weekday","synthetic":true,"types":[]}];
implementors["tipb"] = [{"text":"impl Unpin for Executor","synthetic":true,"types":[]},{"text":"impl Unpin for ExchangeSender","synthetic":true,"types":[]},{"text":"impl Unpin for ExchangeReceiver","synthetic":true,"types":[]},{"text":"impl Unpin for TableScan","synthetic":true,"types":[]},{"text":"impl Unpin for Join","synthetic":true,"types":[]},{"text":"impl Unpin for IndexScan","synthetic":true,"types":[]},{"text":"impl Unpin for Selection","synthetic":true,"types":[]},{"text":"impl Unpin for Projection","synthetic":true,"types":[]},{"text":"impl Unpin for Aggregation","synthetic":true,"types":[]},{"text":"impl Unpin for TopN","synthetic":true,"types":[]},{"text":"impl Unpin for Limit","synthetic":true,"types":[]},{"text":"impl Unpin for Kill","synthetic":true,"types":[]},{"text":"impl Unpin for ExecutorExecutionSummary","synthetic":true,"types":[]},{"text":"impl Unpin for ExecType","synthetic":true,"types":[]},{"text":"impl Unpin for ExchangeType","synthetic":true,"types":[]},{"text":"impl Unpin for EngineType","synthetic":true,"types":[]},{"text":"impl Unpin for JoinType","synthetic":true,"types":[]},{"text":"impl Unpin for JoinExecType","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for TableInfo","synthetic":true,"types":[]},{"text":"impl Unpin for ColumnInfo","synthetic":true,"types":[]},{"text":"impl Unpin for IndexInfo","synthetic":true,"types":[]},{"text":"impl Unpin for KeyRange","synthetic":true,"types":[]},{"text":"impl Unpin for FieldType","synthetic":true,"types":[]},{"text":"impl Unpin for Expr","synthetic":true,"types":[]},{"text":"impl Unpin for RpnExpr","synthetic":true,"types":[]},{"text":"impl Unpin for ByItem","synthetic":true,"types":[]},{"text":"impl Unpin for ExprType","synthetic":true,"types":[]},{"text":"impl Unpin for ScalarFuncSig","synthetic":true,"types":[]},{"text":"impl Unpin for Row","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for SelectResponse","synthetic":true,"types":[]},{"text":"impl Unpin for Chunk","synthetic":true,"types":[]},{"text":"impl Unpin for RowMeta","synthetic":true,"types":[]},{"text":"impl Unpin for DagRequest","synthetic":true,"types":[]},{"text":"impl Unpin for ChunkMemoryLayout","synthetic":true,"types":[]},{"text":"impl Unpin for UserIdentity","synthetic":true,"types":[]},{"text":"impl Unpin for StreamResponse","synthetic":true,"types":[]},{"text":"impl Unpin for EncodeType","synthetic":true,"types":[]},{"text":"impl Unpin for Endian","synthetic":true,"types":[]},{"text":"impl Unpin for AnalyzeReq","synthetic":true,"types":[]},{"text":"impl Unpin for AnalyzeIndexReq","synthetic":true,"types":[]},{"text":"impl Unpin for AnalyzeColumnsReq","synthetic":true,"types":[]},{"text":"impl Unpin for AnalyzeMixedResp","synthetic":true,"types":[]},{"text":"impl Unpin for AnalyzeColumnsResp","synthetic":true,"types":[]},{"text":"impl Unpin for AnalyzeIndexResp","synthetic":true,"types":[]},{"text":"impl Unpin for Bucket","synthetic":true,"types":[]},{"text":"impl Unpin for Histogram","synthetic":true,"types":[]},{"text":"impl Unpin for FmSketch","synthetic":true,"types":[]},{"text":"impl Unpin for SampleCollector","synthetic":true,"types":[]},{"text":"impl Unpin for CmSketchRow","synthetic":true,"types":[]},{"text":"impl Unpin for CmSketchTopN","synthetic":true,"types":[]},{"text":"impl Unpin for CmSketch","synthetic":true,"types":[]},{"text":"impl Unpin for AnalyzeType","synthetic":true,"types":[]},{"text":"impl Unpin for InUnionMetadata","synthetic":true,"types":[]},{"text":"impl Unpin for CompareInMetadata","synthetic":true,"types":[]},{"text":"impl Unpin for ChecksumRewriteRule","synthetic":true,"types":[]},{"text":"impl Unpin for ChecksumRequest","synthetic":true,"types":[]},{"text":"impl Unpin for ChecksumResponse","synthetic":true,"types":[]},{"text":"impl Unpin for ChecksumScanOn","synthetic":true,"types":[]},{"text":"impl Unpin for ChecksumAlgorithm","synthetic":true,"types":[]}];
implementors["tipb_helper"] = [{"text":"impl Unpin for ExprDefBuilder","synthetic":true,"types":[]}];
implementors["tokio"] = [{"text":"impl Unpin for DirBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for File","synthetic":true,"types":[]},{"text":"impl Unpin for OpenOptions","synthetic":true,"types":[]},{"text":"impl Unpin for ReadDir","synthetic":true,"types":[]},{"text":"impl Unpin for DirEntry","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for PollEvented&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Registration","synthetic":true,"types":[]},{"text":"impl Unpin for Stderr","synthetic":true,"types":[]},{"text":"impl Unpin for Stdin","synthetic":true,"types":[]},{"text":"impl Unpin for Stdout","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for ReadHalf&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for WriteHalf&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized&gt; Unpin for Seek&lt;'a, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized, W:&nbsp;?Sized&gt; Unpin for Copy&lt;'a, R, W&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Empty","synthetic":true,"types":[]},{"text":"impl Unpin for DuplexStream","synthetic":true,"types":[]},{"text":"impl Unpin for Repeat","synthetic":true,"types":[]},{"text":"impl Unpin for Sink","synthetic":true,"types":[]},{"text":"impl Unpin for TcpListener","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Incoming&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ReadHalf&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for WriteHalf&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for OwnedReadHalf","synthetic":true,"types":[]},{"text":"impl Unpin for OwnedWriteHalf","synthetic":true,"types":[]},{"text":"impl Unpin for ReuniteError","synthetic":true,"types":[]},{"text":"impl Unpin for TcpStream","synthetic":true,"types":[]},{"text":"impl Unpin for UdpSocket","synthetic":true,"types":[]},{"text":"impl Unpin for SendHalf","synthetic":true,"types":[]},{"text":"impl Unpin for RecvHalf","synthetic":true,"types":[]},{"text":"impl Unpin for ReuniteError","synthetic":true,"types":[]},{"text":"impl Unpin for UnixDatagram","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for RecvHalf&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SendHalf&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for OwnedSendHalf","synthetic":true,"types":[]},{"text":"impl Unpin for OwnedRecvHalf","synthetic":true,"types":[]},{"text":"impl Unpin for ReuniteError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Incoming&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for UnixListener","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ReadHalf&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for WriteHalf&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for OwnedReadHalf","synthetic":true,"types":[]},{"text":"impl Unpin for OwnedWriteHalf","synthetic":true,"types":[]},{"text":"impl Unpin for ReuniteError","synthetic":true,"types":[]},{"text":"impl Unpin for UnixStream","synthetic":true,"types":[]},{"text":"impl Unpin for UCred","synthetic":true,"types":[]},{"text":"impl Unpin for Command","synthetic":true,"types":[]},{"text":"impl Unpin for Child","synthetic":true,"types":[]},{"text":"impl Unpin for ChildStdin","synthetic":true,"types":[]},{"text":"impl Unpin for ChildStdout","synthetic":true,"types":[]},{"text":"impl Unpin for ChildStderr","synthetic":true,"types":[]},{"text":"impl Unpin for JoinError","synthetic":true,"types":[]},{"text":"impl Unpin for Builder","synthetic":true,"types":[]},{"text":"impl Unpin for Handle","synthetic":true,"types":[]},{"text":"impl Unpin for TryCurrentError","synthetic":true,"types":[]},{"text":"impl Unpin for Runtime","synthetic":true,"types":[]},{"text":"impl Unpin for SignalKind","synthetic":true,"types":[]},{"text":"impl Unpin for Signal","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Unpin for StreamMap&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Barrier","synthetic":true,"types":[]},{"text":"impl Unpin for BarrierWaitResult","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for SendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for RecvError","synthetic":true,"types":[]},{"text":"impl Unpin for TryRecvError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for UnboundedSender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for UnboundedReceiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for SendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for TrySendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for RecvError","synthetic":true,"types":[]},{"text":"impl Unpin for TryRecvError","synthetic":true,"types":[]},{"text":"impl Unpin for ClosedError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for SendTimeoutError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; Unpin for Mutex&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Unpin for MutexGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; Unpin for OwnedMutexGuard&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for TryLockError","synthetic":true,"types":[]},{"text":"impl Unpin for Notify","synthetic":true,"types":[]},{"text":"impl Unpin for RecvError","synthetic":true,"types":[]},{"text":"impl Unpin for TryRecvError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Semaphore","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SemaphorePermit&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for OwnedSemaphorePermit","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; Unpin for RwLock&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Unpin for RwLockReadGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Unpin for RwLockWriteGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for SendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Ref&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for LocalSet","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for LocalKey&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Expired&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Key","synthetic":true,"types":[]},{"text":"impl Unpin for Delay","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Instant","synthetic":true,"types":[]},{"text":"impl Unpin for Interval","synthetic":true,"types":[]},{"text":"impl Unpin for Elapsed","synthetic":true,"types":[]},{"text":"impl&lt;'__pin, R&gt; Unpin for BufReader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, R&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, RW&gt; Unpin for BufStream&lt;RW&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, RW&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, W&gt; Unpin for BufWriter&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, W&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, R&gt; Unpin for Lines&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, R&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, R&gt; Unpin for Split&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, R&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, S, B&gt; Unpin for StreamReader&lt;S, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, S, B&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, R&gt; Unpin for ReaderStream&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, R&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, R&gt; Unpin for Take&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, R&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Unpin for JoinHandle&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Unpin for Empty&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; Unpin for Iter&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; Unpin for Once&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Unpin for Pending&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Unpin for Receiver&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Unpin for DelayQueue&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, T&gt; Unpin for Timeout&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, T&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, T&gt; Unpin for Throttle&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, T&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["tokio_executor"] = [{"text":"impl Unpin for Enter","synthetic":true,"types":[]},{"text":"impl Unpin for EnterError","synthetic":true,"types":[]},{"text":"impl Unpin for SpawnError","synthetic":true,"types":[]},{"text":"impl Unpin for DefaultExecutor","synthetic":true,"types":[]},{"text":"impl Unpin for DefaultGuard","synthetic":true,"types":[]},{"text":"impl Unpin for ParkThread","synthetic":true,"types":[]},{"text":"impl Unpin for ParkError","synthetic":true,"types":[]},{"text":"impl Unpin for UnparkThread","synthetic":true,"types":[]}];
implementors["tokio_openssl"] = [{"text":"impl&lt;S&gt; Unpin for SslStream&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for HandshakeError&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["tokio_timer"] = [{"text":"impl Unpin for Clock","synthetic":true,"types":[]},{"text":"impl Unpin for DefaultGuard","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for DelayQueue&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Expired&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Key","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Throttle&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for ThrottleError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Timeout&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Error&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Handle","synthetic":true,"types":[]},{"text":"impl Unpin for DefaultGuard","synthetic":true,"types":[]},{"text":"impl&lt;T, N&gt; Unpin for Timer&lt;T, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Turn","synthetic":true,"types":[]},{"text":"impl Unpin for Delay","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Interval","synthetic":true,"types":[]}];
implementors["tokio_tls"] = [{"text":"impl&lt;S&gt; Unpin for TlsStream&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for TlsConnector","synthetic":true,"types":[]},{"text":"impl Unpin for TlsAcceptor","synthetic":true,"types":[]}];
implementors["tokio_util"] = [{"text":"impl Unpin for BytesCodec","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Unpin for FramedParts&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Builder","synthetic":true,"types":[]},{"text":"impl Unpin for LengthDelimitedCodecError","synthetic":true,"types":[]},{"text":"impl Unpin for LengthDelimitedCodec","synthetic":true,"types":[]},{"text":"impl Unpin for LinesCodec","synthetic":true,"types":[]},{"text":"impl Unpin for LinesCodecError","synthetic":true,"types":[]},{"text":"impl&lt;'__pin, T, U&gt; Unpin for Framed&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, T, U&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, T, D&gt; Unpin for FramedRead&lt;T, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, T, D&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'__pin, T, E&gt; Unpin for FramedWrite&lt;T, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Origin&lt;'__pin, T, E&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["toml"] = [{"text":"impl&lt;K, V&gt; Unpin for Map&lt;K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Entry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for VacantEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for OccupiedEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for IterMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for IntoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Keys&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Values&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Value","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Serializer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Deserializer&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["try_lock"] = [{"text":"impl&lt;T&gt; Unpin for TryLock&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Locked&lt;'a, T&gt;","synthetic":true,"types":[]}];
implementors["twox_hash"] = [{"text":"impl Unpin for XxHash64","synthetic":true,"types":[]},{"text":"impl Unpin for XxHash32","synthetic":true,"types":[]}];
implementors["txn_types"] = [{"text":"impl Unpin for LockType","synthetic":true,"types":[]},{"text":"impl Unpin for Lock","synthetic":true,"types":[]},{"text":"impl Unpin for TimeStamp","synthetic":true,"types":[]},{"text":"impl Unpin for TsSet","synthetic":true,"types":[]},{"text":"impl Unpin for Key","synthetic":true,"types":[]},{"text":"impl Unpin for MutationType","synthetic":true,"types":[]},{"text":"impl Unpin for Mutation","synthetic":true,"types":[]},{"text":"impl Unpin for OldValue","synthetic":true,"types":[]},{"text":"impl Unpin for TxnExtra","synthetic":true,"types":[]},{"text":"impl Unpin for WriteType","synthetic":true,"types":[]},{"text":"impl Unpin for Write","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for WriteRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ErrorInner","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]}];
implementors["typenum"] = [{"text":"impl Unpin for B0","synthetic":true,"types":[]},{"text":"impl Unpin for B1","synthetic":true,"types":[]},{"text":"impl&lt;U&gt; Unpin for PInt&lt;U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;U&gt; Unpin for NInt&lt;U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Z0","synthetic":true,"types":[]},{"text":"impl Unpin for UTerm","synthetic":true,"types":[]},{"text":"impl&lt;U, B&gt; Unpin for UInt&lt;U, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ATerm","synthetic":true,"types":[]},{"text":"impl&lt;V, A&gt; Unpin for TArr&lt;V, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Greater","synthetic":true,"types":[]},{"text":"impl Unpin for Less","synthetic":true,"types":[]},{"text":"impl Unpin for Equal","synthetic":true,"types":[]}];
implementors["unchecked_index"] = [{"text":"impl&lt;S&gt; Unpin for UncheckedIndex&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["unicase"] = [{"text":"impl&lt;S&gt; Unpin for UniCase&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Ascii&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["unicode_bidi"] = [{"text":"impl Unpin for Level","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for BidiClass","synthetic":true,"types":[]},{"text":"impl Unpin for ParagraphInfo","synthetic":true,"types":[]},{"text":"impl&lt;'text&gt; Unpin for InitialInfo&lt;'text&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'text&gt; Unpin for BidiInfo&lt;'text&gt;","synthetic":true,"types":[]}];
implementors["unicode_normalization"] = [{"text":"impl&lt;I&gt; Unpin for Decompositions&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for Recompositions&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for IsNormalized","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for StreamSafe&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["unicode_segmentation"] = [{"text":"impl&lt;'a&gt; Unpin for GraphemeIndices&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Graphemes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for GraphemeCursor","synthetic":true,"types":[]},{"text":"impl Unpin for GraphemeIncomplete","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for UnicodeWords&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for UWordBounds&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for UWordBoundIndices&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for UnicodeSentences&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for USentenceBounds&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for USentenceBoundIndices&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["untrusted"] = [{"text":"impl&lt;'a&gt; Unpin for Input&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Reader&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Mark","synthetic":true,"types":[]},{"text":"impl Unpin for EndOfInput","synthetic":true,"types":[]}];
implementors["url"] = [{"text":"impl&lt;S&gt; Unpin for Host&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Origin","synthetic":true,"types":[]},{"text":"impl Unpin for OpaqueOrigin","synthetic":true,"types":[]},{"text":"impl Unpin for ParseError","synthetic":true,"types":[]},{"text":"impl Unpin for SyntaxViolation","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for PathSegmentsMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Position","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Parse&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ParseIntoOwned&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ByteSerialize&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Serializer&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Url","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ParseOptions&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for UrlQuery&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["utf8parse"] = [{"text":"impl Unpin for Parser","synthetic":true,"types":[]}];
implementors["uuid"] = [{"text":"impl Unpin for Builder","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Hyphenated","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for HyphenatedRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Simple","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SimpleRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Urn","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for UrnRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Version","synthetic":true,"types":[]},{"text":"impl Unpin for Variant","synthetic":true,"types":[]},{"text":"impl Unpin for Uuid","synthetic":true,"types":[]}];
implementors["vec_map"] = [{"text":"impl&lt;V&gt; Unpin for VecMap&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Unpin for Entry&lt;'a, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Unpin for VacantEntry&lt;'a, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Unpin for OccupiedEntry&lt;'a, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Unpin for Iter&lt;'a, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Unpin for IterMut&lt;'a, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Unpin for Keys&lt;'a, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Unpin for Values&lt;'a, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Unpin for ValuesMut&lt;'a, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; Unpin for IntoIter&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Unpin for Drain&lt;'a, V&gt;","synthetic":true,"types":[]}];
implementors["walkdir"] = [{"text":"impl Unpin for DirEntry","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for WalkDir","synthetic":true,"types":[]},{"text":"impl Unpin for IntoIter","synthetic":true,"types":[]},{"text":"impl&lt;I, P&gt; Unpin for FilterEntry&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["want"] = [{"text":"impl Unpin for Giver","synthetic":true,"types":[]},{"text":"impl Unpin for Taker","synthetic":true,"types":[]},{"text":"impl Unpin for SharedGiver","synthetic":true,"types":[]},{"text":"impl Unpin for Closed","synthetic":true,"types":[]}];
implementors["xml"] = [{"text":"impl&lt;'a&gt; Unpin for Name&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; Unpin for ReprDisplay&lt;'a, 'b&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'b: 'a,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for OwnedName","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Attribute&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for OwnedAttribute","synthetic":true,"types":[]},{"text":"impl Unpin for TextPosition","synthetic":true,"types":[]},{"text":"impl Unpin for XmlVersion","synthetic":true,"types":[]},{"text":"impl Unpin for Namespace","synthetic":true,"types":[]},{"text":"impl Unpin for NamespaceStack","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for NamespaceStackMappings&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for CheckedTarget&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ParserConfig","synthetic":true,"types":[]},{"text":"impl Unpin for XmlEvent","synthetic":true,"types":[]},{"text":"impl Unpin for ErrorKind","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for EventReader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for Events&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for EmitterError","synthetic":true,"types":[]},{"text":"impl Unpin for EmitterConfig","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for XmlEvent&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for EndElementBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for StartElementBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Unpin for EventWriter&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["yatp"] = [{"text":"impl Unpin for MULTILEVEL_LEVEL_ELAPSED","synthetic":true,"types":[]},{"text":"impl Unpin for MULTILEVEL_LEVEL0_CHANCE","synthetic":true,"types":[]},{"text":"impl Unpin for SchedConfig","synthetic":true,"types":[]},{"text":"impl Unpin for Builder","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for CloneRunnerBuilder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Remote&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Local&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for ThreadPool&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for MultilevelRunnerBuilder&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for MultilevelRunner&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Config","synthetic":true,"types":[]},{"text":"impl Unpin for Builder","synthetic":true,"types":[]},{"text":"impl Unpin for Extras","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Pop&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for QueueType","synthetic":true,"types":[]},{"text":"impl Unpin for Task","synthetic":true,"types":[]},{"text":"impl Unpin for TaskCell","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Handle&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Runner","synthetic":true,"types":[]},{"text":"impl Unpin for Task","synthetic":true,"types":[]},{"text":"impl Unpin for TaskCell","synthetic":true,"types":[]},{"text":"impl Unpin for Runner","synthetic":true,"types":[]}];
implementors["zeroize"] = [{"text":"impl&lt;Z&gt; Unpin for Zeroizing&lt;Z&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Z: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["zstd_sys"] = [{"text":"impl Unpin for ZSTD_CCtx_s","synthetic":true,"types":[]},{"text":"impl Unpin for ZSTD_DCtx_s","synthetic":true,"types":[]},{"text":"impl Unpin for ZSTD_strategy","synthetic":true,"types":[]},{"text":"impl Unpin for ZSTD_cParameter","synthetic":true,"types":[]},{"text":"impl Unpin for ZSTD_bounds","synthetic":true,"types":[]},{"text":"impl Unpin for ZSTD_ResetDirective","synthetic":true,"types":[]},{"text":"impl Unpin for ZSTD_dParameter","synthetic":true,"types":[]},{"text":"impl Unpin for ZSTD_inBuffer_s","synthetic":true,"types":[]},{"text":"impl Unpin for ZSTD_outBuffer_s","synthetic":true,"types":[]},{"text":"impl Unpin for ZSTD_EndDirective","synthetic":true,"types":[]},{"text":"impl Unpin for ZSTD_CDict_s","synthetic":true,"types":[]},{"text":"impl Unpin for ZSTD_DDict_s","synthetic":true,"types":[]},{"text":"impl Unpin for ZDICT_params_t","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()