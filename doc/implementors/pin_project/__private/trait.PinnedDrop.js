(function() {var implementors = {};
implementors["minitrace"] = [{"text":"impl&lt;T&gt; PinnedDrop for TraceSpawned&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; PinnedDrop for TraceWrapped&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; PinnedDrop for MayTraceRootFuture&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; PinnedDrop for TraceRootFuture&lt;T&gt;","synthetic":false,"types":[]}];
implementors["rusoto_signature"] = [{"text":"impl PinnedDrop for ByteStream","synthetic":false,"types":[]}];
implementors["tikv"] = [{"text":"impl&lt;'a, PF, F&gt; PinnedDrop for ConcurrencyLimiter&lt;'a, PF, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PF: Future&lt;Output = SemaphorePermit&lt;'a&gt;&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Future,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, F&gt; PinnedDrop for Tracker&lt;'a, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Future,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;S&gt; PinnedDrop for TlsIncoming&lt;S&gt;","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()