(function() {var implementors = {};
implementors["hyper"] = [{"text":"impl&lt;I, F, E&gt; PinnedDrop for <a class=\"struct\" href=\"hyper/server/conn/struct.Connecting.html\" title=\"struct hyper::server::conn::Connecting\">Connecting</a>&lt;I, F, E&gt;","synthetic":false,"types":["hyper::server::conn::Connecting"]},{"text":"impl&lt;T, S, E&gt; PinnedDrop for <a class=\"struct\" href=\"hyper/server/conn/struct.Connection.html\" title=\"struct hyper::server::conn::Connection\">Connection</a>&lt;T, S, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: HttpService&lt;<a class=\"struct\" href=\"hyper/struct.Body.html\" title=\"struct hyper::Body\">Body</a>&gt;,&nbsp;</span>","synthetic":false,"types":["hyper::server::conn::Connection"]},{"text":"impl&lt;I, S, E&gt; PinnedDrop for <a class=\"struct\" href=\"hyper/server/struct.Server.html\" title=\"struct hyper::server::Server\">Server</a>&lt;I, S, E&gt;","synthetic":false,"types":["hyper::server::Server"]}];
implementors["minitrace"] = [{"text":"impl&lt;T&gt; PinnedDrop for <a class=\"struct\" href=\"minitrace/future/struct.TraceSpawned.html\" title=\"struct minitrace::future::TraceSpawned\">TraceSpawned</a>&lt;T&gt;","synthetic":false,"types":["minitrace::future::TraceSpawned"]},{"text":"impl&lt;T&gt; PinnedDrop for <a class=\"struct\" href=\"minitrace/future/struct.TraceWrapped.html\" title=\"struct minitrace::future::TraceWrapped\">TraceWrapped</a>&lt;T&gt;","synthetic":false,"types":["minitrace::future::TraceWrapped"]},{"text":"impl&lt;T&gt; PinnedDrop for <a class=\"struct\" href=\"minitrace/future/struct.MayTraceRootFuture.html\" title=\"struct minitrace::future::MayTraceRootFuture\">MayTraceRootFuture</a>&lt;T&gt;","synthetic":false,"types":["minitrace::future::MayTraceRootFuture"]},{"text":"impl&lt;T&gt; PinnedDrop for <a class=\"struct\" href=\"minitrace/future/struct.TraceRootFuture.html\" title=\"struct minitrace::future::TraceRootFuture\">TraceRootFuture</a>&lt;T&gt;","synthetic":false,"types":["minitrace::future::TraceRootFuture"]}];
implementors["rusoto_signature"] = [{"text":"impl PinnedDrop for <a class=\"struct\" href=\"rusoto_signature/stream/struct.ByteStream.html\" title=\"struct rusoto_signature::stream::ByteStream\">ByteStream</a>","synthetic":false,"types":["rusoto_signature::stream::ByteStream"]}];
implementors["tikv"] = [{"text":"impl&lt;'a, PF, F&gt; <a class=\"trait\" href=\"pin_project/__private/trait.PinnedDrop.html\" title=\"trait pin_project::__private::PinnedDrop\">PinnedDrop</a> for <a class=\"struct\" href=\"tikv/coprocessor/interceptors/concurrency_limiter/struct.ConcurrencyLimiter.html\" title=\"struct tikv::coprocessor::interceptors::concurrency_limiter::ConcurrencyLimiter\">ConcurrencyLimiter</a>&lt;'a, PF, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"tokio/sync/semaphore/struct.SemaphorePermit.html\" title=\"struct tokio::sync::semaphore::SemaphorePermit\">SemaphorePermit</a>&lt;'a&gt;&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>,&nbsp;</span>","synthetic":false,"types":["tikv::coprocessor::interceptors::concurrency_limiter::ConcurrencyLimiter"]},{"text":"impl&lt;'a, F&gt; <a class=\"trait\" href=\"pin_project/__private/trait.PinnedDrop.html\" title=\"trait pin_project::__private::PinnedDrop\">PinnedDrop</a> for <a class=\"struct\" href=\"tikv/coprocessor/interceptors/tracker/struct.Tracker.html\" title=\"struct tikv::coprocessor::interceptors::tracker::Tracker\">Tracker</a>&lt;'a, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>,&nbsp;</span>","synthetic":false,"types":["tikv::coprocessor::interceptors::tracker::Tracker"]},{"text":"impl&lt;S&gt; <a class=\"trait\" href=\"pin_project/__private/trait.PinnedDrop.html\" title=\"trait pin_project::__private::PinnedDrop\">PinnedDrop</a> for <a class=\"struct\" href=\"tikv/server/status_server/struct.TlsIncoming.html\" title=\"struct tikv::server::status_server::TlsIncoming\">TlsIncoming</a>&lt;S&gt;","synthetic":false,"types":["tikv::server::status_server::TlsIncoming"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()