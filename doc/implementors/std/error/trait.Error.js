(function() {var implementors = {};
implementors["aho_corasick"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["antidote"] = [{"text":"impl Error for TryLockError","synthetic":false,"types":[]}];
implementors["base64"] = [{"text":"impl Error for DecodeError","synthetic":false,"types":[]}];
implementors["bstr"] = [{"text":"impl Error for FromUtf8Error","synthetic":false,"types":[]},{"text":"impl Error for Utf8Error","synthetic":false,"types":[]}];
implementors["cargo_metadata"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["chrono"] = [{"text":"impl Error for ParseError","synthetic":false,"types":[]}];
implementors["clap"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["crossbeam_channel"] = [{"text":"impl&lt;T:&nbsp;Send&gt; Error for SendError&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Send&gt; Error for TrySendError&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Send&gt; Error for SendTimeoutError&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Error for RecvError","synthetic":false,"types":[]},{"text":"impl Error for TryRecvError","synthetic":false,"types":[]},{"text":"impl Error for RecvTimeoutError","synthetic":false,"types":[]},{"text":"impl Error for TrySelectError","synthetic":false,"types":[]},{"text":"impl Error for SelectTimeoutError","synthetic":false,"types":[]}];
implementors["darling_core"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["debugid"] = [{"text":"impl Error for ParseDebugIdError","synthetic":false,"types":[]},{"text":"impl Error for ParseCodeIdError","synthetic":false,"types":[]}];
implementors["digest"] = [{"text":"impl Error for InvalidOutputSize","synthetic":false,"types":[]}];
implementors["engine_traits"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["failure"] = [{"text":"impl&lt;E:&nbsp;Display + Debug&gt; Error for Compat&lt;E&gt;","synthetic":false,"types":[]}];
implementors["flate2"] = [{"text":"impl Error for DecompressError","synthetic":false,"types":[]},{"text":"impl Error for CompressError","synthetic":false,"types":[]}];
implementors["futures_channel"] = [{"text":"impl Error for SendError","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Any&gt; Error for TrySendError&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Error for TryRecvError","synthetic":false,"types":[]},{"text":"impl Error for Canceled","synthetic":false,"types":[]}];
implementors["futures_executor"] = [{"text":"impl Error for EnterError","synthetic":false,"types":[]}];
implementors["futures_task"] = [{"text":"impl Error for SpawnError","synthetic":false,"types":[]}];
implementors["futures_util"] = [{"text":"impl Error for Aborted","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Any, Item&gt; Error for ReuniteError&lt;T, Item&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Any&gt; Error for ReuniteError&lt;T&gt;","synthetic":false,"types":[]}];
implementors["getrandom"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["grpcio"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["h2"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["hex"] = [{"text":"impl Error for FromHexError","synthetic":false,"types":[]}];
implementors["http"] = [{"text":"impl Error for InvalidHeaderName","synthetic":false,"types":[]},{"text":"impl Error for InvalidHeaderValue","synthetic":false,"types":[]},{"text":"impl Error for ToStrError","synthetic":false,"types":[]},{"text":"impl Error for InvalidMethod","synthetic":false,"types":[]},{"text":"impl Error for InvalidStatusCode","synthetic":false,"types":[]},{"text":"impl Error for InvalidUri","synthetic":false,"types":[]},{"text":"impl Error for InvalidUriParts","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["httparse"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["hyper"] = [{"text":"impl Error for InvalidNameError","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["ipnet"] = [{"text":"impl Error for PrefixLenError","synthetic":false,"types":[]},{"text":"impl Error for AddrParseError","synthetic":false,"types":[]}];
implementors["ipnetwork"] = [{"text":"impl Error for IpNetworkError","synthetic":false,"types":[]}];
implementors["log"] = [{"text":"impl Error for SetLoggerError","synthetic":false,"types":[]},{"text":"impl Error for ParseLevelError","synthetic":false,"types":[]}];
implementors["mime"] = [{"text":"impl Error for FromStrError","synthetic":false,"types":[]}];
implementors["native_tls"] = [{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl&lt;S&gt; Error for HandshakeError&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Any + Debug,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["nix"] = [{"text":"impl Error for Errno","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["nom"] = [{"text":"impl&lt;E&gt; Error for Err&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Debug,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["openssl"] = [{"text":"impl Error for ErrorStack","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Debug&gt; Error for HandshakeError&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl Error for X509VerifyResult","synthetic":false,"types":[]}];
implementors["ordered_float"] = [{"text":"impl Error for FloatIsNan","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Debug&gt; Error for ParseNotNanError&lt;E&gt;","synthetic":false,"types":[]}];
implementors["pd_client"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["pnet_base"] = [{"text":"impl Error for ParseMacAddrErr","synthetic":false,"types":[]}];
implementors["pprof"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["procfs"] = [{"text":"impl Error for ProcError","synthetic":false,"types":[]}];
implementors["prometheus"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["prost"] = [{"text":"impl Error for DecodeError","synthetic":false,"types":[]},{"text":"impl Error for EncodeError","synthetic":false,"types":[]}];
implementors["protobuf"] = [{"text":"impl Error for ProtobufError","synthetic":false,"types":[]}];
implementors["quick_xml"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["raft"] = [{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl Error for StorageError","synthetic":false,"types":[]}];
implementors["raft_engine"] = [{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["raftstore"] = [{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["rand"] = [{"text":"impl Error for BernoulliError","synthetic":false,"types":[]},{"text":"impl Error for WeightedError","synthetic":false,"types":[]},{"text":"impl Error for ReadError","synthetic":false,"types":[]}];
implementors["rand_core"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["rayon_core"] = [{"text":"impl Error for ThreadPoolBuildError","synthetic":false,"types":[]}];
implementors["regex"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["regex_syntax"] = [{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl Error for CaseFoldError","synthetic":false,"types":[]},{"text":"impl Error for UnicodeWordError","synthetic":false,"types":[]}];
implementors["reqwest"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["rusoto_core"] = [{"text":"impl&lt;E:&nbsp;Error + 'static&gt; Error for RusotoError&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl Error for HttpDispatchError","synthetic":false,"types":[]},{"text":"impl Error for TlsError","synthetic":false,"types":[]}];
implementors["rusoto_credential"] = [{"text":"impl Error for CredentialsError","synthetic":false,"types":[]}];
implementors["rusoto_kms"] = [{"text":"impl Error for CancelKeyDeletionError","synthetic":false,"types":[]},{"text":"impl Error for ConnectCustomKeyStoreError","synthetic":false,"types":[]},{"text":"impl Error for CreateAliasError","synthetic":false,"types":[]},{"text":"impl Error for CreateCustomKeyStoreError","synthetic":false,"types":[]},{"text":"impl Error for CreateGrantError","synthetic":false,"types":[]},{"text":"impl Error for CreateKeyError","synthetic":false,"types":[]},{"text":"impl Error for DecryptError","synthetic":false,"types":[]},{"text":"impl Error for DeleteAliasError","synthetic":false,"types":[]},{"text":"impl Error for DeleteCustomKeyStoreError","synthetic":false,"types":[]},{"text":"impl Error for DeleteImportedKeyMaterialError","synthetic":false,"types":[]},{"text":"impl Error for DescribeCustomKeyStoresError","synthetic":false,"types":[]},{"text":"impl Error for DescribeKeyError","synthetic":false,"types":[]},{"text":"impl Error for DisableKeyError","synthetic":false,"types":[]},{"text":"impl Error for DisableKeyRotationError","synthetic":false,"types":[]},{"text":"impl Error for DisconnectCustomKeyStoreError","synthetic":false,"types":[]},{"text":"impl Error for EnableKeyError","synthetic":false,"types":[]},{"text":"impl Error for EnableKeyRotationError","synthetic":false,"types":[]},{"text":"impl Error for EncryptError","synthetic":false,"types":[]},{"text":"impl Error for GenerateDataKeyError","synthetic":false,"types":[]},{"text":"impl Error for GenerateDataKeyPairError","synthetic":false,"types":[]},{"text":"impl Error for GenerateDataKeyPairWithoutPlaintextError","synthetic":false,"types":[]},{"text":"impl Error for GenerateDataKeyWithoutPlaintextError","synthetic":false,"types":[]},{"text":"impl Error for GenerateRandomError","synthetic":false,"types":[]},{"text":"impl Error for GetKeyPolicyError","synthetic":false,"types":[]},{"text":"impl Error for GetKeyRotationStatusError","synthetic":false,"types":[]},{"text":"impl Error for GetParametersForImportError","synthetic":false,"types":[]},{"text":"impl Error for GetPublicKeyError","synthetic":false,"types":[]},{"text":"impl Error for ImportKeyMaterialError","synthetic":false,"types":[]},{"text":"impl Error for ListAliasesError","synthetic":false,"types":[]},{"text":"impl Error for ListGrantsError","synthetic":false,"types":[]},{"text":"impl Error for ListKeyPoliciesError","synthetic":false,"types":[]},{"text":"impl Error for ListKeysError","synthetic":false,"types":[]},{"text":"impl Error for ListResourceTagsError","synthetic":false,"types":[]},{"text":"impl Error for ListRetirableGrantsError","synthetic":false,"types":[]},{"text":"impl Error for PutKeyPolicyError","synthetic":false,"types":[]},{"text":"impl Error for ReEncryptError","synthetic":false,"types":[]},{"text":"impl Error for RetireGrantError","synthetic":false,"types":[]},{"text":"impl Error for RevokeGrantError","synthetic":false,"types":[]},{"text":"impl Error for ScheduleKeyDeletionError","synthetic":false,"types":[]},{"text":"impl Error for SignError","synthetic":false,"types":[]},{"text":"impl Error for TagResourceError","synthetic":false,"types":[]},{"text":"impl Error for UntagResourceError","synthetic":false,"types":[]},{"text":"impl Error for UpdateAliasError","synthetic":false,"types":[]},{"text":"impl Error for UpdateCustomKeyStoreError","synthetic":false,"types":[]},{"text":"impl Error for UpdateKeyDescriptionError","synthetic":false,"types":[]},{"text":"impl Error for VerifyError","synthetic":false,"types":[]}];
implementors["rusoto_s3"] = [{"text":"impl Error for AbortMultipartUploadError","synthetic":false,"types":[]},{"text":"impl Error for CompleteMultipartUploadError","synthetic":false,"types":[]},{"text":"impl Error for CopyObjectError","synthetic":false,"types":[]},{"text":"impl Error for CreateBucketError","synthetic":false,"types":[]},{"text":"impl Error for CreateMultipartUploadError","synthetic":false,"types":[]},{"text":"impl Error for DeleteBucketError","synthetic":false,"types":[]},{"text":"impl Error for DeleteBucketAnalyticsConfigurationError","synthetic":false,"types":[]},{"text":"impl Error for DeleteBucketCorsError","synthetic":false,"types":[]},{"text":"impl Error for DeleteBucketEncryptionError","synthetic":false,"types":[]},{"text":"impl Error for DeleteBucketInventoryConfigurationError","synthetic":false,"types":[]},{"text":"impl Error for DeleteBucketLifecycleError","synthetic":false,"types":[]},{"text":"impl Error for DeleteBucketMetricsConfigurationError","synthetic":false,"types":[]},{"text":"impl Error for DeleteBucketPolicyError","synthetic":false,"types":[]},{"text":"impl Error for DeleteBucketReplicationError","synthetic":false,"types":[]},{"text":"impl Error for DeleteBucketTaggingError","synthetic":false,"types":[]},{"text":"impl Error for DeleteBucketWebsiteError","synthetic":false,"types":[]},{"text":"impl Error for DeleteObjectError","synthetic":false,"types":[]},{"text":"impl Error for DeleteObjectTaggingError","synthetic":false,"types":[]},{"text":"impl Error for DeleteObjectsError","synthetic":false,"types":[]},{"text":"impl Error for DeletePublicAccessBlockError","synthetic":false,"types":[]},{"text":"impl Error for GetBucketAccelerateConfigurationError","synthetic":false,"types":[]},{"text":"impl Error for GetBucketAclError","synthetic":false,"types":[]},{"text":"impl Error for GetBucketAnalyticsConfigurationError","synthetic":false,"types":[]},{"text":"impl Error for GetBucketCorsError","synthetic":false,"types":[]},{"text":"impl Error for GetBucketEncryptionError","synthetic":false,"types":[]},{"text":"impl Error for GetBucketInventoryConfigurationError","synthetic":false,"types":[]},{"text":"impl Error for GetBucketLifecycleError","synthetic":false,"types":[]},{"text":"impl Error for GetBucketLifecycleConfigurationError","synthetic":false,"types":[]},{"text":"impl Error for GetBucketLocationError","synthetic":false,"types":[]},{"text":"impl Error for GetBucketLoggingError","synthetic":false,"types":[]},{"text":"impl Error for GetBucketMetricsConfigurationError","synthetic":false,"types":[]},{"text":"impl Error for GetBucketNotificationError","synthetic":false,"types":[]},{"text":"impl Error for GetBucketNotificationConfigurationError","synthetic":false,"types":[]},{"text":"impl Error for GetBucketPolicyError","synthetic":false,"types":[]},{"text":"impl Error for GetBucketPolicyStatusError","synthetic":false,"types":[]},{"text":"impl Error for GetBucketReplicationError","synthetic":false,"types":[]},{"text":"impl Error for GetBucketRequestPaymentError","synthetic":false,"types":[]},{"text":"impl Error for GetBucketTaggingError","synthetic":false,"types":[]},{"text":"impl Error for GetBucketVersioningError","synthetic":false,"types":[]},{"text":"impl Error for GetBucketWebsiteError","synthetic":false,"types":[]},{"text":"impl Error for GetObjectError","synthetic":false,"types":[]},{"text":"impl Error for GetObjectAclError","synthetic":false,"types":[]},{"text":"impl Error for GetObjectLegalHoldError","synthetic":false,"types":[]},{"text":"impl Error for GetObjectLockConfigurationError","synthetic":false,"types":[]},{"text":"impl Error for GetObjectRetentionError","synthetic":false,"types":[]},{"text":"impl Error for GetObjectTaggingError","synthetic":false,"types":[]},{"text":"impl Error for GetObjectTorrentError","synthetic":false,"types":[]},{"text":"impl Error for GetPublicAccessBlockError","synthetic":false,"types":[]},{"text":"impl Error for HeadBucketError","synthetic":false,"types":[]},{"text":"impl Error for HeadObjectError","synthetic":false,"types":[]},{"text":"impl Error for ListBucketAnalyticsConfigurationsError","synthetic":false,"types":[]},{"text":"impl Error for ListBucketInventoryConfigurationsError","synthetic":false,"types":[]},{"text":"impl Error for ListBucketMetricsConfigurationsError","synthetic":false,"types":[]},{"text":"impl Error for ListBucketsError","synthetic":false,"types":[]},{"text":"impl Error for ListMultipartUploadsError","synthetic":false,"types":[]},{"text":"impl Error for ListObjectVersionsError","synthetic":false,"types":[]},{"text":"impl Error for ListObjectsError","synthetic":false,"types":[]},{"text":"impl Error for ListObjectsV2Error","synthetic":false,"types":[]},{"text":"impl Error for ListPartsError","synthetic":false,"types":[]},{"text":"impl Error for PutBucketAccelerateConfigurationError","synthetic":false,"types":[]},{"text":"impl Error for PutBucketAclError","synthetic":false,"types":[]},{"text":"impl Error for PutBucketAnalyticsConfigurationError","synthetic":false,"types":[]},{"text":"impl Error for PutBucketCorsError","synthetic":false,"types":[]},{"text":"impl Error for PutBucketEncryptionError","synthetic":false,"types":[]},{"text":"impl Error for PutBucketInventoryConfigurationError","synthetic":false,"types":[]},{"text":"impl Error for PutBucketLifecycleError","synthetic":false,"types":[]},{"text":"impl Error for PutBucketLifecycleConfigurationError","synthetic":false,"types":[]},{"text":"impl Error for PutBucketLoggingError","synthetic":false,"types":[]},{"text":"impl Error for PutBucketMetricsConfigurationError","synthetic":false,"types":[]},{"text":"impl Error for PutBucketNotificationError","synthetic":false,"types":[]},{"text":"impl Error for PutBucketNotificationConfigurationError","synthetic":false,"types":[]},{"text":"impl Error for PutBucketPolicyError","synthetic":false,"types":[]},{"text":"impl Error for PutBucketReplicationError","synthetic":false,"types":[]},{"text":"impl Error for PutBucketRequestPaymentError","synthetic":false,"types":[]},{"text":"impl Error for PutBucketTaggingError","synthetic":false,"types":[]},{"text":"impl Error for PutBucketVersioningError","synthetic":false,"types":[]},{"text":"impl Error for PutBucketWebsiteError","synthetic":false,"types":[]},{"text":"impl Error for PutObjectError","synthetic":false,"types":[]},{"text":"impl Error for PutObjectAclError","synthetic":false,"types":[]},{"text":"impl Error for PutObjectLegalHoldError","synthetic":false,"types":[]},{"text":"impl Error for PutObjectLockConfigurationError","synthetic":false,"types":[]},{"text":"impl Error for PutObjectRetentionError","synthetic":false,"types":[]},{"text":"impl Error for PutObjectTaggingError","synthetic":false,"types":[]},{"text":"impl Error for PutPublicAccessBlockError","synthetic":false,"types":[]},{"text":"impl Error for RestoreObjectError","synthetic":false,"types":[]},{"text":"impl Error for SelectObjectContentError","synthetic":false,"types":[]},{"text":"impl Error for UploadPartError","synthetic":false,"types":[]},{"text":"impl Error for UploadPartCopyError","synthetic":false,"types":[]}];
implementors["rusoto_signature"] = [{"text":"impl Error for ParseRegionError","synthetic":false,"types":[]}];
implementors["rusoto_sts"] = [{"text":"impl Error for AssumeRoleError","synthetic":false,"types":[]},{"text":"impl Error for AssumeRoleWithSAMLError","synthetic":false,"types":[]},{"text":"impl Error for AssumeRoleWithWebIdentityError","synthetic":false,"types":[]},{"text":"impl Error for DecodeAuthorizationMessageError","synthetic":false,"types":[]},{"text":"impl Error for GetAccessKeyInfoError","synthetic":false,"types":[]},{"text":"impl Error for GetCallerIdentityError","synthetic":false,"types":[]},{"text":"impl Error for GetFederationTokenError","synthetic":false,"types":[]},{"text":"impl Error for GetSessionTokenError","synthetic":false,"types":[]}];
implementors["rustyline"] = [{"text":"impl Error for ReadlineError","synthetic":false,"types":[]}];
implementors["semver"] = [{"text":"impl Error for SemVerError","synthetic":false,"types":[]},{"text":"impl Error for ReqParseError","synthetic":false,"types":[]}];
implementors["serde"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["serde_json"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["serde_urlencoded"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["slog"] = [{"text":"impl&lt;D&gt; Error for MutexDrainError&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Drain,<br>&nbsp;&nbsp;&nbsp;&nbsp;D::Err: Debug + Display + Error,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["sst_importer"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["symbolic_common"] = [{"text":"impl Error for UnknownArchError","synthetic":false,"types":[]},{"text":"impl Error for UnknownLanguageError","synthetic":false,"types":[]}];
implementors["tame_gcs"] = [{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl Error for HttpError","synthetic":false,"types":[]},{"text":"impl Error for HttpStatusError","synthetic":false,"types":[]},{"text":"impl Error for IoError","synthetic":false,"types":[]},{"text":"impl Error for JsonError","synthetic":false,"types":[]},{"text":"impl Error for ApiError","synthetic":false,"types":[]}];
implementors["tame_oauth"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["tempfile"] = [{"text":"impl Error for PathPersistError","synthetic":false,"types":[]},{"text":"impl Error for PersistError","synthetic":false,"types":[]}];
implementors["term"] = [{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["tidb_query_datatype"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["tikv"] = [{"text":"impl Error for ReadPoolError","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl Error for ErrorInner","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl Error for ErrorInner","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl Error for ErrorInner","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl Error for ErrorInner","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["tikv_alloc"] = [{"text":"impl Error for ProfError","synthetic":false,"types":[]}];
implementors["tikv_util"] = [{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl Error for ConfigError","synthetic":false,"types":[]},{"text":"impl Error for DeadlineError","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Error for ScheduleError&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Error for Full","synthetic":false,"types":[]}];
implementors["time"] = [{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl Error for ConversionRange","synthetic":false,"types":[]},{"text":"impl Error for ComponentRange","synthetic":false,"types":[]},{"text":"impl Error for IndeterminateOffset","synthetic":false,"types":[]},{"text":"impl Error for Format","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["tokio"] = [{"text":"impl Error for ReuniteError","synthetic":false,"types":[]},{"text":"impl Error for ReuniteError","synthetic":false,"types":[]},{"text":"impl Error for ReuniteError","synthetic":false,"types":[]},{"text":"impl Error for ReuniteError","synthetic":false,"types":[]},{"text":"impl Error for JoinError","synthetic":false,"types":[]},{"text":"impl Error for TryCurrentError","synthetic":false,"types":[]},{"text":"impl Error for RecvError","synthetic":false,"types":[]},{"text":"impl Error for TryRecvError","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Debug&gt; Error for SendError&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Debug&gt; Error for TrySendError&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Error for RecvError","synthetic":false,"types":[]},{"text":"impl Error for TryRecvError","synthetic":false,"types":[]},{"text":"impl Error for ClosedError","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Debug&gt; Error for SendTimeoutError&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Error for TryLockError","synthetic":false,"types":[]},{"text":"impl Error for RecvError","synthetic":false,"types":[]},{"text":"impl Error for TryRecvError","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Debug&gt; Error for SendError&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl Error for Elapsed","synthetic":false,"types":[]}];
implementors["tokio_executor"] = [{"text":"impl Error for EnterError","synthetic":false,"types":[]},{"text":"impl Error for SpawnError","synthetic":false,"types":[]}];
implementors["tokio_openssl"] = [{"text":"impl&lt;S&gt; Error for HandshakeError&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Debug,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["tokio_timer"] = [{"text":"impl&lt;T:&nbsp;StdError + 'static&gt; Error for ThrottleError&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Error&gt; Error for Error&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["tokio_util"] = [{"text":"impl Error for LengthDelimitedCodecError","synthetic":false,"types":[]},{"text":"impl Error for LinesCodecError","synthetic":false,"types":[]}];
implementors["toml"] = [{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["txn_types"] = [{"text":"impl Error for ErrorInner","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["url"] = [{"text":"impl Error for ParseError","synthetic":false,"types":[]}];
implementors["uuid"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["walkdir"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["xml"] = [{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl Error for EmitterError","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()