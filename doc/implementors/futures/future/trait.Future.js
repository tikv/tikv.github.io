(function() {var implementors = {};
implementors["futures"] = [];
implementors["futures_util"] = [{"text":"impl&lt;Fut&gt; <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a> for <a class=\"struct\" href=\"futures_util/compat/struct.Compat.html\" title=\"struct futures_util::compat::Compat\">Compat</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture03</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,&nbsp;</span>","synthetic":false,"types":["futures_util::compat::compat03as01::Compat"]}];
implementors["minitrace"] = [{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a>&gt; <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a> for <a class=\"struct\" href=\"minitrace/future/struct.TraceSpawned.html\" title=\"struct minitrace::future::TraceSpawned\">TraceSpawned</a>&lt;T&gt;","synthetic":false,"types":["minitrace::future::TraceSpawned"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a>&gt; <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a> for <a class=\"struct\" href=\"minitrace/future/struct.TraceWrapped.html\" title=\"struct minitrace::future::TraceWrapped\">TraceWrapped</a>&lt;T&gt;","synthetic":false,"types":["minitrace::future::TraceWrapped"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a>&gt; <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a> for <a class=\"struct\" href=\"minitrace/future/struct.MayTraceRootFuture.html\" title=\"struct minitrace::future::MayTraceRootFuture\">MayTraceRootFuture</a>&lt;T&gt;","synthetic":false,"types":["minitrace::future::MayTraceRootFuture"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a>&gt; <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a> for <a class=\"struct\" href=\"minitrace/future/struct.TraceRootFuture.html\" title=\"struct minitrace::future::TraceRootFuture\">TraceRootFuture</a>&lt;T&gt;","synthetic":false,"types":["minitrace::future::TraceRootFuture"]}];
implementors["tokio_timer"] = [{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a> for <a class=\"struct\" href=\"tokio_timer/timeout/struct.Timeout.html\" title=\"struct tokio_timer::timeout::Timeout\">Timeout</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a>,&nbsp;</span>","synthetic":false,"types":["tokio_timer::timeout::Timeout"]},{"text":"impl <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a> for <a class=\"struct\" href=\"tokio_timer/struct.Delay.html\" title=\"struct tokio_timer::Delay\">Delay</a>","synthetic":false,"types":["tokio_timer::delay::Delay"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()