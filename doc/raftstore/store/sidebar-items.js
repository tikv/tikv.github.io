initSidebarItems({"constant":[["INIT_EPOCH_CONF_VER","The initial region epoch conf_version."],["INIT_EPOCH_VER","The initial region epoch version."],["RAFT_INIT_LOG_INDEX",""],["RAFT_INIT_LOG_TERM",""]],"enum":[["PdTask","Uses an asynchronous thread to tell PD something."],["RegionTask","Region related task"],["RequestPolicy","`RequestPolicy` decides how we handle a request."],["SnapEntry",""],["SnapError",""],["SnapState",""],["SplitCheckTask",""]],"fn":[["apply_sst_cf_file",""],["bootstrap_store",""],["build_sst_cf_file","Build a snapshot file for the given column family in sst format. If there are no key-value pairs fetched, no files will be created at `path`, otherwise the file will be created and synchronized."],["check_abort",""],["clear_meta","Delete all meta belong to the region. Results are stored in `wb`."],["clear_prepare_bootstrap_cluster",""],["clear_prepare_bootstrap_key",""],["copy_snapshot",""],["do_snapshot",""],["initial_region",""],["new_temp_engine",""],["prepare_bootstrap_cluster","The first phase of bootstrap cluster"],["write_initial_apply_state",""],["write_initial_raft_state",""],["write_peer_state",""]],"mod":[["bootstrap",""],["cmd_resp",""],["config",""],["fsm","Generally peers are state machines that represent a replica of a region, and store is also a special state machine that handles all requests across stores. They are mixed for now, will be separated in the future."],["local_metrics",""],["metrics",""],["msg",""],["peer",""],["peer_storage",""],["read_queue",""],["region_snapshot",""],["replication_mode",""],["snap",""],["transport",""],["util",""],["worker",""]],"struct":[["ApplyOptions",""],["AutoSplitController",""],["DestroyPeerJob",""],["FlowStatistics",""],["GlobalReplicationState","A global state that stores current replication mode and related metadata."],["KeyEntry",""],["LocalReader",""],["Peer",""],["PeerStat","Statistics about raft peer."],["PeerStorage",""],["ProposalContext","A bitmap contains some useful flags when dealing with `eraftpb::Entry`."],["ReadDelegate","A read only delegate of `Peer`."],["ReadStats",""],["RegionIterator","`RegionIterator` wrap a rocksdb iterator and only allow it to iterate in the region. It behaves as if underlying db only contains one region."],["RegionSnapshot","Snapshot of a region."],["SnapKey",""],["SnapManager","`SnapManagerCore` trace all current processing snapshots."],["SnapManagerBuilder",""],["SnapshotStatistics",""],["SplitCheckRunner",""],["SplitConfig",""],["SplitConfigManager",""],["StoreGroup","A registry that maps store to a group."]],"trait":[["AbstractPeer","A poor version of `Peer` to avoid port generic variables everywhere."],["FlowStatsReporter",""],["GenericSnapshot","`GenericSnapshot` is a snapshot not tied to any KV engines."],["RequestInspector","`RequestInspector` makes `RequestPolicy` for requests."],["Snapshot","`Snapshot` is a trait for snapshot. It's used in these scenarios:   1. build local snapshot   2. read local snapshot and then replicate it to remote raftstores   3. receive snapshot from remote raftstore and write it to local storage   4. apply snapshot   5. snapshot gc"]]});