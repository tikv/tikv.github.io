initSidebarItems({"constant":[["APPLY_WB_SHRINK_SIZE",""],["DEFAULT_APPLY_WB_SIZE",""],["SHRINK_PENDING_CMD_QUEUE_CAP",""]],"enum":[["ApplyResult","The possible returned value when applying logs."],["ChangeCmd",""],["ExecResult",""],["Msg",""],["TaskRes",""]],"fn":[["check_sst_for_ingestion",""],["compact_raft_log","Updates the `state` with given `compact_index` and `compact_term`."],["create_apply_batch_system",""],["get_entries_mem_size",""],["is_conf_change_cmd",""],["notify_region_removed","Calls the callback of `cmd` when the Region is removed."],["notify_req_region_removed",""],["notify_stale_command","Calls the callback of `cmd` when it can not be processed further."],["notify_stale_req",""],["should_sync_log","Checks if a write is needed to be issued after handling the command."],["should_write_to_engine","Checks if a write is needed to be issued before handling the command."]],"mod":[["confchange_cmd_metric",""]],"static":[["OBSERVE_ID_ALLOC",""]],"struct":[["Apply",""],["ApplyBatchSystem",""],["ApplyCallback",""],["ApplyContext",""],["ApplyDelegate","The apply delegate of a Region which is responsible for handling committed raft log entries of a Region."],["ApplyFsm",""],["ApplyMetrics",""],["ApplyPoller",""],["ApplyRes",""],["ApplyRouter",""],["Builder",""],["CatchUpLogs","A message that asks the delegate to apply to the given logs and then reply to target mailbox."],["ChangePeer",""],["ControlFsm",""],["ControlMsg",""],["Destroy",""],["ExecContext",""],["GenSnapTask",""],["NewSplitPeer",""],["ObserveCmd",""],["ObserveID","A unique identifier for checking stale observed commands."],["PendingCmd",""],["PendingCmdQueue","Commands waiting to be committed and applied."],["Proposal",""],["Range",""],["Registration",""],["WaitSourceMergeState","A struct that stores the state related to Merge."],["YieldState",""]],"trait":[["Notifier",""]]});